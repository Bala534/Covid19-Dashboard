[{"C:\\Users\\hi\\Desktop\\test1\\covid19\\src\\index.js":"1","C:\\Users\\hi\\Desktop\\test1\\covid19\\src\\serviceWorker.js":"2","C:\\Users\\hi\\Desktop\\test1\\covid19\\src\\Routes.jsx":"3","C:\\Users\\hi\\Desktop\\test1\\covid19\\src\\components\\container\\Global\\Global.jsx":"4","C:\\Users\\hi\\Desktop\\test1\\covid19\\src\\components\\container\\India\\India.jsx":"5","C:\\Users\\hi\\Desktop\\test1\\covid19\\src\\components\\charts\\IndiaMap\\StateWiseMap.jsx":"6","C:\\Users\\hi\\Desktop\\test1\\covid19\\src\\components\\container\\Global\\SubComponents\\Analytics.jsx":"7","C:\\Users\\hi\\Desktop\\test1\\covid19\\src\\components\\container\\Global\\SubComponents\\Cards.jsx":"8","C:\\Users\\hi\\Desktop\\test1\\covid19\\src\\components\\container\\Global\\SubComponents\\ChartsCard.jsx":"9","C:\\Users\\hi\\Desktop\\test1\\covid19\\src\\components\\container\\Global\\SubComponents\\GlobalMap.jsx":"10","C:\\Users\\hi\\Desktop\\test1\\covid19\\src\\components\\container\\Global\\SubComponents\\Table.jsx":"11","C:\\Users\\hi\\Desktop\\test1\\covid19\\src\\components\\container\\Global\\SubComponents\\NumberCard.jsx":"12","C:\\Users\\hi\\Desktop\\test1\\covid19\\src\\components\\ui\\ErrorBoundry\\ErrorBoundry.jsx":"13","C:\\Users\\hi\\Desktop\\test1\\covid19\\src\\components\\ui\\Footer\\Footer.jsx":"14","C:\\Users\\hi\\Desktop\\test1\\covid19\\src\\components\\ui\\Header\\Header.jsx":"15","C:\\Users\\hi\\Desktop\\test1\\covid19\\src\\components\\ui\\NavigationBar\\NavigationBar.jsx":"16","C:\\Users\\hi\\Desktop\\test1\\covid19\\src\\components\\charts\\DataMap\\DataMap.jsx":"17","C:\\Users\\hi\\Desktop\\test1\\covid19\\src\\components\\charts\\IndiaMap\\IndiaMap.jsx":"18","C:\\Users\\hi\\Desktop\\test1\\covid19\\src\\components\\charts\\PieChart\\CustomChart.jsx":"19","C:\\Users\\hi\\Desktop\\test1\\covid19\\src\\components\\charts\\SimpleLineChart\\SimpleLineChart.jsx":"20","C:\\Users\\hi\\Desktop\\test1\\covid19\\src\\components\\charts\\SimplePieChart\\SimplePieChart.jsx":"21","C:\\Users\\hi\\Desktop\\test1\\covid19\\src\\components\\ui\\GradientCardFooter\\GradientCardFooter.jsx":"22","C:\\Users\\hi\\Desktop\\test1\\covid19\\src\\components\\ui\\GradientCardTitle\\GradientCardTitle.jsx":"23","C:\\Users\\hi\\Desktop\\test1\\covid19\\src\\components\\ui\\SwitchBar\\SwitchBar.jsx":"24","C:\\Users\\hi\\Desktop\\test1\\covid19\\src\\components\\container\\India\\SubComponents\\Analytics.jsx":"25","C:\\Users\\hi\\Desktop\\test1\\covid19\\src\\components\\container\\India\\SubComponents\\Cards.jsx":"26","C:\\Users\\hi\\Desktop\\test1\\covid19\\src\\components\\container\\India\\SubComponents\\NumbersCard.jsx":"27","C:\\Users\\hi\\Desktop\\test1\\covid19\\src\\components\\charts\\TinyChart.jsx":"28","C:\\Users\\hi\\Desktop\\test1\\covid19\\src\\components\\container\\India\\SubComponents\\Table.jsx":"29","C:\\Users\\hi\\Desktop\\test1\\covid19\\src\\components\\ui\\DataCard\\DataCard.jsx":"30","C:\\Users\\hi\\Desktop\\test1\\covid19\\src\\components\\ui\\MapSwitchBar\\MapSwitchBar.jsx":"31","C:\\Users\\hi\\Desktop\\test1\\covid19\\src\\components\\ui\\NumericCard\\NumericCard.jsx":"32","C:\\Users\\hi\\Desktop\\test1\\covid19\\src\\components\\ui\\Pagination\\Pagination.jsx":"33"},{"size":756,"mtime":1611319712177,"results":"34","hashOfConfig":"35"},{"size":5227,"mtime":1611312721367,"results":"36","hashOfConfig":"35"},{"size":1466,"mtime":1611321304976,"results":"37","hashOfConfig":"35"},{"size":8671,"mtime":1611320984108,"results":"38","hashOfConfig":"35"},{"size":16927,"mtime":1611319810907,"results":"39","hashOfConfig":"35"},{"size":17672,"mtime":1611312721198,"results":"40","hashOfConfig":"35"},{"size":11772,"mtime":1611320941945,"results":"41","hashOfConfig":"35"},{"size":2662,"mtime":1611319633014,"results":"42","hashOfConfig":"35"},{"size":9152,"mtime":1611319929973,"results":"43","hashOfConfig":"35"},{"size":4529,"mtime":1611319839742,"results":"44","hashOfConfig":"35"},{"size":4594,"mtime":1611312721317,"results":"45","hashOfConfig":"35"},{"size":3617,"mtime":1611319852867,"results":"46","hashOfConfig":"35"},{"size":1741,"mtime":1611312721335,"results":"47","hashOfConfig":"35"},{"size":1490,"mtime":1611327688072,"results":"48","hashOfConfig":"35"},{"size":915,"mtime":1611331935343,"results":"49","hashOfConfig":"35"},{"size":2311,"mtime":1611317810802,"results":"50","hashOfConfig":"35"},{"size":4219,"mtime":1611320005701,"results":"51","hashOfConfig":"35"},{"size":5629,"mtime":1611312721196,"results":"52","hashOfConfig":"35"},{"size":3411,"mtime":1611312721296,"results":"53","hashOfConfig":"35"},{"size":5595,"mtime":1611312721301,"results":"54","hashOfConfig":"35"},{"size":971,"mtime":1611312721304,"results":"55","hashOfConfig":"35"},{"size":218,"mtime":1611318598049,"results":"56","hashOfConfig":"35"},{"size":277,"mtime":1611318651352,"results":"57","hashOfConfig":"35"},{"size":1026,"mtime":1611318909730,"results":"58","hashOfConfig":"35"},{"size":24650,"mtime":1611319381651,"results":"59","hashOfConfig":"35"},{"size":6024,"mtime":1611319460208,"results":"60","hashOfConfig":"35"},{"size":15075,"mtime":1611319553378,"results":"61","hashOfConfig":"35"},{"size":910,"mtime":1611312721305,"results":"62","hashOfConfig":"35"},{"size":11384,"mtime":1611312721327,"results":"63","hashOfConfig":"35"},{"size":1677,"mtime":1611319689849,"results":"64","hashOfConfig":"35"},{"size":1005,"mtime":1611318806696,"results":"65","hashOfConfig":"35"},{"size":4314,"mtime":1611318860712,"results":"66","hashOfConfig":"35"},{"size":5842,"mtime":1611320100837,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"gqg37z",{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"70"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"70"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":4,"source":"85","usedDeprecatedRules":"70"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":4,"source":"90","usedDeprecatedRules":"70"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"70"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":13,"source":"125","usedDeprecatedRules":"70"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"70"},"C:\\Users\\hi\\Desktop\\test1\\covid19\\src\\index.js",[],["143","144"],"C:\\Users\\hi\\Desktop\\test1\\covid19\\src\\serviceWorker.js",[],"C:\\Users\\hi\\Desktop\\test1\\covid19\\src\\Routes.jsx",[],"C:\\Users\\hi\\Desktop\\test1\\covid19\\src\\components\\container\\Global\\Global.jsx",["145","146"],"import React, { Component } from \"react\";\r\nimport \"../../../../src/components/Backup/App.css\";\r\nimport \"react-table-6/react-table.css\";\r\nimport ErrorBoundary from \"../../../components/ui/ErrorBoundry/ErrorBoundry\";\r\nimport Countrys from \"../../../utils/CountryList.json\";\r\nimport _ from \"lodash\";\r\nimport \"../../container/Global/Global.css\";\r\nimport Header from \"../../../components/ui/Header/Header\";\r\nimport NavigationBar from \"../../../components/ui/NavigationBar/NavigationBar\";\r\nimport Footer from \"../../../components/ui/Footer/Footer\";\r\nimport Table from \"./SubComponents/Table\";\r\nimport NumberCard from \"./SubComponents/NumberCard\";\r\nimport Analytics from \"./SubComponents/Analytics\";\r\nimport GlobalMap from \"./SubComponents/GlobalMap\";\r\nimport Cards from \"./SubComponents/Cards\";\r\nimport ChartsCard from \"./SubComponents/ChartsCard\";\r\n\r\nclass Global extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showGlobalChartType: \"AreaChart\",\r\n      searchString: \"\",\r\n      cards: [],\r\n      ui: \"/\",\r\n      width: 0,\r\n      height: 0,\r\n      globalTimelines: [],\r\n      setTooltipContent: \"\",\r\n      mapFilter: \"confirmed\",\r\n      filterByCases: \"confirmed\",\r\n      displayBySort: \"All\",\r\n      currentPage: 0,\r\n      currentCardPage: 0,\r\n      totalCardPages: 0,\r\n      totalPages: 0,\r\n      globalData: [],\r\n      deathsRate: [],\r\n      locationLoader: false,\r\n      selectedCountry: false,\r\n      data: [],\r\n      timelines: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.addEventListener(\"resize\", this.updateDimensions);\r\n\r\n    this.setState({\r\n      locationLoader: true,\r\n    });\r\n    window.addEventListener(\"focus\", () => {\r\n      this.getGlobalData();\r\n      this.getDailyData();\r\n      this.getDeathRates();\r\n      this.getCardsData([1]);\r\n    });\r\n\r\n    this.getGlobalData();\r\n    this.getDailyData();\r\n    this.getDeathRates();\r\n    this.getCardsData([1]);\r\n  }\r\n\r\n  getDeathRates() {\r\n    fetch(`https://covid19-global-api1.herokuapp.com/deaths-rate.json`, {\r\n      method: \"GET\",\r\n    })\r\n      .then((res) => res.json())\r\n      .then((response) => {\r\n        this.setState({\r\n          deathsRate: response,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        this.setState({\r\n          locationLoader: false,\r\n        });\r\n      });\r\n  }\r\n\r\n  getGlobalData() {\r\n    fetch(`https://covid19-global-api1.herokuapp.com/global.json`, {\r\n      header: { \"Access-Control-Allow-Origin\": \"*\" },\r\n      method: \"GET\",\r\n    })\r\n      .then((res) => res.json())\r\n      .then((response) => {\r\n        this.setState({\r\n          globalData: response,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        this.setState({\r\n          locationLoader: false,\r\n        });\r\n      });\r\n  }\r\n\r\n  getDailyData() {\r\n    fetch(`https://covid19.mathdro.id/api/daily`, {\r\n      method: \"GET\",\r\n    })\r\n      .then((res) => res.json())\r\n      .then((response) => {\r\n        this.setState({\r\n          globalTimelines: response,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        this.setState({\r\n          locationLoader: false,\r\n        });\r\n      });\r\n  }\r\n\r\n  getCardsData(cardId) {\r\n    let cards = [];\r\n    this.setState({\r\n      cards: [],\r\n      locationLoader: true,\r\n    });\r\n    cardId.map((location) => {\r\n      fetch(\r\n        `https://cors-proxy-pass.herokuapp.com/https://thevirustracker.com/free-api?countryTotals=ALL`,\r\n        {\r\n          method: \"GET\",\r\n        }\r\n      )\r\n        .then((res) => res.json())\r\n        .then((response) => {\r\n          this.setState({\r\n            locationLoader: false,\r\n            cards: cards.concat(response),\r\n          });\r\n        })\r\n        .catch((error) => {\r\n          this.setState({\r\n            locationLoader: false,\r\n          });\r\n        });\r\n    });\r\n  }\r\n\r\n  getChartsData(data) {\r\n    data.map((location) => {\r\n      fetch(\r\n        `https://cors-proxy-pass.herokuapp.com/https://thevirustracker.com/free-api?countryTimeline=${location}`,\r\n        {\r\n          method: \"GET\",\r\n        }\r\n      )\r\n        .then((res) => res.json())\r\n        .then((response) => {\r\n          this.setState((state) => {\r\n            const timelines = state.timelines.concat(response);\r\n            const locationLoader = false;\r\n            return {\r\n              timelines,\r\n              locationLoader,\r\n            };\r\n          });\r\n        })\r\n        .catch((error) => {\r\n          this.setState({\r\n            locationLoader: false,\r\n          });\r\n        });\r\n    });\r\n  }\r\n\r\n  onPageChanged = (data1) => {\r\n    const { currentPage, totalPages } = data1;\r\n\r\n    this.setState({\r\n      timelines: [],\r\n      locationLoader: true,\r\n    });\r\n    if (!this.state.selectedCountry) {\r\n      this.getChartsData(_.chunk(Object.keys(Countrys), 9)[currentPage - 1]);\r\n    }\r\n\r\n    this.setState({\r\n      currentPage: currentPage - 1,\r\n      totalPages: totalPages,\r\n    });\r\n  };\r\n\r\n  updateDimensions = () => {\r\n    this.setState({ width: window.innerWidth, height: window.innerHeight });\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"resize\", this.updateDimensions);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <ErrorBoundary>\r\n        <div className=\"Global\">\r\n          <div className=\"container\">\r\n            <div>\r\n              <Header\r\n                dashboard={\"Global\"}\r\n                history={this.props.history}\r\n                width={this.state.width}\r\n              />\r\n            </div>\r\n            <div style={{ minHeight: \"90vh\" }}>\r\n              <NumberCard globalData={this.state.globalData} />\r\n              <NavigationBar\r\n                type=\"Global\"\r\n                ui={this.state.ui}\r\n                options={[\"Analytics\", \"Card\", \"Table\", \"Map\"]}\r\n                optionRoutes={[\"/\", \"/card\", \"/table\", \"/map\"]}\r\n                onClick={(route) => {\r\n                  this.setState({\r\n                    ui: route,\r\n                  });\r\n                }}\r\n              />\r\n              {this.state.ui === \"/\" ? (\r\n                <Analytics\r\n                  globalTimelines={this.state.globalTimelines}\r\n                  deathsRate={this.state.deathsRate}\r\n                  globalData={this.state.globalData}\r\n                  showGlobalChartType={this.state.showGlobalChartType}\r\n                  filterByCases={this.state.filterByCases}\r\n                  onSwitchBar={(prop) => {\r\n                    this.setState({\r\n                      showGlobalChartType: prop,\r\n                    });\r\n                  }}\r\n                  onChange={(selectedOption) => {\r\n                    this.setState({\r\n                      filterByCases:\r\n                        selectedOption === null\r\n                          ? \"confirmed\"\r\n                          : selectedOption.value,\r\n                    });\r\n                  }}\r\n                />\r\n              ) : null}\r\n              {this.state.ui === \"/map\" ? (\r\n                <GlobalMap\r\n                  mapFilter={this.state.mapFilter}\r\n                  globalData={this.state.globalData}\r\n                  setTooltipContent={this.state.setTooltipContent}\r\n                  onSetTooltipContent={(content) => {\r\n                    this.setState({ setTooltipContent: content });\r\n                  }}\r\n                  onMapSwitch={(prop) => {\r\n                    this.setState({\r\n                      mapFilter: prop,\r\n                    });\r\n                  }}\r\n                />\r\n              ) : null}\r\n              {this.state.ui === \"/table\" ? (\r\n                <Table globalData={this.state.globalData} />\r\n              ) : null}\r\n              {this.state.ui === \"/card\" ? (\r\n                <Cards\r\n                  locationLoader={this.state.locationLoader}\r\n                  searchString={this.state.searchString}\r\n                  globalData={this.state.globalData}\r\n                  onSearch={(e) => {\r\n                    this.setState({\r\n                      searchString: e.target.value.toLowerCase(),\r\n                      selectedCountry: false,\r\n                    });\r\n                  }}\r\n                />\r\n              ) : null}\r\n              {this.state.ui === \"/chart\" ? (\r\n                <ChartsCard\r\n                  locationLoader={this.state.locationLoader}\r\n                  cards={this.state.cards}\r\n                  timelines={this.state.timelines}\r\n                  selectedCountry={this.state.selectedCountry}\r\n                  onPageChanged={this.onPageChanged}\r\n                />\r\n              ) : null}\r\n            </div>\r\n            <Footer />\r\n          </div>\r\n        </div>\r\n      </ErrorBoundary>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Global;\r\n","C:\\Users\\hi\\Desktop\\test1\\covid19\\src\\components\\container\\India\\India.jsx",[],"C:\\Users\\hi\\Desktop\\test1\\covid19\\src\\components\\charts\\IndiaMap\\StateWiseMap.jsx",["147","148"],"import React, { useState } from \"react\";\r\nimport { ComposableMap, Geographies, Geography } from \"react-simple-maps\";\r\nimport { scaleLog } from \"d3-scale\";\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport \"./indiaMap.css\";\r\nimport { useEffect } from \"react\";\r\nconst INDIA_TOPO_JSON = require(\"./india.topo.json\");\r\nconst andamannicobarislands = require(\"./states/andamannicobarislands.json\");\r\nconst arunachalpradesh = require(\"./states/arunachalpradesh.json\");\r\nconst andhrapradesh = require(\"./states/andhrapradesh.json\");\r\nconst assam = require(\"./states/assam.json\");\r\nconst bihar = require(\"./states/bihar.json\");\r\nconst chandigarh = require(\"./states/chandigarh.json\");\r\nconst chhattisgarh = require(\"./states/chhattisgarh.json\");\r\nconst dadranagarhaveli = require(\"./states/dadranagarhaveli.json\");\r\nconst delhi = require(\"./states/delhi.json\");\r\nconst karnataka = require(\"./states/karnataka.json\");\r\nconst kerala = require(\"./states/kerala.json\");\r\nconst goa = require(\"./states/goa.json\");\r\nconst gujarat = require(\"./states/gujarat.json\");\r\nconst haryana = require(\"./states/haryana.json\");\r\nconst himachalpradesh = require(\"./states/himachalpradesh.json\");\r\nconst jammukashmir = require(\"./states/jammukashmir.json\");\r\nconst jharkhand = require(\"./states/jharkhand.json\");\r\nconst ladakh = require(\"./states/ladakh.json\");\r\nconst lakshadweep = require(\"./states/lakshadweep.json\");\r\nconst madhyapradesh = require(\"./states/madhyapradesh.json\");\r\nconst maharashtra = require(\"./states/maharashtra.json\");\r\nconst manipur = require(\"./states/manipur.json\");\r\nconst meghalaya = require(\"./states/meghalaya.json\");\r\nconst mizoram = require(\"./states/mizoram.json\");\r\nconst nagaland = require(\"./states/nagaland.json\");\r\nconst odisha = require(\"./states/odisha.json\");\r\nconst puducherry = require(\"./states/puducherry.json\");\r\nconst punjab = require(\"./states/punjab.json\");\r\nconst rajasthan = require(\"./states/rajasthan.json\");\r\nconst sikkim = require(\"./states/sikkim.json\");\r\nconst nadu = require(\"./states/tamil-nadu.json\");\r\nconst telangana = require(\"./states/telangana.json\");\r\nconst tripura = require(\"./states/tripura.json\");\r\nconst uttarakhand = require(\"./states/uttarakhand.json\");\r\nconst uttarpradesh = require(\"./states/uttarpradesh.json\");\r\nconst westbengal = require(\"./states/westbengal.json\");\r\nconst STATE_TOPO_JSON = require(\"./states/andamannicobarislands.json\");\r\n\r\n// Red Variants\r\nconst COLOR_RANGE = [\"#ffedea\", \"#ffcec5\", \"#ffad9f\"];\r\n\r\nconst DEFAULT_COLOR = \"#EEE\";\r\n\r\nconst geographyStyle = {\r\n  default: {\r\n    outline: \"none\",\r\n  },\r\n  hover: {\r\n    fill: \"#F53\",\r\n    transition: \"all 250ms\",\r\n    outline: \"none\",\r\n  },\r\n  pressed: {\r\n    outline: \"none\",\r\n  },\r\n};\r\n\r\nfunction useWindowSize() {\r\n  const isClient = typeof window === \"object\";\r\n\r\n  function getSize() {\r\n    return {\r\n      width: isClient ? window.innerWidth : undefined,\r\n      height: isClient ? window.innerHeight : undefined,\r\n    };\r\n  }\r\n\r\n  const [windowSize, setWindowSize] = useState(getSize);\r\n\r\n  useEffect(() => {\r\n    if (!isClient) {\r\n      return false;\r\n    }\r\n\r\n    function handleResize() {\r\n      setWindowSize(getSize());\r\n    }\r\n\r\n    window.addEventListener(\"resize\", handleResize);\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return windowSize;\r\n}\r\n\r\nconst StateWiseMap = ({ data, stateName }) => {\r\n  const [tooltipContent, setTooltipContent] = useState(\"\");\r\n  const size = useWindowSize();\r\n\r\n  const colorScale = scaleLog().domain([1, 10]).range(COLOR_RANGE);\r\n\r\n  const onMouseEnter = (geo, current = { value: \"NA\" }) => {\r\n    return () => {\r\n      setTooltipContent({ ...current, geo });\r\n    };\r\n  };\r\n\r\n  const onMouseLeave = () => {\r\n    setTooltipContent(\"\");\r\n  };\r\n\r\n  const getGeoFile = (name) => {\r\n    switch (name) {\r\n      case \"andamannicobarislands\":\r\n        return andamannicobarislands;\r\n      case \"arunachalpradesh\":\r\n        return arunachalpradesh;\r\n      case \"andhrapradesh\":\r\n        return andhrapradesh;\r\n      case \"assam\":\r\n        return assam;\r\n      case \"bihar\":\r\n        return bihar;\r\n      case \"chandigarh\":\r\n        return chandigarh;\r\n      case \"chhattisgarh\":\r\n        return chhattisgarh;\r\n      case \"dadranagarhaveli\":\r\n        return dadranagarhaveli;\r\n      case \"delhi\":\r\n        return delhi;\r\n      case \"karnataka\":\r\n        return karnataka;\r\n      case \"kerala\":\r\n        return kerala;\r\n      case \"goa\":\r\n        return goa;\r\n      case \"gujarat\":\r\n        return gujarat;\r\n      case \"haryana\":\r\n        return haryana;\r\n      case \"himachalpradesh\":\r\n        return himachalpradesh;\r\n      case \"jammukashmir\":\r\n        return jammukashmir;\r\n      case \"jharkhand\":\r\n        return jharkhand;\r\n      case \"ladakh\":\r\n        return ladakh;\r\n      case \"lakshadweep\":\r\n        return lakshadweep;\r\n      case \"madhyapradesh\":\r\n        return madhyapradesh;\r\n      case \"maharashtra\":\r\n        return maharashtra;\r\n      case \"manipur\":\r\n        return manipur;\r\n      case \"meghalaya\":\r\n        return meghalaya;\r\n      case \"mizoram\":\r\n        return mizoram;\r\n      case \"nagaland\":\r\n        return nagaland;\r\n      case \"odisha\":\r\n        return odisha;\r\n      case \"puducherry\":\r\n        return puducherry;\r\n      case \"punjab\":\r\n        return punjab;\r\n      case \"rajasthan\":\r\n        return rajasthan;\r\n      case \"sikkim\":\r\n        return sikkim;\r\n      case \"nadu\":\r\n        return nadu;\r\n      case \"telangana\":\r\n        return telangana;\r\n      case \"tripura\":\r\n        return tripura;\r\n      case \"uttarakhand\":\r\n        return uttarakhand;\r\n      case \"uttarpradesh\":\r\n        return uttarpradesh;\r\n      case \"westbengal\":\r\n        return westbengal;\r\n      default:\r\n        return gujarat;\r\n    }\r\n  };\r\n\r\n  const getScale = (name) => {\r\n    switch (name) {\r\n      case \"andamannicobarislands\":\r\n        return 1000;\r\n      case \"arunachalpradesh\":\r\n        return 2200;\r\n      case \"andhrapradesh\":\r\n        return 1300;\r\n      case \"assam\":\r\n        return 2200;\r\n      case \"bihar\":\r\n        return 2700;\r\n      case \"chandigarh\":\r\n        return 3000;\r\n      case \"chhattisgarh\":\r\n        return 1600;\r\n      case \"dadranagarhaveli\":\r\n        return 10000;\r\n      case \"delhi\":\r\n        return 23000;\r\n      case \"karnataka\":\r\n        return 1600;\r\n      case \"kerala\":\r\n        return 2400;\r\n      case \"goa\":\r\n        return 12000;\r\n      case \"gujarat\":\r\n        return 2100;\r\n      case \"haryana\":\r\n        return 3300;\r\n      case \"himachalpradesh\":\r\n        return 3400;\r\n      case \"jammukashmir\":\r\n        return 3700;\r\n      case \"jharkhand\":\r\n        return 2800;\r\n      case \"ladakh\":\r\n        return 3300;\r\n      case \"lakshadweep\":\r\n        return 2000;\r\n      case \"madhyapradesh\":\r\n        return 1400;\r\n      case \"maharashtra\":\r\n        return 1500;\r\n      case \"manipur\":\r\n        return 5000;\r\n      case \"meghalaya\":\r\n        return 4300;\r\n      case \"mizoram\":\r\n        return 4400;\r\n      case \"nagaland\":\r\n        return 5500;\r\n      case \"odisha\":\r\n        return 2100;\r\n      case \"puducherry\":\r\n        return 2000;\r\n      case \"punjab\":\r\n        return 3500;\r\n      case \"rajasthan\":\r\n        return 1400;\r\n      case \"sikkim\":\r\n        return 6000;\r\n      case \"nadu\":\r\n        return 580;\r\n      case \"telangana\":\r\n        return 2600;\r\n      case \"tripura\":\r\n        return 6000;\r\n      case \"uttarakhand\":\r\n        return 3600;\r\n      case \"uttarpradesh\":\r\n        return 1500;\r\n      case \"westbengal\":\r\n        return 2000;\r\n      default:\r\n        return 2100;\r\n    }\r\n  };\r\n\r\n  const getCenter = (name) => {\r\n    switch (name) {\r\n      case \"andamannicobarislands\":\r\n        return [\r\n          getGeoFile(stateName)[\"transform\"][\"translate\"][0] + 3,\r\n          getGeoFile(stateName)[\"transform\"][\"translate\"][1] + 2,\r\n        ];\r\n      case \"arunachalpradesh\":\r\n        return [\r\n          getGeoFile(stateName)[\"transform\"][\"translate\"][0] + 3,\r\n          getGeoFile(stateName)[\"transform\"][\"translate\"][1] + 1.5,\r\n        ];\r\n      case \"andhrapradesh\":\r\n        return [\r\n          getGeoFile(stateName)[\"transform\"][\"translate\"][0] + 3,\r\n          getGeoFile(stateName)[\"transform\"][\"translate\"][1] + 4,\r\n        ];\r\n      case \"assam\":\r\n        return [\r\n          getGeoFile(stateName)[\"transform\"][\"translate\"][0] + 3,\r\n          getGeoFile(stateName)[\"transform\"][\"translate\"][1] + 2,\r\n        ];\r\n      case \"bihar\":\r\n        return [\r\n          getGeoFile(stateName)[\"transform\"][\"translate\"][0] + 2.5,\r\n          getGeoFile(stateName)[\"transform\"][\"translate\"][1] + 1.5,\r\n        ];\r\n      case \"chandigarh\":\r\n        return [\r\n          getGeoFile(stateName)[\"transform\"][\"translate\"][0] + 3,\r\n          getGeoFile(stateName)[\"transform\"][\"translate\"][1] + 2,\r\n        ];\r\n      case \"chhattisgarh\":\r\n        return [\r\n          getGeoFile(stateName)[\"transform\"][\"translate\"][0] + 3,\r\n          getGeoFile(stateName)[\"transform\"][\"translate\"][1] + 3.2,\r\n        ];\r\n      case \"dadranagarhaveli\":\r\n        return [\r\n          getGeoFile(stateName)[\"transform\"][\"translate\"][0] + 0.2,\r\n          getGeoFile(stateName)[\"transform\"][\"translate\"][1] + 0.8,\r\n        ];\r\n      case \"delhi\":\r\n        return [\r\n          getGeoFile(stateName)[\"transform\"][\"translate\"][0] + 0.2,\r\n          getGeoFile(stateName)[\"transform\"][\"translate\"][1] + 0.25,\r\n        ];\r\n      case \"karnataka\":\r\n        return [\r\n          getGeoFile(stateName)[\"transform\"][\"translate\"][0] + 3,\r\n          getGeoFile(stateName)[\"transform\"][\"translate\"][1] + 3.5,\r\n        ];\r\n      case \"kerala\":\r\n        return [\r\n          getGeoFile(stateName)[\"transform\"][\"translate\"][0] + 2,\r\n          getGeoFile(stateName)[\"transform\"][\"translate\"][1] + 2,\r\n        ];\r\n      case \"goa\":\r\n        return [\r\n          getGeoFile(stateName)[\"transform\"][\"translate\"][0] + 0.5,\r\n          getGeoFile(stateName)[\"transform\"][\"translate\"][1] + 0.5,\r\n        ];\r\n      case \"gujarat\":\r\n        return [\r\n          getGeoFile(stateName)[\"transform\"][\"translate\"][0] + 3,\r\n          getGeoFile(stateName)[\"transform\"][\"translate\"][1] + 2.5,\r\n        ];\r\n      case \"haryana\":\r\n        return [\r\n          getGeoFile(stateName)[\"transform\"][\"translate\"][0] + 1.5,\r\n          getGeoFile(stateName)[\"transform\"][\"translate\"][1] + 1.7,\r\n        ];\r\n      case \"himachalpradesh\":\r\n        return [\r\n          getGeoFile(stateName)[\"transform\"][\"translate\"][0] + 1.6,\r\n          getGeoFile(stateName)[\"transform\"][\"translate\"][1] + 1.5,\r\n        ];\r\n      case \"jammukashmir\":\r\n        return [\r\n          getGeoFile(stateName)[\"transform\"][\"translate\"][0] + 1.5,\r\n          getGeoFile(stateName)[\"transform\"][\"translate\"][1] + 1.5,\r\n        ];\r\n      case \"jharkhand\":\r\n        return [\r\n          getGeoFile(stateName)[\"transform\"][\"translate\"][0] + 2.2,\r\n          getGeoFile(stateName)[\"transform\"][\"translate\"][1] + 1.7,\r\n        ];\r\n      case \"ladakh\":\r\n        return [\r\n          getGeoFile(stateName)[\"transform\"][\"translate\"][0] + 3,\r\n          getGeoFile(stateName)[\"transform\"][\"translate\"][1] + 2,\r\n        ];\r\n      case \"lakshadweep\":\r\n        return [\r\n          getGeoFile(stateName)[\"transform\"][\"translate\"][0] - 2,\r\n          getGeoFile(stateName)[\"transform\"][\"translate\"][1] + 1,\r\n        ];\r\n      case \"madhyapradesh\":\r\n        return [\r\n          getGeoFile(stateName)[\"transform\"][\"translate\"][0] + 4,\r\n          getGeoFile(stateName)[\"transform\"][\"translate\"][1] + 3,\r\n        ];\r\n      case \"maharashtra\":\r\n        return [\r\n          getGeoFile(stateName)[\"transform\"][\"translate\"][0] + 3.7,\r\n          getGeoFile(stateName)[\"transform\"][\"translate\"][1] + 3.3,\r\n        ];\r\n      case \"manipur\":\r\n        return [\r\n          getGeoFile(stateName)[\"transform\"][\"translate\"][0] + 1,\r\n          getGeoFile(stateName)[\"transform\"][\"translate\"][1] + 1,\r\n        ];\r\n      case \"meghalaya\":\r\n        return [\r\n          getGeoFile(stateName)[\"transform\"][\"translate\"][0] + 1.5,\r\n          getGeoFile(stateName)[\"transform\"][\"translate\"][1] + 0.7,\r\n        ];\r\n      case \"mizoram\":\r\n        return [\r\n          getGeoFile(stateName)[\"transform\"][\"translate\"][0] + 1,\r\n          getGeoFile(stateName)[\"transform\"][\"translate\"][1] + 1.3,\r\n        ];\r\n      case \"nagaland\":\r\n        return [\r\n          getGeoFile(stateName)[\"transform\"][\"translate\"][0] + 1,\r\n          getGeoFile(stateName)[\"transform\"][\"translate\"][1] + 0.9,\r\n        ];\r\n      case \"odisha\":\r\n        return [\r\n          getGeoFile(stateName)[\"transform\"][\"translate\"][0] + 3,\r\n          getGeoFile(stateName)[\"transform\"][\"translate\"][1] + 2.5,\r\n        ];\r\n      case \"puducherry\":\r\n        return [\r\n          getGeoFile(stateName)[\"transform\"][\"translate\"][0] + 3,\r\n          getGeoFile(stateName)[\"transform\"][\"translate\"][1] + 2,\r\n        ];\r\n      case \"punjab\":\r\n        return [\r\n          getGeoFile(stateName)[\"transform\"][\"translate\"][0] + 1.4,\r\n          getGeoFile(stateName)[\"transform\"][\"translate\"][1] + 1.5,\r\n        ];\r\n      case \"rajasthan\":\r\n        return [\r\n          getGeoFile(stateName)[\"transform\"][\"translate\"][0] + 4,\r\n          getGeoFile(stateName)[\"transform\"][\"translate\"][1] + 3.5,\r\n        ];\r\n      case \"sikkim\":\r\n        return [\r\n          getGeoFile(stateName)[\"transform\"][\"translate\"][0] + 0.3,\r\n          getGeoFile(stateName)[\"transform\"][\"translate\"][1] + 0.5,\r\n        ];\r\n      case \"nadu\":\r\n        return [\r\n          getGeoFile(stateName)[\"transform\"][\"translate\"][0] + 5,\r\n          getGeoFile(stateName)[\"transform\"][\"translate\"][1] + 11,\r\n        ];\r\n      case \"telangana\":\r\n        return [\r\n          getGeoFile(stateName)[\"transform\"][\"translate\"][0] + 1.5,\r\n          getGeoFile(stateName)[\"transform\"][\"translate\"][1] + 2,\r\n        ];\r\n      case \"tripura\":\r\n        return [\r\n          getGeoFile(stateName)[\"transform\"][\"translate\"][0] + 0.6,\r\n          getGeoFile(stateName)[\"transform\"][\"translate\"][1] + 0.8,\r\n        ];\r\n      case \"uttarakhand\":\r\n        return [\r\n          getGeoFile(stateName)[\"transform\"][\"translate\"][0] + 1.6,\r\n          getGeoFile(stateName)[\"transform\"][\"translate\"][1] + 1.4,\r\n        ];\r\n      case \"uttarpradesh\":\r\n        return [\r\n          getGeoFile(stateName)[\"transform\"][\"translate\"][0] + 3,\r\n          getGeoFile(stateName)[\"transform\"][\"translate\"][1] + 3.4,\r\n        ];\r\n      case \"westbengal\":\r\n        return [\r\n          getGeoFile(stateName)[\"transform\"][\"translate\"][0] + 3,\r\n          getGeoFile(stateName)[\"transform\"][\"translate\"][1] + 3,\r\n        ];\r\n      default:\r\n        return [\r\n          getGeoFile(stateName)[\"transform\"][\"translate\"][0] + 3,\r\n          getGeoFile(stateName)[\"transform\"][\"translate\"][1] + 2.5,\r\n        ];\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"indiamap\">\r\n      {tooltipContent !== \"\" ? (\r\n        <ReactTooltip>\r\n          <div>\r\n            <span\r\n              style={{\r\n                fontWeight: \"bold\",\r\n                fontSize: 16,\r\n                color: \"rgb(64, 75, 105)\",\r\n              }}\r\n            >\r\n              {tooltipContent.geo.properties.district}\r\n            </span>\r\n            <br />\r\n            <span\r\n              style={{\r\n                fontWeight: \"bold\",\r\n                fontSize: 16,\r\n                color: \"rgb(228, 51, 57)\",\r\n              }}\r\n            >\r\n              {typeof tooltipContent.confirmed !== \"undefined\"\r\n                ? \"Confirmed: \"\r\n                : \"Confirmed: 0\"}\r\n\r\n              {typeof tooltipContent.confirmed !== \"undefined\"\r\n                ? tooltipContent.confirmed\r\n                : null}\r\n              {typeof tooltipContent.confirmed !== \"undefined\" ? (\r\n                Number(tooltipContent.delta.confirmed) !== 0 ? (\r\n                  <span style={{ fontSize: 17, fontWeight: \"bold\" }}>\r\n                    &#9650; {tooltipContent.delta.confirmed}\r\n                  </span>\r\n                ) : null\r\n              ) : null}\r\n            </span>\r\n          </div>\r\n        </ReactTooltip>\r\n      ) : null}\r\n      <ComposableMap\r\n        projectionConfig={{\r\n          scale: getScale(stateName),\r\n          center: getCenter(stateName),\r\n        }}\r\n        projection=\"geoMercator\"\r\n        height={\r\n          size.width < 1500 && size.width > 768\r\n            ? 500\r\n            : size.width <= 768 && size.width > 400\r\n            ? 400\r\n            : size.width <= 400\r\n            ? 120\r\n            : Math.floor(size.width / 10)\r\n        }\r\n        width={\r\n          size.width < 1500 && size.width > 768\r\n            ? 900\r\n            : size.width <= 768 && size.width > 400\r\n            ? 600\r\n            : size.width <= 400\r\n            ? 220\r\n            : Math.floor(size.width / 5)\r\n        }\r\n        data-tip=\"\"\r\n      >\r\n        <Geographies geography={getGeoFile(stateName)}>\r\n          {({ geographies }) =>\r\n            geographies.map((geo) => {\r\n              const current = Object.keys(data).find(\r\n                (s) => s === geo.properties.district\r\n              );\r\n\r\n              return (\r\n                <Geography\r\n                  key={geo.rsmKey}\r\n                  geography={geo}\r\n                  fill={\r\n                    data[current]\r\n                      ? colorScale(data[current].confirmed)\r\n                      : DEFAULT_COLOR\r\n                  }\r\n                  style={geographyStyle}\r\n                  onMouseEnter={onMouseEnter(geo, data[current])}\r\n                  onMouseLeave={onMouseLeave}\r\n                />\r\n              );\r\n            })\r\n          }\r\n        </Geographies>\r\n      </ComposableMap>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StateWiseMap;\r\n","C:\\Users\\hi\\Desktop\\test1\\covid19\\src\\components\\container\\Global\\SubComponents\\Analytics.jsx",["149","150","151","152"],"import React, { Component } from \"react\";\r\nimport GradientCardTitle from \"../../../ui/GradientCardTitle/GradientCardTitle\"\r\nimport SwitchBar from \"../../../ui/SwitchBar/SwitchBar\";\r\nimport SimpleLineChart from \"../../../charts/SimpleLineChart/SimpleLineChart\";\r\nimport CustomChart from \"../../../charts/PieChart/CustomChart\";\r\nimport GradientCardFooter from \"../../../ui/GradientCardFooter/GradientCardFooter\";\r\nimport SimplePieChart from \"../../../charts/SimplePieChart/SimplePieChart\";\r\nimport Select from \"react-select\";\r\n\r\nclass Analytics extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    const colourStyles = {\r\n      control: (styles) => ({\r\n        ...styles,\r\n        backgroundColor: \"white\",\r\n        marginRight: 15,\r\n        marginBottom: 15,\r\n      }),\r\n      option: (styles, { data, isDisabled, isFocused, isSelected }) => {\r\n        return {\r\n          ...styles,\r\n          backgroundColor: isDisabled\r\n            ? null\r\n            : isSelected\r\n            ? \"#404b69\"\r\n            : isFocused\r\n            ? \"white\"\r\n            : null,\r\n          color: isDisabled ? \"#ccc\" : isSelected ? \"white\" : \"#404b69\",\r\n          cursor: isDisabled ? \"not-allowed\" : \"default\",\r\n\r\n          \":active\": {\r\n            ...styles[\":active\"],\r\n            backgroundColor: !isDisabled && (isSelected ? \"#404b69\" : \"white\"),\r\n          },\r\n        };\r\n      },\r\n    };\r\n\r\n    let totalData =\r\n      this.props.globalTimelines.length !== 0\r\n        ? this.props.globalTimelines.map((cases, index) => {\r\n            return {\r\n              name: cases.reportDate,\r\n              Confirmed: Number(cases.totalConfirmed),\r\n              Active:\r\n                Number(cases.totalConfirmed) -\r\n                Number(cases.totalRecovered) -\r\n                Number(cases.deaths.total),\r\n              Recovered: Number(cases.totalRecovered),\r\n              Deaths: Number(cases.deaths.total),\r\n              dailyConfirmed: Number(cases.deltaConfirmed),\r\n              dailyActive:\r\n                index === 0\r\n                  ? Number(cases.totalConfirmed) -\r\n                    Number(cases.totalRecovered) -\r\n                    Number(cases.deaths.total)\r\n                  : Number(cases.totalConfirmed) -\r\n                    Number(cases.totalRecovered) -\r\n                    Number(cases.deaths.total) -\r\n                    (Number(\r\n                      this.props.globalTimelines[index - 1].totalConfirmed\r\n                    ) -\r\n                      Number(\r\n                        this.props.globalTimelines[index - 1].totalRecovered\r\n                      ) -\r\n                      Number(\r\n                        this.props.globalTimelines[index - 1].deaths.total\r\n                      )),\r\n              dailyRecovered: Number(cases.deltaRecovered),\r\n              dailyDeaths:\r\n                index === 0\r\n                  ? Number(cases.deaths.total)\r\n                  : Number(cases.deaths.total) -\r\n                    Number(this.props.globalTimelines[index - 1].deaths.total),\r\n            };\r\n          })\r\n        : [];\r\n\r\n    let totalDeathsByAge =\r\n      this.props.deathsRate.length !== 0\r\n        ? Object.values(\r\n            this.props.deathsRate.filter(\r\n              (type) => Object.keys(type)[0] === \"deathsRateByAge\"\r\n            )[0]\r\n          )[0].map((cases, index) => {\r\n            return {\r\n              name: cases.age,\r\n              [\"Rate (%)\"]: cases.all_cases.replace(/[^0-9.]/g, \"\"),\r\n              [\"Rate in confirmed cases(%)\"]: cases.confirmed_cases.replace(\r\n                /[^0-9.]/g,\r\n                \"\"\r\n              ),\r\n            };\r\n          })\r\n        : null;\r\n\r\n    let totalDeathsByCom =\r\n      this.props.deathsRate.length !== 0\r\n        ? Object.values(\r\n            this.props.deathsRate.filter(\r\n              (type) => Object.keys(type)[0] === \"deathsRateBycomorbidity\"\r\n            )[0]\r\n          )[0].map((cases, index) => {\r\n            return {\r\n              name: cases.age,\r\n              [\"Rate (%)\"]: cases.all_cases.replace(/[^0-9.]/g, \"\"),\r\n              [\"Rate in confirmed cases(%)\"]:\r\n                cases.confirmed_cases.replace(/[^0-9.]/g, \"\") === 0\r\n                  ? 0\r\n                  : cases.confirmed_cases.replace(/[^0-9.]/g, \"\"),\r\n            };\r\n          })\r\n        : null;\r\n\r\n    const Comparator = (a, b) => {\r\n      if (Number(a[1]) > Number(b[1])) return -1;\r\n      if (Number(a[1]) < Number(b[1])) return 1;\r\n      return 0;\r\n    };\r\n\r\n    var pieChartData =\r\n      this.props.globalData.length !== 0\r\n        ? this.props.globalData\r\n            .filter((country) => country.title !== \"World\")\r\n            .map((state) => {\r\n              return [state.title, Number(state[this.props.filterByCases])];\r\n            })\r\n        : [];\r\n\r\n    var deathsBySex =\r\n      this.props.deathsRate.length !== 0\r\n        ? Object.values(\r\n            this.props.deathsRate.filter(\r\n              (type) => Object.keys(type)[0] === \"deathsRateBySex\"\r\n            )[0]\r\n          )[0].map((cases, index) => {\r\n            return {\r\n              name: cases.sex,\r\n              value: Number(cases.confirmed_cases.replace(/[^0-9.]/g, \"\")),\r\n            };\r\n          })\r\n        : [];\r\n\r\n    pieChartData = pieChartData.sort(Comparator).slice(0, 10);\r\n\r\n    let Columns = [\r\n      { type: \"string\", label: \"name\" },\r\n      { type: \"number\", label: \"value\" },\r\n    ];\r\n\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-sm-4 col-12\">\r\n          <div className=\"gradient-card\">\r\n            <GradientCardTitle title={\"Total Confirmed cases daily\"} />\r\n            <SwitchBar\r\n              options={[\"Area\", \"Bar\"]}\r\n              optionValues={[\"AreaChart\", \"BarChart\"]}\r\n              onClick={(prop) => {\r\n                this.props.onSwitchBar(prop);\r\n              }}\r\n              showGlobalChartType={this.props.showGlobalChartType}\r\n            />\r\n            <SimpleLineChart\r\n              chart={this.props.showGlobalChartType}\r\n              customTooltip={true}\r\n              grid={false}\r\n              data={totalData}\r\n              labels={[\"Confirmed\"]}\r\n              colors={[\"#e43339\"]}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"col-sm-4 col-12\">\r\n          <div className=\"gradient-card\">\r\n            <GradientCardTitle title={\"Total Active cases daily\"} />\r\n            <SwitchBar\r\n              options={[\"Area\", \"Bar\"]}\r\n              optionValues={[\"AreaChart\", \"BarChart\"]}\r\n              onClick={(prop) => {\r\n                this.props.onSwitchBar(prop);\r\n              }}\r\n              showGlobalChartType={this.props.showGlobalChartType}\r\n            />\r\n            <SimpleLineChart\r\n              chart={this.props.showGlobalChartType}\r\n              customTooltip={true}\r\n              grid={false}\r\n              data={totalData}\r\n              labels={[\"Active\"]}\r\n              colors={[\"#192a56\"]}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"col-sm-4 col-12\">\r\n          <div className=\"gradient-card\">\r\n            <GradientCardTitle title={\"Total deaths daily\"} />\r\n            <SwitchBar\r\n              options={[\"Area\", \"Bar\"]}\r\n              optionValues={[\"AreaChart\", \"BarChart\"]}\r\n              onClick={(prop) => {\r\n                this.props.onSwitchBar(prop);\r\n              }}\r\n              showGlobalChartType={this.props.showGlobalChartType}\r\n            />\r\n            <SimpleLineChart\r\n              chart={this.props.showGlobalChartType}\r\n              customTooltip={true}\r\n              grid={false}\r\n              data={totalData}\r\n              labels={[\"Deaths\"]}\r\n              colors={[\"#535c68\"]}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"col-sm-6 col-12\">\r\n          <div className=\"gradient-card\">\r\n            <GradientCardTitle title={\"Top 10 countries by cases\"} />\r\n            <div className=\"row\" style={{ justifyContent: \"center\" }}>\r\n              <div className=\"col-sm-6\">\r\n                <Select\r\n                  isClearable={false}\r\n                  isSearchable={false}\r\n                  onChange={(selectedOption) => {\r\n                    this.props.onChange(selectedOption);\r\n                  }}\r\n                  styles={colourStyles}\r\n                  placeholder=\"Top 10 Confirmed\"\r\n                  options={[\r\n                    { value: \"confirmed\", label: \"Top 10 Confirmed\" },\r\n                    { value: \"active\", label: \"Top 10 Active\" },\r\n                    { value: \"deaths\", label: \"Top 10 Deaths\" },\r\n                    { value: \"recovered\", label: \"Top 10 Recovered\" },\r\n                  ]}\r\n                />\r\n              </div>\r\n            </div>\r\n            <CustomChart\r\n              placeholder={false}\r\n              emptyClassName={\"m-t-40\"}\r\n              chartArea={{ left: 10, top: 15, right: 10, bottom: 15 }}\r\n              rows={pieChartData}\r\n              columns={Columns}\r\n              chartType={\"PieChart\"}\r\n              height={\"270px\"}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"col-sm-6 col-12\">\r\n          <div className=\"gradient-card\">\r\n            <GradientCardTitle title={\"Fatality Rate By Age\"} />\r\n            <SimpleLineChart\r\n              chart={\"BarChart\"}\r\n              customTooltip={true}\r\n              grid={false}\r\n              data={totalDeathsByAge}\r\n              labels={[\"Rate (%)\"]}\r\n              colors={[\"#192a56\"]}\r\n            />\r\n            <GradientCardFooter\r\n              content={\r\n                \"The percentages do not have to add up to 100%, as they do NOT represent share of deaths by age group.\"\r\n              }\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"col-sm-6 col-12\">\r\n          <div className=\"gradient-card\">\r\n            <GradientCardTitle title={\"Fatality Rate By Gender\"} />\r\n            <div style={{ marginBottom: -24 }}>\r\n              <span style={{ color: \"#192a56\", fontWeight: \"bold\" }}>\r\n                Male{\" \"}\r\n                {deathsBySex.length !== 0\r\n                  ? deathsBySex.filter((stat) => stat.name === \"Male\")[0].value\r\n                  : 0}\r\n              </span>\r\n              <span\r\n                style={{\r\n                  marginLeft: 15,\r\n                  color: \"rgb(255, 82, 82)\",\r\n                  fontWeight: \"bold\",\r\n                }}\r\n              >\r\n                Female{\" \"}\r\n                {deathsBySex.length !== 0\r\n                  ? deathsBySex.filter((stat) => stat.name === \"Female\")[0]\r\n                      .value\r\n                  : 0}\r\n              </span>\r\n            </div>\r\n            <SimplePieChart data={deathsBySex} />\r\n            <GradientCardFooter\r\n              content={\r\n                \"The percentages do not have to add up to 100%, as they do NOT represent share of deaths by age group.\"\r\n              }\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"col-sm-6 col-12\">\r\n          <div className=\"gradient-card\">\r\n            <GradientCardTitle title={\"Fatality Rate By Comorbility\"} />\r\n            <SimpleLineChart\r\n              chart={\"BarChart\"}\r\n              customTooltip={true}\r\n              grid={false}\r\n              data={totalDeathsByCom}\r\n              labels={[\"Rate (%)\", \"Rate in confirmed cases(%)\"]}\r\n              colors={[\"#192a56\", \"#192a56\"]}\r\n            />\r\n            <GradientCardFooter\r\n              content={\r\n                \"The percentages do not have to add up to 100%, as they do NOT represent share of deaths by age group.\"\r\n              }\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Analytics;\r\n","C:\\Users\\hi\\Desktop\\test1\\covid19\\src\\components\\container\\Global\\SubComponents\\Cards.jsx",[],"C:\\Users\\hi\\Desktop\\test1\\covid19\\src\\components\\container\\Global\\SubComponents\\ChartsCard.jsx",["153","154","155","156"],"import React, { Component } from \"react\";\r\nimport Virus from \"../../../../assets/virus.gif\";\r\nimport Countrys from \"../../../../utils/CountryList.json\";\r\nimport Select from \"react-select\";\r\nimport SimpleLineChart from \"../../../charts/SimpleLineChart/SimpleLineChart\";\r\nimport Pagination from \"../../../ui/Pagination/Pagination\";\r\nimport _ from \"lodash\";\r\n\r\nclass ChartsCard extends Component {\r\n  render() {\r\n    const colourStyles = {\r\n      control: (styles) => ({\r\n        ...styles,\r\n        backgroundColor: \"white\",\r\n        marginRight: 15,\r\n        marginBottom: 15,\r\n      }),\r\n      option: (styles, { data, isDisabled, isFocused, isSelected }) => {\r\n        return {\r\n          ...styles,\r\n          backgroundColor: isDisabled\r\n            ? null\r\n            : isSelected\r\n            ? \"#404b69\"\r\n            : isFocused\r\n            ? \"white\"\r\n            : null,\r\n          color: isDisabled ? \"#ccc\" : isSelected ? \"white\" : \"#404b69\",\r\n          cursor: isDisabled ? \"not-allowed\" : \"default\",\r\n\r\n          \":active\": {\r\n            ...styles[\":active\"],\r\n            backgroundColor: !isDisabled && (isSelected ? \"#404b69\" : \"white\"),\r\n          },\r\n        };\r\n      },\r\n    };\r\n\r\n    const options = Object.keys(Countrys).map((location) => {\r\n      return {\r\n        value: location,\r\n        label: Countrys[location],\r\n      };\r\n    });\r\n\r\n    let date = new Date();\r\n    let todayDate =\r\n      date.getMonth() + 1 + \"/\" + date.getDate() + \"/\" + date.getFullYear();\r\n\r\n    return (\r\n      <>\r\n        <div>\r\n          <Select\r\n            isClearable={true}\r\n            onChange={(selectedOption) => {\r\n              this.setState({\r\n                timelines: [],\r\n                selectedCountry: true,\r\n              });\r\n              this.getChartsData(\r\n                selectedOption === null\r\n                  ? _.chunk(Object.keys(Countrys), 9)[0]\r\n                  : [selectedOption.value.toUpperCase()]\r\n              );\r\n            }}\r\n            styles={colourStyles}\r\n            options={options}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          {this.props.locationLoader === true ? (\r\n            <div style={{ width: \"100%\" }}>\r\n              <img src={Virus} alt=\"Loader\" />\r\n            </div>\r\n          ) : this.props.timelines.length !== 0 ? (\r\n            this.props.timelines.map((timeline, index1) => {\r\n              let data = Object.keys(timeline.timelineitems[0])\r\n                .filter((data) => data !== \"stat\" && data !== todayDate)\r\n                .map((dataKey, index) => {\r\n                  return {\r\n                    name: dataKey,\r\n                    Confirmed: timeline.timelineitems[0][dataKey].total_cases,\r\n                    Deaths: timeline.timelineitems[0][dataKey].total_deaths,\r\n                    Recovered:\r\n                      timeline.timelineitems[0][dataKey].total_recoveries,\r\n                    [\"New Conf.\"]:\r\n                      timeline.timelineitems[0][dataKey].new_daily_cases,\r\n                    [\"New Deaths\"]:\r\n                      timeline.timelineitems[0][dataKey].new_daily_deaths,\r\n                  };\r\n                });\r\n              let cardValue =\r\n                this.props.cards.length !== 0 &&\r\n                typeof Object.values(\r\n                  this.props.cards[0].countryitems[0]\r\n                ).filter(\r\n                  (country) =>\r\n                    country !== \"ok\" &&\r\n                    country.title === timeline.countrytimelinedata[0].info.title\r\n                )[0];\r\n              let filteredTitle = Object.values(\r\n                this.props.cards[0].countryitems[0]\r\n              ).filter(\r\n                (country) =>\r\n                  country !== \"ok\" &&\r\n                  country.title === timeline.countrytimelinedata[0].info.title\r\n              )[0];\r\n              let totalCases = Object.values(timeline.timelineitems[0])[\r\n                Object.values(timeline.timelineitems[0]).length - 2\r\n              ];\r\n              let confirmed =\r\n                cardValue !== \"undefined\"\r\n                  ? filteredTitle.total_cases\r\n                  : totalCases.total_cases;\r\n              let deaths =\r\n                cardValue !== \"undefined\"\r\n                  ? filteredTitle.total_deaths\r\n                  : totalCases.total_deaths;\r\n              let recovered =\r\n                cardValue !== \"undefined\"\r\n                  ? filteredTitle.total_recovered\r\n                  : totalCases.total_recoveries;\r\n              let NewConfirmed =\r\n                cardValue !== \"undefined\"\r\n                  ? filteredTitle.total_new_cases_today\r\n                  : totalCases.new_daily_cases;\r\n              let NewDeaths =\r\n                cardValue !== \"undefined\"\r\n                  ? filteredTitle.total_new_deaths_today\r\n                  : totalCases.new_daily_deaths;\r\n              let countryItemsFiltered = Object.values(\r\n                this.props.cards[0].countryitems[0]\r\n              ).filter(\r\n                (country) =>\r\n                  country.title === timeline.countrytimelinedata[0].info.title\r\n              )[0];\r\n              if (cardValue !== \"undefined\") {\r\n                data.push({\r\n                  name: todayDate,\r\n                  Confirmed: countryItemsFiltered.total_cases,\r\n                  Deaths: countryItemsFiltered.total_deaths,\r\n                  Recovered: countryItemsFiltered.total_recovered,\r\n                  [\"New Conf.\"]: countryItemsFiltered.total_new_cases_today,\r\n                  [\"New Deaths\"]: countryItemsFiltered.total_new_deaths_today,\r\n                });\r\n              }\r\n              return (\r\n                <div key={index1} className=\"col-sm-4 Chart-Card\">\r\n                  <div className=\"chart-card-style\">\r\n                    <label className=\"chart-card-title\">\r\n                      {timeline.countrytimelinedata[0].info.title}\r\n                    </label>\r\n                    <br />\r\n                    <div className=\"row justify-content-center\">\r\n                      <div className=\"chart-card-label-confirmed\">\r\n                        <div>\r\n                          {confirmed}\r\n                          {NewConfirmed === 0 ? null : (\r\n                            <span style={{ fontSize: 13 }}>\r\n                              {\"  \"}\r\n                              <span\r\n                                style={{\r\n                                  fontSize: 17,\r\n                                  fontWeight: \"bold\",\r\n                                }}\r\n                              >\r\n                                &#9650;\r\n                              </span>\r\n                              {NewConfirmed}\r\n                            </span>\r\n                          )}\r\n                        </div>\r\n                        <div>Confirmed</div>\r\n                      </div>\r\n                      <div className=\"chart-card-label-deaths\">\r\n                        <div>\r\n                          {deaths}\r\n                          {NewDeaths === 0 ? null : (\r\n                            <span style={{ fontSize: 13 }}>\r\n                              {\"  \"}\r\n                              <span\r\n                                style={{\r\n                                  fontSize: 17,\r\n                                  fontWeight: \"bold\",\r\n                                }}\r\n                              >\r\n                                &#9650;\r\n                              </span>\r\n                              {NewDeaths}\r\n                            </span>\r\n                          )}\r\n                        </div>\r\n                        <div>Deaths</div>\r\n                      </div>\r\n                      <div className=\"chart-card-label-recovered\">\r\n                        <div>{recovered}</div>\r\n                        <div>Recovered</div>\r\n                      </div>\r\n                    </div>\r\n                    <SimpleLineChart\r\n                      chart={\"AreaChart\"}\r\n                      labels={[\r\n                        \"Confirmed\",\r\n                        \"Recovered\",\r\n                        \"Deaths\",\r\n                        \"New Conf.\",\r\n                        \"New Deaths\",\r\n                      ]}\r\n                      colors={[\r\n                        \"#e43339\",\r\n                        \"#006266\",\r\n                        \"#535c68\",\r\n                        \"#192a56\",\r\n                        \"#192a56\",\r\n                      ]}\r\n                      data={data}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              );\r\n            })\r\n          ) : null}\r\n          <br />\r\n          {!this.props.selectedCountry ? (\r\n            <div className=\"row\" style={{ width: \"100%\", padding: 30 }}>\r\n              <Pagination\r\n                totalRecords={Object.keys(Countrys).length}\r\n                pageLimit={9}\r\n                pageNeighbours={1}\r\n                onPageChanged={this.props.onPageChanged}\r\n              />\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ChartsCard;\r\n","C:\\Users\\hi\\Desktop\\test1\\covid19\\src\\components\\container\\Global\\SubComponents\\GlobalMap.jsx",[],"C:\\Users\\hi\\Desktop\\test1\\covid19\\src\\components\\container\\Global\\SubComponents\\Table.jsx",[],"C:\\Users\\hi\\Desktop\\test1\\covid19\\src\\components\\container\\Global\\SubComponents\\NumberCard.jsx",[],"C:\\Users\\hi\\Desktop\\test1\\covid19\\src\\components\\ui\\ErrorBoundry\\ErrorBoundry.jsx",[],"C:\\Users\\hi\\Desktop\\test1\\covid19\\src\\components\\ui\\Footer\\Footer.jsx",[],"C:\\Users\\hi\\Desktop\\test1\\covid19\\src\\components\\ui\\Header\\Header.jsx",["157"],"import React from \"react\";\r\nimport Github from \"../../../assets/github1.png\";\r\nimport IndiaIcon from \"../../../assets/india.png\";\r\nimport World from \"../../../assets/world.png\";\r\nimport \"./Header.css\";\r\n\r\nconst Header = (props) => {\r\n  return (\r\n    <div>\r\n      <div className=\"Header\">\r\n        Covid-19 {props.dashboard} {props.width < 1024 ? \"\" : \" Dashboard\"}\r\n        <a\r\n          href=\"https://github.com/Bala534/Covid19-Dashboard\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          <img src={Github} alt=\"github\" className=\"github-icon\" />\r\n        </a>\r\n      </div>\r\n      <div className=\"Switch-dashboard\">\r\n        <img\r\n          onClick={() => props.history.push(\"/india\")}\r\n          src={IndiaIcon}\r\n          alt=\"India\"\r\n          className=\"india-icon\"\r\n        />\r\n        \r\n        \r\n        \r\n\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","C:\\Users\\hi\\Desktop\\test1\\covid19\\src\\components\\ui\\NavigationBar\\NavigationBar.jsx",[],"C:\\Users\\hi\\Desktop\\test1\\covid19\\src\\components\\charts\\DataMap\\DataMap.jsx",[],"C:\\Users\\hi\\Desktop\\test1\\covid19\\src\\components\\charts\\IndiaMap\\IndiaMap.jsx",[],"C:\\Users\\hi\\Desktop\\test1\\covid19\\src\\components\\charts\\PieChart\\CustomChart.jsx",[],"C:\\Users\\hi\\Desktop\\test1\\covid19\\src\\components\\charts\\SimpleLineChart\\SimpleLineChart.jsx",[],"C:\\Users\\hi\\Desktop\\test1\\covid19\\src\\components\\charts\\SimplePieChart\\SimplePieChart.jsx",[],["158","159"],"C:\\Users\\hi\\Desktop\\test1\\covid19\\src\\components\\ui\\GradientCardFooter\\GradientCardFooter.jsx",[],"C:\\Users\\hi\\Desktop\\test1\\covid19\\src\\components\\ui\\GradientCardTitle\\GradientCardTitle.jsx",[],"C:\\Users\\hi\\Desktop\\test1\\covid19\\src\\components\\ui\\SwitchBar\\SwitchBar.jsx",[],"C:\\Users\\hi\\Desktop\\test1\\covid19\\src\\components\\container\\India\\SubComponents\\Analytics.jsx",["160","161","162","163","164","165","166","167","168","169","170","171","172","173","174","175","176","177","178","179","180","181","182","183","184"],"import React, { Component } from \"react\";\r\nimport SwitchBar from \"../../../ui/SwitchBar/SwitchBar\";\r\nimport SimpleLineChart from \"../../../charts/SimpleLineChart/SimpleLineChart\";\r\nimport Select from \"react-select\";\r\nimport CustomChart from \"../../../charts/PieChart/CustomChart\";\r\nimport GradientCardTitle from \"../../../ui/GradientCardTitle/GradientCardTitle\";\r\nimport GradientCardFooter from \"../../../ui/GradientCardFooter/GradientCardFooter\";\r\nimport SimplePieChart from \"../../../charts/SimplePieChart/SimplePieChart\";\r\n\r\nclass Analytics extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { status: false, seconds: 0, started: false };\r\n  }\r\n\r\n  render() {\r\n    let toptenCities = [];\r\n\r\n    if (this.props.stateWiseCity.length !== 0) {\r\n      let data = {};\r\n      Object.values(this.props.stateWiseCity).map((city) => {\r\n        return Object.assign(data, city.districtData);\r\n      });\r\n\r\n      let sorted = Object.keys(data).sort((a, b) => {\r\n        return data[b][\"confirmed\"] - data[a][\"confirmed\"];\r\n      });\r\n      let filtered = sorted\r\n        .filter((data) => data !== \"Unassigned\")\r\n        .slice(0, 10);\r\n\r\n      toptenCities = filtered.map((city) => {\r\n        return { name: city, [\"Cases\"]: data[city].confirmed };\r\n      });\r\n    }\r\n\r\n    let totalDataDaily =\r\n      this.props.india.length !== 0\r\n        ? this.props.india.cases_time_series.map((cases) => {\r\n            return cases.dailyrecovered !== \"\"\r\n              ? {\r\n                  name: cases.date,\r\n                  Confirmed: Number(cases.dailyconfirmed),\r\n                  Active:\r\n                    Number(cases.dailyconfirmed) -\r\n                    Number(cases.dailyrecovered) -\r\n                    Number(cases.dailydeceased),\r\n                  Recovered: Number(cases.dailyrecovered),\r\n                  Deaths: Number(cases.dailydeceased),\r\n                }\r\n              : null;\r\n          })\r\n        : null;\r\n\r\n    let totalData =\r\n      this.props.india.length !== 0\r\n        ? this.props.india.cases_time_series.map((cases) => {\r\n            return cases.totalrecovered !== \"\"\r\n              ? {\r\n                  name: cases.date,\r\n                  Confirmed: Number(cases.totalconfirmed),\r\n                  Active:\r\n                    Number(cases.totalconfirmed) -\r\n                    Number(cases.totalrecovered) -\r\n                    Number(cases.totaldeceased),\r\n                  Recovered: Number(cases.totalrecovered),\r\n                  Deaths: Number(cases.totaldeceased),\r\n                  dailyConfirmed: Number(cases.dailyconfirmed),\r\n                  dailyActive:\r\n                    Number(cases.dailyconfirmed) -\r\n                    Number(cases.dailyrecovered) -\r\n                    Number(cases.dailydeceased),\r\n                  dailyRecovered: Number(cases.dailyrecovered),\r\n                  dailyDeaths: Number(cases.dailydeceased),\r\n                }\r\n              : null;\r\n          })\r\n        : null;\r\n\r\n    var sortable =\r\n      this.props.india.length !== 0 ? this.props.india.statewise : [];\r\n\r\n    const Comparator = (a, b) => {\r\n      if (Number(a[1]) > Number(b[1])) return -1;\r\n      if (Number(a[1]) < Number(b[1])) return 1;\r\n      return 0;\r\n    };\r\n\r\n    var pieChartData =\r\n      this.props.india.length !== 0\r\n        ? sortable\r\n            .filter(\r\n              (record) =>\r\n                record.state !== \"Total\" && record.state !== \"State Unassigned\"\r\n            )\r\n            .map((state) => {\r\n              return [state.state, Number(state[this.props.filterByCases])];\r\n            })\r\n        : [];\r\n\r\n    pieChartData = pieChartData.sort(Comparator).slice(0, 10);\r\n\r\n    let sortedCuntryName = [];\r\n    if (pieChartData.length !== 0) {\r\n      pieChartData.map((data) => {\r\n        sortedCuntryName.push(data[0]);\r\n      });\r\n    }\r\n\r\n    let sortedCountryCode =\r\n      this.props.india.length !== 0\r\n        ? sortable\r\n            .filter(\r\n              (record) =>\r\n                record.state !== \"Total\" &&\r\n                sortedCuntryName.includes(record.state)\r\n            )\r\n            .map((code) => {\r\n              return code.statecode.toLowerCase();\r\n            })\r\n        : [];\r\n\r\n    let sortedCountryName =\r\n      this.props.india.length !== 0\r\n        ? sortable\r\n            .filter(\r\n              (record) =>\r\n                record.state !== \"Total\" &&\r\n                sortedCuntryName.includes(record.state)\r\n            )\r\n            .map((code) => {\r\n              return code.state;\r\n            })\r\n        : [];\r\n\r\n    let dailyConfirmedStatus = this.props.dailyStatus.filter(\r\n      (data) => data.status === \"Confirmed\"\r\n    );\r\n    let dailyRecoveredStatus = this.props.dailyStatus.filter(\r\n      (data) => data.status === \"Recovered\"\r\n    );\r\n    let dailyDeathsStatus = this.props.dailyStatus.filter(\r\n      (data) => data.status === \"Deceased\"\r\n    );\r\n\r\n    let count = (code, data, index) => {\r\n      let confirmed = 0;\r\n      for (var i = 0; i <= index; i++) {\r\n        confirmed += Number(dailyConfirmedStatus[i][code]);\r\n      }\r\n      return confirmed;\r\n    };\r\n\r\n    let dailyConfirmedFiltered = dailyConfirmedStatus.map((data, index) => {\r\n      let arr = [];\r\n\r\n      sortedCountryCode.map((code) => {\r\n        arr.push({\r\n          [code.toUpperCase()]: count(code, dailyConfirmedStatus, index),\r\n        });\r\n      });\r\n      return { [data.date]: arr };\r\n    });\r\n\r\n    let dailyRecoveredFiltered = dailyRecoveredStatus.map((data) => {\r\n      let arr = [];\r\n      sortedCountryCode.map((code) => {\r\n        arr.push({ [code.toUpperCase()]: data[code] });\r\n      });\r\n      return { [data.date]: arr };\r\n    });\r\n\r\n    let dailyDeathsFiltered = dailyDeathsStatus.map((data) => {\r\n      let arr = [];\r\n      sortedCountryCode.map((code) => {\r\n        arr.push({ [code.toUpperCase()]: data[code] });\r\n      });\r\n      return { [data.date]: arr };\r\n    });\r\n\r\n    let multiLineChartData = [];\r\n\r\n    multiLineChartData =\r\n      this.props.dailyStatus.length !== 0\r\n        ? dailyConfirmedFiltered.map((cases, index) => {\r\n            let array = Object.values(cases).map((state) => {\r\n              let subArray = { name: Object.keys(cases)[0] };\r\n              state.map((state, i) => {\r\n                subArray[sortedCountryName[i]] = Object.values(state)[0];\r\n              });\r\n              return subArray;\r\n            });\r\n            return array[0];\r\n          })\r\n        : null;\r\n\r\n    let a =\r\n      this.props.dailyStatus.length !== 0 && this.props.india.length !== 0\r\n        ? this.props.dailyStatus\r\n            .filter((data) => data.status === \"Confirmed\")\r\n            .map((d, index) => {\r\n              let x = {};\r\n              Object.keys(d).map((d1) => {\r\n                x[d1] = count(d1, this.props.dailyStatus, index);\r\n              });\r\n              let ob = Object.fromEntries(\r\n                Object.entries(\r\n                  Object.fromEntries(\r\n                    Object.entries(x).sort((a, b) => b[1] - a[1])\r\n                  )\r\n                ).slice(0, 6)\r\n              );\r\n\r\n              let z = Object.keys(ob)\r\n                .filter((name) => name !== \"tt\")\r\n                .map((name, i) => {\r\n                  return {\r\n                    name: this.props.india.statewise.filter(\r\n                      (state) => state.statecode.toLowerCase() === name\r\n                    )[0].state,\r\n                    [\"Cases\"]: ob[name],\r\n                  };\r\n                });\r\n              return z;\r\n            })\r\n        : [];\r\n\r\n    let Columns = [\r\n      { type: \"string\", label: \"name\" },\r\n      { type: \"number\", label: \"value\" },\r\n    ];\r\n\r\n    const filteredByDailyConfirmed = this.props.dailyStatus.filter(\r\n      (data) => data.status === \"Confirmed\"\r\n    );\r\n\r\n    const colourStyles = {\r\n      control: (styles) => ({\r\n        ...styles,\r\n        backgroundColor: \"white\",\r\n        marginRight: 15,\r\n        marginBottom: 15,\r\n      }),\r\n      option: (styles, { data, isDisabled, isFocused, isSelected }) => {\r\n        return {\r\n          ...styles,\r\n          backgroundColor: isDisabled\r\n            ? null\r\n            : isSelected\r\n            ? \"#404b69\"\r\n            : isFocused\r\n            ? \"#ffffff\"\r\n            : null,\r\n          color: isDisabled ? \"#ccc\" : isSelected ? \"white\" : \"#404b69\",\r\n          cursor: isDisabled ? \"not-allowed\" : \"default\",\r\n\r\n          \":active\": {\r\n            ...styles[\":active\"],\r\n            backgroundColor: !isDisabled && (isSelected ? \"#404b69\" : \"white\"),\r\n          },\r\n        };\r\n      },\r\n    };\r\n    let countries = [];\r\n    let nationalityGroup = [];\r\n\r\n    if (this.props.rawData.length !== 0) {\r\n      this.props.rawData.map((data) => {\r\n        countries.push(data.nationality);\r\n      });\r\n      countries = [...new Set(countries)].map((country) => {\r\n        return { [country]: 0 };\r\n      });\r\n    }\r\n\r\n    let ageGroup = [],\r\n      genderGroup = [];\r\n    let unknown = 0;\r\n    let unknownGender = 0;\r\n    if (this.props.rawData.length !== 0) {\r\n      let range1 = 0,\r\n        range2 = 0,\r\n        range3 = 0,\r\n        range4 = 0,\r\n        range5 = 0,\r\n        range6 = 0,\r\n        range7 = 0,\r\n        range8 = 0,\r\n        range9 = 0,\r\n        range10 = 0,\r\n        male = 0,\r\n        female = 0;\r\n      this.props.rawData.map((data) => {\r\n        countries.filter((country, index) => {\r\n          if (Object.keys(country)[0] === data.nationality) {\r\n            countries[index][data.nationality] =\r\n              countries[index][data.nationality] + 1;\r\n          }\r\n        });\r\n        if (data.agebracket !== \"\") {\r\n          if (Number(data.agebracket) >= 0 && Number(data.agebracket) <= 10) {\r\n            range1++;\r\n          } else if (\r\n            Number(data.agebracket) > 10 &&\r\n            Number(data.agebracket) <= 20\r\n          ) {\r\n            range2++;\r\n          } else if (\r\n            Number(data.agebracket) > 20 &&\r\n            Number(data.agebracket) <= 30\r\n          ) {\r\n            range3++;\r\n          } else if (\r\n            Number(data.agebracket) > 30 &&\r\n            Number(data.agebracket) <= 40\r\n          ) {\r\n            range4++;\r\n          } else if (\r\n            Number(data.agebracket) > 40 &&\r\n            Number(data.agebracket) <= 50\r\n          ) {\r\n            range5++;\r\n          } else if (\r\n            Number(data.agebracket) > 50 &&\r\n            Number(data.agebracket) <= 60\r\n          ) {\r\n            range6++;\r\n          } else if (\r\n            Number(data.agebracket) > 60 &&\r\n            Number(data.agebracket) <= 70\r\n          ) {\r\n            range7++;\r\n          } else if (\r\n            Number(data.agebracket) > 70 &&\r\n            Number(data.agebracket) <= 80\r\n          ) {\r\n            range8++;\r\n          } else if (\r\n            Number(data.agebracket) > 80 &&\r\n            Number(data.agebracket) <= 90\r\n          ) {\r\n            range9++;\r\n          } else {\r\n            range10++;\r\n          }\r\n        } else {\r\n          unknown++;\r\n        }\r\n\r\n        if (data.gender !== \"\") {\r\n          if (data.gender === \"M\") {\r\n            male++;\r\n          } else if (data.gender === \"F\") {\r\n            female++;\r\n          }\r\n        } else {\r\n          unknownGender++;\r\n        }\r\n      });\r\n\r\n      nationalityGroup = countries.map((country) => {\r\n        if (Object.keys(country)[0] !== \"\") {\r\n          return {\r\n            name: Object.keys(country),\r\n            [\"Patients\"]: Object.values(country),\r\n          };\r\n        }\r\n      });\r\n\r\n      ageGroup = [\r\n        {\r\n          name: \"0-10 years\",\r\n          [\"Cases\"]: range1,\r\n        },\r\n        { name: \"11-20 years\", [\"Cases\"]: range2 },\r\n        { name: \"21-30 years\", [\"Cases\"]: range3 },\r\n        { name: \"31-40 years\", [\"Cases\"]: range4 },\r\n        { name: \"41-50 years\", [\"Cases\"]: range5 },\r\n        { name: \"51-60 years\", [\"Cases\"]: range6 },\r\n        { name: \"61-70 years\", [\"Cases\"]: range7 },\r\n        { name: \"71-80 years\", [\"Cases\"]: range8 },\r\n        { name: \"81-90 years\", [\"Cases\"]: range9 },\r\n        { name: \"91 up years\", [\"Cases\"]: range10 },\r\n      ];\r\n      genderGroup = [\r\n        { name: \"Male\", value: male },\r\n        { name: \"Female\", value: female },\r\n        { name: \"Awaiting Details\", value: unknownGender },\r\n      ];\r\n    }\r\n\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-sm-12 col-12\">\r\n          <div\r\n            style={{\r\n              minHeight: 368,\r\n              background: \"linear-gradient(to right, #d9a7c7, #fffcdc)\",\r\n              paddingBottom: 15,\r\n              paddingLeft: 15,\r\n              paddingTop: 30,\r\n              borderRadius: 15,\r\n              marginBottom: 15,\r\n            }}\r\n          >\r\n            <GradientCardTitle title={\"Top 10 cities by confirmed cases\"} />\r\n            <SimpleLineChart\r\n              chart={\"BarChart\"}\r\n              customTooltip={true}\r\n              grid={false}\r\n              data={toptenCities}\r\n              labels={[\"Cases\"]}\r\n              colors={[\"#192a56\"]}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"col-sm-6 col-12\">\r\n          <div\r\n            style={{\r\n              background: \"linear-gradient(to right, #d9a7c7, #fffcdc)\",\r\n              paddingBottom: 15,\r\n              minHeight: 368,\r\n              paddingLeft: 15,\r\n              paddingTop: 30,\r\n              borderRadius: 15,\r\n              marginBottom: 15,\r\n            }}\r\n          >\r\n            <GradientCardTitle title={\"Total Confirmed and Active cases\"} />\r\n            <SwitchBar\r\n              options={[\"Total\", \"Daily\"]}\r\n              optionValues={[\"cumulative\", \"daily\"]}\r\n              onClick={(prop) => {\r\n                this.props.onSwitch(prop);\r\n              }}\r\n              showGlobalChartType={this.props.changeChart}\r\n            />\r\n            <SimpleLineChart\r\n              chart={\"AreaChart\"}\r\n              customTooltip={true}\r\n              grid={false}\r\n              data={\r\n                this.props.changeChart === \"daily\" ? totalDataDaily : totalData\r\n              }\r\n              labels={[\"Confirmed\", \"Active\"]}\r\n              colors={[\"#e43339\", \"#192a56\"]}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"col-sm-6 col-12\">\r\n          <div\r\n            style={{\r\n              background: \"linear-gradient(to right, #d9a7c7, #fffcdc)\",\r\n              paddingBottom: 15,\r\n              minHeight: 368,\r\n              paddingLeft: 15,\r\n              paddingTop: 30,\r\n              borderRadius: 15,\r\n              marginBottom: 15,\r\n            }}\r\n          >\r\n            <GradientCardTitle title={\"Total Recovered cases and Deaths\"} />\r\n            <SwitchBar\r\n              options={[\"Total\", \"Daily\"]}\r\n              optionValues={[\"cumulative\", \"daily\"]}\r\n              onClick={(prop) => {\r\n                this.props.onSwitch(prop);\r\n              }}\r\n              showGlobalChartType={this.props.changeChart}\r\n            />\r\n            <SimpleLineChart\r\n              chart={\"AreaChart\"}\r\n              customTooltip={true}\r\n              grid={false}\r\n              data={\r\n                this.props.changeChart === \"daily\" ? totalDataDaily : totalData\r\n              }\r\n              labels={[\"Recovered\", \"Deaths\"]}\r\n              colors={[\"#006266\", \"#535c68\"]}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"col-sm-6 col-12\">\r\n          <div\r\n            style={{\r\n              minHeight: 390,\r\n              background: \"linear-gradient(to right, #d9a7c7, #fffcdc)\",\r\n              paddingBottom: 15,\r\n              paddingLeft: 15,\r\n              paddingTop: 30,\r\n              borderRadius: 15,\r\n              marginBottom: 15,\r\n            }}\r\n          >\r\n            <GradientCardTitle\r\n              title={\"Top 5 states timeline by confirmed cases\"}\r\n            />\r\n            <div>\r\n              <div className=\"timer\">\r\n                <div\r\n                  className=\"timer-button\"\r\n                  onClick={() => {\r\n                    this.setState({\r\n                      started: !this.state.started,\r\n                      seconds:\r\n                        this.state.seconds < a.length - 1\r\n                          ? this.state.seconds\r\n                          : 0,\r\n                    });\r\n                    this.state.seconds < a.length - 1\r\n                      ? (this.timer = setInterval(() => {\r\n                          return this.state.seconds < a.length - 1\r\n                            ? this.state.started\r\n                              ? this.setState({\r\n                                  seconds: this.state.seconds + 1,\r\n                                })\r\n                              : null\r\n                            : (clearInterval(this.timer),\r\n                              this.state.started === true\r\n                                ? this.setState({\r\n                                    started: false,\r\n                                  })\r\n                                : null);\r\n                        }, 1000))\r\n                      : clearInterval(this.timer);\r\n                  }}\r\n                >\r\n                  {this.state.started ? \"Stop\" : \"Start\"}\r\n                </div>\r\n              </div>\r\n              <div className=\"timer-date\">\r\n                {filteredByDailyConfirmed.length > 0\r\n                  ? filteredByDailyConfirmed[this.state.seconds].date\r\n                  : null}\r\n              </div>\r\n            </div>\r\n            <SimpleLineChart\r\n              layout=\"vertical\"\r\n              chart={\"BarChart\"}\r\n              customTooltip={true}\r\n              grid={false}\r\n              data={a[this.state.seconds]}\r\n              labels={[\"Cases\"]}\r\n              colors={[\"#192a56\"]}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"col-sm-6 col-12\">\r\n          <div\r\n            style={{\r\n              background: \"linear-gradient(to right, #d9a7c7, #fffcdc)\",\r\n              paddingBottom: 15,\r\n              minHeight: 390,\r\n              paddingLeft: 15,\r\n              paddingTop: 30,\r\n              borderRadius: 15,\r\n              marginBottom: 15,\r\n            }}\r\n          >\r\n            <GradientCardTitle title={\"Total cases in top 10 states\"} />\r\n            <SimpleLineChart\r\n              chart={\"AreaChart\"}\r\n              legend={false}\r\n              customTooltip={true}\r\n              grid={false}\r\n              data={multiLineChartData}\r\n              labels={sortedCountryName}\r\n              colors={[\r\n                \"#3c3568\",\r\n                \"#f6ba62\",\r\n                \"#bc443b\",\r\n                \"#185e4b\",\r\n                \"#150a47\",\r\n                \"#334553\",\r\n                \"#d82f5a\",\r\n                \"#000133\",\r\n                \"#11887b\",\r\n                \"#044a05\",\r\n              ]}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"col-sm-6 col-12\">\r\n          <div\r\n            style={{\r\n              minHeight: 368,\r\n              background: \"linear-gradient(to right, #d9a7c7, #fffcdc)\",\r\n              paddingBottom: 15,\r\n              paddingLeft: 15,\r\n              paddingTop: 30,\r\n              borderRadius: 15,\r\n              marginBottom: 15,\r\n            }}\r\n          >\r\n            <GradientCardTitle title={\"Top 10 states by cases\"} />\r\n            <div className=\"row\" style={{ justifyContent: \"center\" }}>\r\n              <div className=\"col-sm-4\">\r\n                <Select\r\n                  isClearable={false}\r\n                  isSearchable={false}\r\n                  onChange={(selectedOption) => {\r\n                    this.props.onSelectOption(selectedOption);\r\n                  }}\r\n                  styles={colourStyles}\r\n                  placeholder=\"Confirmed\"\r\n                  options={[\r\n                    { value: \"confirmed\", label: \"Confirmed\" },\r\n                    { value: \"active\", label: \"Active\" },\r\n                    { value: \"deaths\", label: \"Deaths\" },\r\n                    { value: \"recovered\", label: \"Recovered\" },\r\n                  ]}\r\n                />\r\n              </div>\r\n            </div>\r\n            <CustomChart\r\n              placeholder={false}\r\n              emptyClassName={\"m-t-40\"}\r\n              chartArea={{ left: 10, top: 15, right: 10, bottom: 15 }}\r\n              rows={pieChartData}\r\n              columns={Columns}\r\n              chartType={\"PieChart\"}\r\n              height={\"270px\"}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"col-sm-6 col-12\">\r\n          <div\r\n            style={{\r\n              minHeight: 410,\r\n              background: \"linear-gradient(to right, #d9a7c7, #fffcdc)\",\r\n              paddingBottom: 15,\r\n              paddingLeft: 15,\r\n              paddingTop: 30,\r\n              borderRadius: 15,\r\n              marginBottom: 15,\r\n            }}\r\n          >\r\n            <GradientCardTitle title={\"Patients count by age\"} />\r\n            <SimpleLineChart\r\n              chart={\"BarChart\"}\r\n              customTooltip={true}\r\n              grid={false}\r\n              data={ageGroup}\r\n              labels={[\"Cases\"]}\r\n              colors={[\"#192a56\"]}\r\n            />\r\n            <GradientCardFooter\r\n              content={`*Awaiting details for ${unknown} patients.`}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"col-sm-6 col-12\">\r\n          <div\r\n            style={{\r\n              minHeight: 368,\r\n              background: \"linear-gradient(to right, #d9a7c7, #fffcdc)\",\r\n              paddingBottom: 15,\r\n              paddingLeft: 15,\r\n              paddingTop: 30,\r\n              borderRadius: 15,\r\n              marginBottom: 15,\r\n            }}\r\n          >\r\n            <GradientCardTitle title={\"Patients count by gender\"} />\r\n            <div style={{ marginBottom: -24 }}>\r\n              <span style={{ color: \"#192a56\", fontWeight: \"bold\" }}>\r\n                Male{\" \"}\r\n                {genderGroup.length !== 0\r\n                  ? genderGroup.filter((stat) => stat.name === \"Male\")[0].value\r\n                  : 0}\r\n              </span>\r\n              <span\r\n                style={{\r\n                  marginLeft: 15,\r\n                  color: \"rgb(255, 82, 82)\",\r\n                  fontWeight: \"bold\",\r\n                }}\r\n              >\r\n                Female{\" \"}\r\n                {genderGroup.length !== 0\r\n                  ? genderGroup.filter((stat) => stat.name === \"Female\")[0]\r\n                      .value\r\n                  : 0}\r\n              </span>\r\n              <span\r\n                style={{\r\n                  marginLeft: 15,\r\n                  color: \"#404b69\",\r\n                  fontWeight: \"bold\",\r\n                }}\r\n              >\r\n                A. Details{\" \"}\r\n                {genderGroup.length !== 0\r\n                  ? genderGroup.filter(\r\n                      (stat) => stat.name === \"Awaiting Details\"\r\n                    )[0].value\r\n                  : 0}\r\n              </span>\r\n            </div>\r\n            <SimplePieChart data={genderGroup} />\r\n            <GradientCardFooter\r\n              content={`*Awaiting details for ${unknownGender} patients.`}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"col-sm-6 col-12\">\r\n          <div\r\n            style={{\r\n              minHeight: 368,\r\n              background: \"linear-gradient(to right, #d9a7c7, #fffcdc)\",\r\n              paddingBottom: 15,\r\n              paddingLeft: 15,\r\n              paddingTop: 30,\r\n              borderRadius: 15,\r\n              marginBottom: 15,\r\n            }}\r\n          >\r\n            <GradientCardTitle title={\"Patients count by nationality\"} />\r\n\r\n            <SimpleLineChart\r\n              chart={\"BarChart\"}\r\n              customTooltip={true}\r\n              grid={false}\r\n              data={nationalityGroup}\r\n              labels={[\"Patients\"]}\r\n              colors={[\"#192a56\"]}\r\n            />\r\n            <GradientCardFooter\r\n              content={`*Awaiting details for ${\r\n                typeof countries.filter(\r\n                  (country) => Object.keys(country)[0] === \"\"\r\n                )[0] !== \"undefined\"\r\n                  ? Object.values(\r\n                      countries.filter(\r\n                        (country) => Object.keys(country)[0] === \"\"\r\n                      )[0]\r\n                    )[0]\r\n                  : countries.filter(\r\n                      (country) => Object.keys(country)[0] === \"\"\r\n                    )[0]\r\n              } patients.`}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Analytics;\r\n","C:\\Users\\hi\\Desktop\\test1\\covid19\\src\\components\\container\\India\\SubComponents\\Cards.jsx",[],"C:\\Users\\hi\\Desktop\\test1\\covid19\\src\\components\\container\\India\\SubComponents\\NumbersCard.jsx",[],"C:\\Users\\hi\\Desktop\\test1\\covid19\\src\\components\\charts\\TinyChart.jsx",[],"C:\\Users\\hi\\Desktop\\test1\\covid19\\src\\components\\container\\India\\SubComponents\\Table.jsx",[],"C:\\Users\\hi\\Desktop\\test1\\covid19\\src\\components\\ui\\DataCard\\DataCard.jsx",[],"C:\\Users\\hi\\Desktop\\test1\\covid19\\src\\components\\ui\\MapSwitchBar\\MapSwitchBar.jsx",[],"C:\\Users\\hi\\Desktop\\test1\\covid19\\src\\components\\ui\\NumericCard\\NumericCard.jsx",[],"C:\\Users\\hi\\Desktop\\test1\\covid19\\src\\components\\ui\\Pagination\\Pagination.jsx",["185","186","187"],"import React, { Component, Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport \"../../../index.css\"\r\n\r\nconst LEFT_PAGE = 'LEFT';\r\nconst RIGHT_PAGE = 'RIGHT';\r\n\r\n/**\r\n * Helper method for creating a range of numbers\r\n * range(1, 5) => [1, 2, 3, 4, 5]\r\n */\r\nconst range = (from, to, step = 1) => {\r\n  let i = from;\r\n  const range = [];\r\n\r\n  while (i <= to) {\r\n    range.push(i);\r\n    i += step;\r\n  }\r\n\r\n  return range;\r\n}\r\n\r\nclass Pagination extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    const { totalRecords = null, pageLimit = 30, pageNeighbours = 0 } = props;\r\n\r\n    this.pageLimit = typeof pageLimit === 'number' ? pageLimit : 30;\r\n    this.totalRecords = typeof totalRecords === 'number' ? totalRecords : 0;\r\n\r\n    // pageNeighbours can be: 0, 1 or 2\r\n    this.pageNeighbours = typeof pageNeighbours === 'number'\r\n      ? Math.max(0, Math.min(pageNeighbours, 2))\r\n      : 0;\r\n\r\n    this.totalPages = Math.ceil(this.totalRecords / this.pageLimit);\r\n\r\n    this.state = { currentPage: 1 };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.gotoPage(1);\r\n  }\r\n\r\n  gotoPage = page => {\r\n    const { onPageChanged = f => f } = this.props;\r\n\r\n    const currentPage = Math.max(0, Math.min(page, this.totalPages));\r\n\r\n    const paginationData = {\r\n      currentPage,\r\n      totalPages: this.totalPages,\r\n      pageLimit: this.pageLimit,\r\n      totalRecords: this.totalRecords\r\n    };\r\n\r\n    this.setState({ currentPage }, () => onPageChanged(paginationData));\r\n  }\r\n\r\n  handleClick = page => evt => {\r\n    evt.preventDefault();\r\n    this.gotoPage(page);\r\n  }\r\n\r\n  handleMoveLeft = evt => {\r\n    evt.preventDefault();\r\n    this.gotoPage(this.state.currentPage - (this.pageNeighbours * 2) - 1);\r\n  }\r\n\r\n  handleMoveRight = evt => {\r\n    evt.preventDefault();\r\n    this.gotoPage(this.state.currentPage + (this.pageNeighbours * 2) + 1);\r\n  }\r\n\r\n  /**\r\n   * Let's say we have 10 pages and we set pageNeighbours to 2\r\n   * Given that the current page is 6\r\n   * The pagination control will look like the following:\r\n   *\r\n   * (1) < {4 5} [6] {7 8} > (10)\r\n   *\r\n   * (x) => terminal pages: first and last page(always visible)\r\n   * [x] => represents current page\r\n   * {...x} => represents page neighbours\r\n   */\r\n  fetchPageNumbers = () => {\r\n\r\n    const totalPages = this.totalPages;\r\n    const currentPage = this.state.currentPage;\r\n    const pageNeighbours = this.pageNeighbours;\r\n\r\n    /**\r\n     * totalNumbers: the total page numbers to show on the control\r\n     * totalBlocks: totalNumbers + 2 to cover for the left(<) and right(>) controls\r\n     */\r\n    const totalNumbers = (this.pageNeighbours * 2) + 3;\r\n    const totalBlocks = totalNumbers + 2;\r\n\r\n    if (totalPages > totalBlocks) {\r\n\r\n      const startPage = Math.max(2, currentPage - pageNeighbours);\r\n      const endPage = Math.min(totalPages - 1, currentPage + pageNeighbours);\r\n\r\n      let pages = range(startPage, endPage);\r\n\r\n      /**\r\n       * hasLeftSpill: has hidden pages to the left\r\n       * hasRightSpill: has hidden pages to the right\r\n       * spillOffset: number of hidden pages either to the left or to the right\r\n       */\r\n      const hasLeftSpill = startPage > 2;\r\n      const hasRightSpill = (totalPages - endPage) > 1;\r\n      const spillOffset = totalNumbers - (pages.length + 1);\r\n\r\n      switch (true) {\r\n        // handle: (1) < {5 6} [7] {8 9} (10)\r\n        case (hasLeftSpill && !hasRightSpill): {\r\n          const extraPages = range(startPage - spillOffset, startPage - 1);\r\n          pages = [LEFT_PAGE, ...extraPages, ...pages];\r\n          break;\r\n        }\r\n\r\n        // handle: (1) {2 3} [4] {5 6} > (10)\r\n        case (!hasLeftSpill && hasRightSpill): {\r\n          const extraPages = range(endPage + 1, endPage + spillOffset);\r\n          pages = [...pages, ...extraPages, RIGHT_PAGE];\r\n          break;\r\n        }\r\n\r\n        // handle: (1) < {4 5} [6] {7 8} > (10)\r\n        case (hasLeftSpill && hasRightSpill):\r\n        default: {\r\n          pages = [LEFT_PAGE, ...pages, RIGHT_PAGE];\r\n          break;\r\n        }\r\n      }\r\n\r\n      return [1, ...pages, totalPages];\r\n\r\n    }\r\n\r\n    return range(1, totalPages);\r\n\r\n  }\r\n\r\n  render() {\r\n\r\n    if (!this.totalRecords || this.totalPages === 1) return null;\r\n\r\n    const { currentPage } = this.state;\r\n    const pages = this.fetchPageNumbers();\r\n\r\n    return (\r\n      <Fragment>\r\n        <nav aria-label=\"Countries Pagination\">\r\n          <ul className=\"pagination\">\r\n            { pages.map((page, index) => {\r\n\r\n              if (page === LEFT_PAGE) return (\r\n                <li key={index} className=\"page-item\">\r\n                  <a className=\"page-link\" href=\"#\" aria-label=\"Previous\" onClick={this.handleMoveLeft}>\r\n                    <span aria-hidden=\"true\">&laquo;</span>\r\n                    <span className=\"sr-only\">Previous</span>\r\n                  </a>\r\n                </li>\r\n              );\r\n\r\n              if (page === RIGHT_PAGE) return (\r\n                <li key={index} className=\"page-item\">\r\n                  <a className=\"page-link\" href=\"#\" aria-label=\"Next\" onClick={this.handleMoveRight}>\r\n                    <span aria-hidden=\"true\">&raquo;</span>\r\n                    <span className=\"sr-only\">Next</span>\r\n                  </a>\r\n                </li>\r\n              );\r\n\r\n              return (\r\n                <li key={index} className={`page-item${ currentPage === page ? ' active' : ''}`}>\r\n                  <a className=\"page-link\" href=\"#\" onClick={ this.handleClick(page) }>{ page }</a>\r\n                </li>\r\n              );\r\n\r\n            }) }\r\n\r\n          </ul>\r\n        </nav>\r\n      </Fragment>\r\n    );\r\n\r\n  }\r\n}\r\n\r\nPagination.propTypes = {\r\n  totalRecords: PropTypes.number.isRequired,\r\n  pageLimit: PropTypes.number,\r\n  pageNeighbours: PropTypes.number,\r\n  onPageChanged: PropTypes.func\r\n};\r\n\r\nexport default Pagination;",{"ruleId":"188","replacedBy":"189"},{"ruleId":"190","replacedBy":"191"},{"ruleId":"192","severity":1,"message":"193","line":123,"column":27,"nodeType":"194","messageId":"195","endLine":123,"endColumn":29},{"ruleId":"192","severity":1,"message":"193","line":146,"column":25,"nodeType":"194","messageId":"195","endLine":146,"endColumn":27},{"ruleId":"196","severity":1,"message":"197","line":7,"column":7,"nodeType":"198","messageId":"199","endLine":7,"endColumn":22},{"ruleId":"196","severity":1,"message":"200","line":44,"column":7,"nodeType":"198","messageId":"199","endLine":44,"endColumn":22},{"ruleId":"201","severity":1,"message":"202","line":94,"column":15,"nodeType":"203","messageId":"204","endLine":94,"endColumn":68,"fix":"205"},{"ruleId":"201","severity":1,"message":"206","line":95,"column":15,"nodeType":"203","messageId":"204","endLine":98,"endColumn":16,"fix":"207"},{"ruleId":"201","severity":1,"message":"202","line":112,"column":15,"nodeType":"203","messageId":"204","endLine":112,"endColumn":68,"fix":"208"},{"ruleId":"201","severity":1,"message":"206","line":113,"column":15,"nodeType":"203","messageId":"204","endLine":116,"endColumn":66,"fix":"209"},{"ruleId":"201","severity":1,"message":"210","line":87,"column":21,"nodeType":"203","messageId":"204","endLine":88,"endColumn":73,"fix":"211"},{"ruleId":"201","severity":1,"message":"212","line":89,"column":21,"nodeType":"203","messageId":"204","endLine":90,"endColumn":74,"fix":"213"},{"ruleId":"201","severity":1,"message":"210","line":144,"column":19,"nodeType":"203","messageId":"204","endLine":144,"endColumn":76,"fix":"214"},{"ruleId":"201","severity":1,"message":"212","line":145,"column":19,"nodeType":"203","messageId":"204","endLine":145,"endColumn":78,"fix":"215"},{"ruleId":"196","severity":1,"message":"216","line":4,"column":8,"nodeType":"198","messageId":"199","endLine":4,"endColumn":13},{"ruleId":"188","replacedBy":"217"},{"ruleId":"190","replacedBy":"218"},{"ruleId":"201","severity":1,"message":"219","line":33,"column":30,"nodeType":"203","messageId":"204","endLine":33,"endColumn":61,"fix":"220"},{"ruleId":"192","severity":1,"message":"193","line":105,"column":31,"nodeType":"194","messageId":"195","endLine":105,"endColumn":33},{"ruleId":"192","severity":1,"message":"193","line":157,"column":36,"nodeType":"194","messageId":"195","endLine":157,"endColumn":38},{"ruleId":"196","severity":1,"message":"221","line":165,"column":9,"nodeType":"198","messageId":"199","endLine":165,"endColumn":31},{"ruleId":"192","severity":1,"message":"193","line":167,"column":36,"nodeType":"194","messageId":"195","endLine":167,"endColumn":38},{"ruleId":"196","severity":1,"message":"222","line":173,"column":9,"nodeType":"198","messageId":"199","endLine":173,"endColumn":28},{"ruleId":"192","severity":1,"message":"193","line":175,"column":36,"nodeType":"194","messageId":"195","endLine":175,"endColumn":38},{"ruleId":"192","severity":1,"message":"193","line":188,"column":36,"nodeType":"194","messageId":"195","endLine":188,"endColumn":38},{"ruleId":"192","severity":1,"message":"193","line":203,"column":39,"nodeType":"194","messageId":"195","endLine":203,"endColumn":41},{"ruleId":"201","severity":1,"message":"219","line":221,"column":21,"nodeType":"203","messageId":"204","endLine":221,"endColumn":40,"fix":"223"},{"ruleId":"192","severity":1,"message":"193","line":268,"column":37,"nodeType":"194","messageId":"195","endLine":268,"endColumn":39},{"ruleId":"192","severity":1,"message":"193","line":293,"column":37,"nodeType":"194","messageId":"195","endLine":293,"endColumn":39},{"ruleId":"192","severity":1,"message":"224","line":294,"column":43,"nodeType":"194","messageId":"195","endLine":294,"endColumn":45},{"ruleId":"192","severity":1,"message":"225","line":361,"column":50,"nodeType":"194","messageId":"226","endLine":361,"endColumn":52},{"ruleId":"201","severity":1,"message":"227","line":365,"column":13,"nodeType":"203","messageId":"204","endLine":365,"endColumn":49,"fix":"228"},{"ruleId":"201","severity":1,"message":"219","line":373,"column":11,"nodeType":"203","messageId":"204","endLine":373,"endColumn":28,"fix":"229"},{"ruleId":"201","severity":1,"message":"219","line":375,"column":32,"nodeType":"203","messageId":"204","endLine":375,"endColumn":49,"fix":"230"},{"ruleId":"201","severity":1,"message":"219","line":376,"column":32,"nodeType":"203","messageId":"204","endLine":376,"endColumn":49,"fix":"231"},{"ruleId":"201","severity":1,"message":"219","line":377,"column":32,"nodeType":"203","messageId":"204","endLine":377,"endColumn":49,"fix":"232"},{"ruleId":"201","severity":1,"message":"219","line":378,"column":32,"nodeType":"203","messageId":"204","endLine":378,"endColumn":49,"fix":"233"},{"ruleId":"201","severity":1,"message":"219","line":379,"column":32,"nodeType":"203","messageId":"204","endLine":379,"endColumn":49,"fix":"234"},{"ruleId":"201","severity":1,"message":"219","line":380,"column":32,"nodeType":"203","messageId":"204","endLine":380,"endColumn":49,"fix":"235"},{"ruleId":"201","severity":1,"message":"219","line":381,"column":32,"nodeType":"203","messageId":"204","endLine":381,"endColumn":49,"fix":"236"},{"ruleId":"201","severity":1,"message":"219","line":382,"column":32,"nodeType":"203","messageId":"204","endLine":382,"endColumn":49,"fix":"237"},{"ruleId":"201","severity":1,"message":"219","line":383,"column":32,"nodeType":"203","messageId":"204","endLine":383,"endColumn":50,"fix":"238"},{"ruleId":"239","severity":1,"message":"240","line":163,"column":19,"nodeType":"241","endLine":163,"endColumn":105},{"ruleId":"239","severity":1,"message":"240","line":172,"column":19,"nodeType":"241","endLine":172,"endColumn":102},{"ruleId":"239","severity":1,"message":"240","line":181,"column":19,"nodeType":"241","endLine":181,"endColumn":88},"no-native-reassign",["242"],"no-negated-in-lhs",["243"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-unused-vars","'INDIA_TOPO_JSON' is assigned a value but never used.","Identifier","unusedVar","'STATE_TOPO_JSON' is assigned a value but never used.","no-useless-computed-key","Unnecessarily computed property [\"Rate (%)\"] found.","Property","unnecessarilyComputedProperty",{"range":"244","text":"245"},"Unnecessarily computed property [\"Rate in confirmed cases(%)\"] found.",{"range":"246","text":"247"},{"range":"248","text":"245"},{"range":"249","text":"247"},"Unnecessarily computed property [\"New Conf.\"] found.",{"range":"250","text":"251"},"Unnecessarily computed property [\"New Deaths\"] found.",{"range":"252","text":"253"},{"range":"254","text":"251"},{"range":"255","text":"253"},"'World' is defined but never used.",["242"],["243"],"Unnecessarily computed property [\"Cases\"] found.",{"range":"256","text":"257"},"'dailyRecoveredFiltered' is assigned a value but never used.","'dailyDeathsFiltered' is assigned a value but never used.",{"range":"258","text":"257"},"Array.prototype.filter() expects a return value from arrow function.","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","Unnecessarily computed property [\"Patients\"] found.",{"range":"259","text":"260"},{"range":"261","text":"257"},{"range":"262","text":"257"},{"range":"263","text":"257"},{"range":"264","text":"257"},{"range":"265","text":"257"},{"range":"266","text":"257"},{"range":"267","text":"257"},{"range":"268","text":"257"},{"range":"269","text":"257"},{"range":"270","text":"257"},"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation",[3462,3474],"\"Rate (%)\"",[3532,3562],"\"Rate in confirmed cases(%)\"",[4053,4065],[4123,4153],[2917,2930],"\"New Conf.\"",[3028,3042],"\"New Deaths\"",[5465,5478],[5543,5557],[1236,1245],"\"Cases\"",[7429,7438],[11443,11455],"\"Patients\"",[11592,11601],[11655,11664],[11708,11717],[11761,11770],[11814,11823],[11867,11876],[11920,11929],[11973,11982],[12026,12035],[12079,12088]]