{"version":3,"sources":["serviceWorker.js","components/ui/ErrorBoundry/ErrorBoundry.jsx","components/charts/IndiaMap/IndiaMap.jsx","components/ui/Footer/Footer.jsx","components/container/India/SubComponents/Table.jsx","components/charts/SimpleLineChart/SimpleLineChart.jsx","components/ui/SwitchBar/SwitchBar.jsx","assets/virus.gif","components/container/India/SubComponents/Cards.jsx","assets/github1.png","assets/india.png","assets/world.png","components/ui/Header/Header.jsx","components/ui/GradientCardTitle/GradientCardTitle.jsx","components/charts/TinyChart.jsx","components/container/India/SubComponents/NumbersCard.jsx","components/ui/NavigationBar/NavigationBar.jsx","components/charts/PieChart/CustomChart.jsx","components/ui/GradientCardFooter/GradientCardFooter.jsx","components/charts/SimplePieChart/SimplePieChart.jsx","components/container/India/SubComponents/Analytics.jsx","components/charts/IndiaMap/StateWiseMap.jsx","components/container/India/India.jsx","components/container/Global/SubComponents/Table.jsx","components/ui/NumericCard/NumericCard.jsx","components/container/Global/SubComponents/NumberCard.jsx","components/container/Global/SubComponents/Analytics.jsx","components/ui/MapSwitchBar/MapSwitchBar.jsx","components/charts/DataMap/DataMap.jsx","components/container/Global/SubComponents/GlobalMap.jsx","components/ui/DataCard/DataCard.jsx","components/container/Global/SubComponents/Cards.jsx","components/ui/Pagination/Pagination.jsx","components/container/Global/SubComponents/ChartsCard.jsx","components/container/Global/Global.jsx","Routes.jsx","index.js"],"names":["Boolean","window","location","hostname","match","ErrorBoundry","props","state","hasError","error","errorInfo","console","this","className","style","display","justifyContent","href","children","React","Component","INDIA_TOPO_JSON","require","PROJECTION_CONFIG","scale","center","COLOR_RANGE","geographyStyle","default","outline","hover","fill","transition","pressed","IndiaMap","data","onStateClick","useState","tooltipContent","setTooltipContent","size","isClient","getSize","width","innerWidth","undefined","height","innerHeight","windowSize","setWindowSize","useEffect","handleResize","addEventListener","removeEventListener","useWindowSize","colorScale","scaleLog","domain","range","onMouseEnter","geo","current","value","onMouseLeave","fontWeight","fontSize","color","confirmed","deltaconfirmed","active","recovered","deltarecovered","deaths","deltadeaths","projectionConfig","projection","Math","floor","data-tip","geography","geographies","map","find","s","statecode","id","onClick","rsmKey","Footer","padding","paddingBottom","border","borderRadius","background","cursor","textDecoration","target","rel","marginRight","icon","Table","india","length","statewise","filter","Number","deltaConfirmed","deltaActive","deltaRecovered","deltaDeaths","columns","Header","accessor","Cell","original","cityData","stateWiseCity","Object","keys","city","districtData","key","deceased","deltaDeceased","cityColumns","marginTop","defaultPageSize","noDataText","getTheadProps","rowInfo","column","getTdProps","instance","e","handleOriginal","filterable","SubComponent","row","values","showPagination","SimpleLineChart","name","uv","pv","amt","CustomTooltip","payload","label","textAlign","item","index","Chart","chart","Line","Bar","Area","selectChart","Type","LineChart","BarChart","AreaChart","ChartName","ResponsiveContainer","layout","margin","left","CartesianGrid","strokeDasharray","XAxis","type","hide","dataKey","axis","YAxis","customTooltip","Tooltip","content","legend","Legend","legendLayout","top","right","bottom","verticalAlign","labels","stackId","stroke","colors","activeDot","r","dot","SwitchBar","options","option","showGlobalChartType","optionValues","borderTopLeftRadius","borderBottomLeftRadius","borderTopRightRadius","borderBottomRightRadius","Cards","changeChart","Confirmed","Recovered","Deaths","dailyConfirmedStatus","dailyStatus","status","dailyRecoveredStatus","dailyDeathsStatus","count","code","i","locationLoader","src","Virus","alt","toLowerCase","includes","searchString","f","data1","paddingTop","marginBottom","prop","setState","grid","dashboard","Github","history","push","IndiaIcon","World","GradientCardTitle","title","TinyChart","updateDimensions","strokeWidth","PureComponent","NumbersCard","confirmedTinyChartData","cases_time_series","cases","totalconfirmed","date","activeTinyChartData","totaldeceased","totalrecovered","deathTinyChartData","recoveredTinyChartData","totalConformedToday","record","totalRecoveredToday","totalDeathsToday","confirmedPopover","recoveredPopover","deathsPopover","body","maxHeight","overflowY","borderRight","preferPlace","isOpen","confirmedOpen","onOuterAction","ReactGA","event","category","action","marginLeft","activeOpen","deathsOpen","icons","Analytics","Card","Map","uiClass","windowWidth","ui","optionRoutes","CustomChart","chartEvents","eventName","callback","chartWrapper","chartType","selectedItem","getChart","getSelection","onPlotClick","rows","setSelection","sliceVisibilityThreshold","headerHeight","backgroundColor","minColor","midColor","maxColor","chartArea","isStacked","position","legendPosition","alignment","hAxis","textPosition","textColor","titleTextStyle","vAxis","minValue","generateTooltip","rootProps","onplot","GradientCardFooter","COLORS","SimplePieChart","PieChart","Pie","outerRadius","entry","seconds","started","toptenCities","assign","sort","a","b","slice","totalDataDaily","dailyrecovered","dailyconfirmed","Active","dailydeceased","totalData","dailyConfirmed","dailyActive","dailyRecovered","dailyDeaths","sortable","pieChartData","filterByCases","sortedCuntryName","multiLineChartData","sortedCountryCode","sortedCountryName","dailyConfirmedFiltered","arr","toUpperCase","subArray","d","x","d1","ob","fromEntries","entries","filteredByDailyConfirmed","colourStyles","control","styles","isDisabled","isFocused","isSelected","countries","nationalityGroup","rawData","nationality","Set","country","ageGroup","genderGroup","unknown","unknownGender","range1","range2","range3","range4","range5","range6","range7","range8","range9","range10","male","female","agebracket","gender","minHeight","paddingLeft","onSwitch","timer","setInterval","clearInterval","isClearable","isSearchable","onChange","selectedOption","onSelectOption","placeholder","emptyClassName","stat","andamannicobarislands","arunachalpradesh","andhrapradesh","assam","bihar","chandigarh","chhattisgarh","dadranagarhaveli","delhi","karnataka","kerala","goa","gujarat","haryana","himachalpradesh","jammukashmir","jharkhand","ladakh","lakshadweep","madhyapradesh","maharashtra","manipur","meghalaya","mizoram","nagaland","odisha","puducherry","punjab","rajasthan","sikkim","nadu","telangana","tripura","uttarakhand","uttarpradesh","westbengal","StateWiseMap","stateName","getGeoFile","properties","district","delta","getScale","getCenter","India","chunkArray","array","result","arrayCopy","splice","filterStateName","currentPage","selectedCity","displayBySort","totalPages","activePage","selectedCountry","timelines","isTable","datasets","borderColor","borderWidth","data2","data3","getData","getStateData","getRawData","getDailyStatus","fetch","method","then","res","json","response","catch","raw_data","states_daily","route","showState","originalStateName","toolTipContent","withRouter","globalData","confirmed_today","deaths_today","tests","totaltests","NumericCard","card","dataToday","showPopover","popoverData","NumberCard","globalTimelines","reportDate","totalConfirmed","totalRecovered","total","totalDeathsByAge","deathsRate","age","all_cases","replace","confirmed_cases","totalDeathsByCom","deathsBySex","sex","onSwitchBar","MapSwitchBar","mapFilter","MapChart","rotate","Countrys","ISO_A2","NAME_LONG","DeathsToday","ConfirmedToday","NAME","GlobalMap","caseType","onMapSwitch","DataMap","onSetTooltipContent","renderTooltipLabelColor","DataCard","showIcon","showData","defaultValue","onSearch","Serious","critical","Tests","LEFT_PAGE","RIGHT_PAGE","from","to","step","Pagination","gotoPage","page","onPageChanged","max","min","paginationData","pageLimit","totalRecords","handleClick","evt","preventDefault","handleMoveLeft","pageNeighbours","handleMoveRight","fetchPageNumbers","totalNumbers","startPage","endPage","pages","hasLeftSpill","hasRightSpill","spillOffset","extraPages","ceil","aria-label","aria-hidden","ChartsCard","Date","todayDate","getMonth","getDate","getFullYear","getChartsData","_","chunk","timeline","index1","timelineitems","total_cases","total_deaths","total_recoveries","new_daily_cases","new_daily_deaths","cardValue","cards","countryitems","countrytimelinedata","info","filteredTitle","totalCases","total_recovered","NewConfirmed","total_new_cases_today","NewDeaths","total_new_deaths_today","countryItemsFiltered","Global","currentCardPage","totalCardPages","getGlobalData","getDailyData","getDeathRates","getCardsData","header","cardId","concat","library","add","fas","brands","createBrowserHistory","initialize","debug","set","origin","pathname","hash","pageview","listen","Index","Fragment","path","component","routing","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"qxi0BAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,oCCyCSC,G,yDAvDb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CAAEC,UAAU,GAFR,E,8DAUDC,EAAOC,GAEvBC,QAAQF,MAAMA,EAAOC,K,+BAIrB,OAAIE,KAAKL,MAAMC,SAGX,8BACE,yBAASK,UAAU,WAAnB,SACE,qBAAKA,UAAU,YAAf,SACE,qBAAKA,UAAU,MAAf,SACE,qBACEA,UAAU,YACVC,MAAO,CAAEC,QAAS,OAAQC,eAAgB,UAF5C,SAIE,sBAAKH,UAAU,yCAAf,UACE,qBAAKA,UAAU,sBAEf,sBAAKA,UAAU,kBAAf,UACE,oBAAIA,UAAU,KAAd,mCAEA,4EAEA,mBACEI,KAAK,6DACLJ,UAAU,WAFZ,wCAgBXD,KAAKN,MAAMY,Y,gDA9CYT,GAE9B,MAAO,CAAED,UAAU,O,GARIW,IAAMC,Y,gECI3BC,G,OAAkBC,EAAQ,MAE1BC,EAAoB,CACxBC,MAAO,IACPC,OAAQ,CAAC,QAAS,UAIdC,EAAc,CAAC,UAAW,UAAW,WAIrCC,EAAiB,CACrBC,QAAS,CACPC,QAAS,QAEXC,MAAO,CACLC,KAAM,OACNC,WAAY,YACZH,QAAS,QAEXI,QAAS,CACPJ,QAAS,SAiCb,IA2IeK,EA3IE,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,aAAmB,EACCC,mBAAS,IADV,mBACpCC,EADoC,KACpBC,EADoB,KAErCC,EA/BR,WACE,IAAMC,EAA6B,kBAAXxC,OAExB,SAASyC,IACP,MAAO,CACLC,MAAOF,EAAWxC,OAAO2C,gBAAaC,EACtCC,OAAQL,EAAWxC,OAAO8C,iBAAcF,GANrB,MAUaR,mBAASK,GAVtB,mBAUhBM,EAVgB,KAUJC,EAVI,KA0BvB,OAdAC,qBAAU,WACR,IAAKT,EACH,OAAO,EAGT,SAASU,IACPF,EAAcP,KAIhB,OADAzC,OAAOmD,iBAAiB,SAAUD,GAC3B,kBAAMlD,OAAOoD,oBAAoB,SAAUF,MAEjD,IAEIH,EAKMM,GAEPC,EAAaC,cAAWC,OAAO,CAAC,EAAG,KAAKC,MAAMhC,GAE9CiC,EAAe,SAACC,GAAoC,IAA/BC,EAA8B,uDAApB,CAAEC,MAAO,MAC5C,OAAO,WACLvB,EAAkBsB,KAIhBE,EAAe,WACnBxB,EAAkB,KAGpB,OACE,sBAAK1B,UAAU,WAAf,UACsB,KAAnByB,EACC,cAAC,IAAD,UACE,gCACE,sBACExB,MAAO,CACLkD,WAAY,OACZC,SAAU,GACVC,MAAO,oBAJX,SAOG5B,EAAe/B,QAElB,uBACA,uBACEO,MAAO,CACLkD,WAAY,OACZC,SAAU,GACVC,MAAO,oBAJX,UAOG,cACA5B,EAAe6B,UAAW,IACQ,MAAlC7B,EAAe8B,eACd,uBAAMtD,MAAO,CAAEmD,SAAU,GAAID,WAAY,QAAzC,oBACW1B,EAAe8B,kBAExB,QAEN,uBACA,uBACEtD,MAAO,CACLkD,WAAY,OACZC,SAAU,GACVC,MAAO,mBAJX,UAOG,WACA5B,EAAe+B,UAElB,uBACA,uBACEvD,MAAO,CACLkD,WAAY,OACZC,SAAU,GACVC,MAAO,mBAJX,UAOG,cACA5B,EAAegC,UACmB,MAAlChC,EAAe8B,eACd,uBAAMtD,MAAO,CAAEmD,SAAU,GAAID,WAAY,QAAzC,oBACW1B,EAAeiC,kBAExB,QAEN,uBACA,uBACEzD,MAAO,CACLkD,WAAY,OACZC,SAAU,GACVC,MAAO,oBAJX,UAOG,WACA5B,EAAekC,OACmB,MAAlClC,EAAe8B,eACd,uBAAMtD,MAAO,CAAEmD,SAAU,GAAID,WAAY,QAAzC,oBACW1B,EAAemC,eAExB,QAEN,4BAGF,KACJ,cAAC,gBAAD,CACEC,iBAAkBnD,EAClBoD,WAAW,cACX7B,OACEN,EAAKG,MAAQ,MAAQH,EAAKG,MAAQ,IAC9B,IACAH,EAAKG,OAAS,KAAOH,EAAKG,MAAQ,IAClC,IACAH,EAAKG,OAAS,IACd,IACAiC,KAAKC,MAAMrC,EAAKG,MAAQ,IAE9BA,MACEH,EAAKG,MAAQ,MAAQH,EAAKG,MAAQ,IAC9B,IACAH,EAAKG,OAAS,KAAOH,EAAKG,MAAQ,IAClC,IACAH,EAAKG,OAAS,IACd,IACAiC,KAAKC,MAAMrC,EAAKG,MAAQ,GAE9BmC,WAAS,GArBX,SAuBE,cAAC,cAAD,CAAaC,UAAW1D,EAAxB,SACG,qBAAG2D,YACUC,KAAI,SAACrB,GACf,IAAMC,EAAU1B,EAAK+C,MAAK,SAACC,GAAD,OAAOA,EAAEC,YAAcxB,EAAIyB,MACrD,OACE,cAAC,YAAD,CAEEN,UAAWnB,EACX7B,KAAM8B,EAAUN,EAAWM,EAAQQ,QAzK/B,OA0KJvD,MAAOa,EACP2D,QAAS,kBAAMlD,EAAayB,IAC5BF,aAAcA,EAAaC,EAAKC,GAChCE,aAAcA,GANTH,EAAI2B,oB,SC/HZC,EAtDA,SAAClF,GACd,OACE,sBAAKQ,MAAO,CAAE2E,QAAS,IAAvB,UACE,qBACE3E,MAAO,CACLkD,WAAY,OACZjD,QAAS,OACTC,eAAgB,SAChBiD,SAAU,GACVyB,cAAe,IANnB,SASE,qBACE5E,MAAO,CACL6E,OAAQ,kBACRF,QAAS,WACTG,aAAc,EACdC,WAAY,QACZ3B,MAAO,UACP4B,OAAQ,WAPZ,SAUE,oBACEhF,MAAO,CAAEiF,eAAgB,OAAQ7B,MAAO,WACxCjD,KAAK,+CACL+E,OAAO,SACPC,IAAI,sBAJN,UAME,sBAAMnF,MAAO,CAAEoF,YAAa,IAA5B,SACE,cAAC,IAAD,CAAiBC,KAAM,CAAC,MAAO,UAAWtF,UAAU,aAPxD,gBAaJ,4DAC4B,KAC1B,mBACEC,MAAO,CACLoD,MAAO,UACPF,WAAY,OACZ+B,eAAgB,QAElB9E,KAAK,wBACLgF,IAAI,sBACJD,OAAO,SART,gC,iBCqSOI,E,kDAxUb,WAAY9F,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,GAFI,E,qDAKT,IAAD,OACD4B,EACwB,IAA5BvB,KAAKN,MAAM+F,MAAMC,OACb1F,KAAKN,MAAM+F,MAAME,UACdC,QAAO,SAACjG,GAAD,MAA2B,UAAhBA,EAAMA,SACxB0E,KAAI,SAAC1E,GACJ,MAAO,CACLA,MAAOA,EAAMA,MACb4D,UAAWsC,OAAOlG,EAAM4D,WACxBE,OAAQoC,OAAOlG,EAAM8D,QACrBC,UAAWmC,OAAOlG,EAAM+D,WACxBE,OAAQiC,OAAOlG,EAAMiE,QACrBkC,eAAgBD,OAAOlG,EAAM6D,gBAC7BuC,YAAaF,OACXlG,EAAM6D,eACJ7D,EAAMgE,eACNhE,EAAMkE,aAEVmC,eAAgBH,OAAOlG,EAAMgE,gBAC7BsC,YAAaJ,OAAOlG,EAAMkE,iBAGhC,GAEAqC,EACwB,IAA5BlG,KAAKN,MAAM+F,MAAMC,OACb,CACE,CACES,OAAQ,WACRC,SAAU,SAEZ,CACED,OAAQ,YACRC,SAAU,YACVC,KAAM,SAAC3G,GACL,OACE,qCACqC,IAAlCA,EAAM4G,SAASR,eAAuB,KACrC,uBACE5F,MAAO,CACLmD,SAAU,GACVD,WAAY,OACZE,MAAO,WAJX,UAOE,sBAAMpD,MAAO,CAAEmD,SAAU,GAAID,WAAY,QAAzC,oBAGC1D,EAAM4G,SAASR,kBAEjB,IACH,sBAAM7F,UAAU,SAAhB,SAA0BP,EAAMwD,aAKxC,CACEiD,OAAQ,SACRC,SAAU,SACVC,KAAM,SAAC3G,GACL,OACE,qCACkC,IAA/BA,EAAM4G,SAASP,YAAoB,KAClC,uBACE7F,MAAO,CACLmD,SAAU,GACVD,WAAY,OACZE,MAAO,WAJX,UAOE,sBAAMpD,MAAO,CAAEmD,SAAU,GAAID,WAAY,QAAzC,oBAGC1D,EAAM4G,SAASP,eAEjB,IACH,sBAAM9F,UAAU,SAAhB,SAA0BP,EAAMwD,aAKxC,CACEiD,OAAQ,YACRC,SAAU,YACVC,KAAM,SAAC3G,GACL,OACE,qCACqC,IAAlCA,EAAM4G,SAASN,eAAuB,KACrC,uBACE9F,MAAO,CACLmD,SAAU,GACVD,WAAY,OACZE,MAAO,WAJX,UAOE,sBAAMpD,MAAO,CAAEmD,SAAU,GAAID,WAAY,QAAzC,oBAGC1D,EAAM4G,SAASN,kBAEjB,IACH,sBAAM/F,UAAU,SAAhB,SAA0BP,EAAMwD,aAKxC,CACEiD,OAAQ,SACRC,SAAU,SACVC,KAAM,SAAC3G,GACL,OACE,qCACkC,IAA/BA,EAAM4G,SAASL,YAAoB,KAClC,uBACE/F,MAAO,CACLmD,SAAU,GACVD,WAAY,OACZE,MAAO,WAJX,UAOE,sBAAMpD,MAAO,CAAEmD,SAAU,GAAID,WAAY,QAAzC,oBAGC1D,EAAM4G,SAASL,eAEjB,IACH,sBAAMhG,UAAU,SAAhB,SAA0BP,EAAMwD,cAM1C,GAEAqD,EACgC,IAApCvG,KAAKN,MAAM8G,cAAcd,OACrBe,OAAOC,KAAK1G,KAAKN,MAAM8G,eAAenC,KAAI,SAACsC,GACzC,OAAO,eACJA,EAAOF,OAAOC,KACb,EAAKhH,MAAM8G,cAAcG,GAAMC,cAC/BvC,KAAI,SAACwC,GACL,MAAO,CACLF,KAAME,EACNtD,UAAW,EAAK7D,MAAM8G,cAAcG,GAAMC,aAAaC,GACpDtD,UACHuC,eAAgB,EAAKpG,MAAM8G,cAAcG,GAAMC,aAC7CC,GADc,gBAGhBC,SAAU,EAAKpH,MAAM8G,cAAcG,GAAMC,aAAaC,GACnDC,SACHrD,OAAQ,EAAK/D,MAAM8G,cAAcG,GAAMC,aAAaC,GACjDpD,OACHsD,cAAe,EAAKrH,MAAM8G,cAAcG,GAAMC,aAC5CC,GADa,eAGfnD,UAAW,EAAKhE,MAAM8G,cAAcG,GAAMC,aAAaC,GACpDnD,UACHsC,eAAgB,EAAKtG,MAAM8G,cAAcG,GAAMC,aAC7CC,GADc,wBAOxB,GAEAG,EACwB,IAA5BhH,KAAKN,MAAM+F,MAAMC,OACb,CACE,CACES,OAAQ,WACRC,SAAU,QAEZ,CACED,OAAQ,YACRC,SAAU,YACVC,KAAM,SAAC3G,GACL,OACE,qCACqC,IAAlCA,EAAM4G,SAASR,eAAuB,KACrC,uBACE5F,MAAO,CACLmD,SAAU,GACVD,WAAY,OACZE,MAAO,WAJX,UAOE,sBAAMpD,MAAO,CAAEmD,SAAU,GAAID,WAAY,QAAzC,oBAGC1D,EAAM4G,SAASR,kBAEjB,IACH,sBAAM7F,UAAU,SAAhB,SAA0BP,EAAMwD,aAKxC,CACEiD,OAAQ,SACRC,SAAU,SACVC,KAAM,SAAC3G,GACL,OACE,mCACE,sBAAMO,UAAU,SAAhB,SAA0BP,EAAMwD,YAKxC,CACEiD,OAAQ,YACRC,SAAU,YACVC,KAAM,SAAC3G,GACL,OACE,qCACqC,IAAlCA,EAAM4G,SAASN,eAAuB,KACrC,uBACE9F,MAAO,CACLmD,SAAU,GACVD,WAAY,OACZE,MAAO,WAJX,UAOE,sBAAMpD,MAAO,CAAEmD,SAAU,GAAID,WAAY,QAAzC,oBAGC1D,EAAM4G,SAASN,kBAEjB,IACH,sBAAM/F,UAAU,SAAhB,SAA0BP,EAAMwD,aAKxC,CACEiD,OAAQ,SACRC,SAAU,WACVC,KAAM,SAAC3G,GACL,OACE,qCACoC,IAAjCA,EAAM4G,SAASS,cAAsB,KACpC,uBACE7G,MAAO,CACLmD,SAAU,GACVD,WAAY,OACZE,MAAO,WAJX,UAOE,sBAAMpD,MAAO,CAAEmD,SAAU,GAAID,WAAY,QAAzC,oBAGC1D,EAAM4G,SAASS,iBAEjB,IACH,sBAAM9G,UAAU,SAAhB,SAA0BP,EAAMwD,cAM1C,GACN,OACE,qBAAKjD,UAAU,MAAMC,MAAO,CAAE+G,UAAW,IAAzC,SACE,qBAAKhH,UAAU,YAAf,SACE,qBACEC,MAAO,CACL+E,WAAY,QACZ3B,MAAO,UACP0B,aAAc,IAJlB,SAOE,cAAC,IAAD,CACEzD,KAAMA,EACN2E,QAASA,EACTgB,gBAAiB,GACjBjH,UAAU,sBACVkH,WAAY,8CACZC,cAAe,SAACzH,EAAO0H,EAASC,GAC9B,MAAO,CACLpH,MAAO,CACLkD,WAAY,UAIlBmE,WAAY,SAAC5H,EAAO0H,EAASC,EAAQE,GACnC,MAAO,CACL9C,QAAS,SAAC+C,EAAGC,GACPA,GACFA,OAKRC,YAAU,EACVC,aAAc,SAACC,GACb,OAAkC,IAA3BA,EAAIvB,SAAS/C,UAAkB,KACpC,qBAAKrD,MAAO,CAAE2E,QAAS,QAAvB,SACE,qBAAK3E,MAAO,CAAE8E,aAAc,IAA5B,SACE,cAAC,IAAD,CACEzD,KACEkF,OAAOqB,OACLvB,EAASX,QACP,SAACjG,GAAD,OACE8G,OAAOC,KAAK/G,GAAO,KAAOkI,EAAIvB,SAAS3G,SACzC,IACF,GAEJuG,QAASc,EACTE,gBAAiB,EACjBa,gBAAgB,qB,GA3TpBvH,a,0GC0LLwH,G,OA7KS,SAACtI,GACvB,IAAM6B,OACWU,IAAfvC,EAAM6B,KACF,CACE,CAAE0G,KAAM,MAAOC,GAAI,IAAMC,GAAI,KAAMC,IAAK,MACxC,CAAEH,KAAM,MAAOC,GAAI,IAAMC,GAAI,KAAMC,IAAK,MACxC,CAAEH,KAAM,QAASC,GAAI,IAAMC,GAAI,KAAMC,IAAK,MAC1C,CAAEH,KAAM,QAASC,GAAI,KAAMC,GAAI,KAAMC,IAAK,KAC1C,CAAEH,KAAM,MAAOC,GAAI,KAAMC,GAAI,KAAMC,IAAK,MACxC,CAAEH,KAAM,OAAQC,GAAI,KAAMC,GAAI,KAAMC,IAAK,MACzC,CAAEH,KAAM,OAAQC,GAAI,KAAMC,GAAI,KAAMC,IAAK,OAE3C1I,EAAM6B,KAEN8G,EAAgB,SAAC,GAAgC,IAA9B5E,EAA6B,EAA7BA,OAAQ6E,EAAqB,EAArBA,QAASC,EAAY,EAAZA,MACxC,OAAI9E,EAEA,sBACExD,UAAU,iBACVC,MAAO,CAAE+E,WAAY,QAASJ,QAAS,GAAIG,aAAc,IAF3D,UAIE,mBACE9E,MAAO,CACLsI,UAAW,SACXpF,WAAY,OACZE,MAAO,WAJX,SAOGiF,IAEiB,qBAAZD,GACM,OAAZA,GACAA,EAAQjE,KAAI,SAACoE,EAAMC,GACjB,OACE,gCACE,uBAAMxI,MAAO,CAAEoD,MAAOmF,EAAKnF,MAAOF,WAAY,QAA9C,UACGqF,EAAKR,KADR,IACe,OAEf,uBAAM/H,MAAO,CAAEoD,MAAOmF,EAAKnF,MAAOF,WAAY,QAA9C,UACGqF,EAAKvF,MAGwB,qBAFtBxD,EAAM6B,KAAKqE,QACjB,SAACrE,GAAD,OAAc,OAAJA,QAAI,IAAJA,OAAA,EAAAA,EAAM0G,QAASQ,EAAKH,QAAQL,QACtC,GAFM,eAEKQ,EAAKR,OACd,KACA,MAEFvI,EAAM6B,KAAKqE,QACT,SAACrE,GAAD,OAAc,OAAJA,QAAI,IAAJA,OAAA,EAAAA,EAAM0G,QAASQ,EAAKH,QAAQL,QACtC,GAFF,eAEaQ,EAAKR,OAKU,qBAFtBvI,EAAM6B,KAAKqE,QACjB,SAACrE,GAAD,OAAc,OAAJA,QAAI,IAAJA,OAAA,EAAAA,EAAM0G,QAASQ,EAAKH,QAAQL,QACtC,GAFM,eAEKQ,EAAKR,OACd,KACA,OAEN,yBAvBQS,SA+Bf,MA6BLC,EAbc,SAACC,GACjB,OAAQA,GACN,IAAK,YACH,OAAOC,IACT,IAAK,WACH,OAAOC,IACT,IAAK,YACH,OAAOC,IACT,QACE,OAAOF,KAIDG,CAAYtJ,EAAMkJ,OAC1BK,EA3BY,SAACL,GACf,OAAQA,GACN,IAAK,YACH,OAAOM,IACT,IAAK,WACH,OAAOC,IACT,IAAK,YACH,OAAOC,IACT,QACE,OAAOF,KAkBFG,CAAU3J,EAAMkJ,OAC3B,OACE,qBACE3I,UAAU,sBACVC,MAAOR,EAAMwC,OAAS,CAAEA,OAAQxC,EAAMwC,QAAW,CAAEA,OAAQ,KAF7D,SAIE,cAACoH,EAAA,EAAD,UACE,eAACL,EAAD,CACEM,OAAQ7J,EAAM6J,OAAS7J,EAAM6J,OAAS,aACtCxH,MAAO,IACPG,OAAQ,IACRX,KAAMA,EACNiI,OACE9J,EAAM6J,QAA2B,aAAjB7J,EAAM6J,OAClB,CACEE,KAAM,IAER,GAVR,UAaE,cAACC,EAAA,EAAD,CAAeC,gBAAgB,QAC9BjK,EAAM6J,QAA2B,aAAjB7J,EAAM6J,OACrB,cAACK,EAAA,EAAD,CAAOC,KAAK,WAEZ,cAACD,EAAA,EAAD,CAAOE,MAAM,EAAOC,QAASrK,EAAMsK,KAAOtK,EAAMsK,KAAO,SAExDtK,EAAM6J,QAA2B,aAAjB7J,EAAM6J,OACrB,cAACU,EAAA,EAAD,CACEJ,KAAK,WACLC,MAAM,EACNC,QAASrK,EAAMsK,KAAOtK,EAAMsK,KAAO,SAGrC,cAACC,EAAA,EAAD,IAEDvK,EAAMwK,cACL,cAACC,EAAA,EAAD,CAASC,QAAS,cAAC/B,EAAD,MAElB,cAAC8B,EAAA,EAAD,IAEuB,qBAAjBzK,EAAM2K,SAA2C,IAAjB3K,EAAM2K,OAC5C,cAACC,EAAA,EAAD,CACEf,OAAQ7J,EAAM6K,aAAe7K,EAAM6K,aAAe,aAClDf,OAAQ,CAAEgB,IAAK,EAAGf,KAAM,EAAGgB,MAAO,EAAGC,OAAQ,IAC7CC,cACEjL,EAAMiL,cAAgBjL,EAAMiL,cAAgB,WAG9C,KACHjL,EAAMkL,OAAOvG,KAAI,SAACkE,EAAOG,GAAR,MACA,aAAhBhJ,EAAMkJ,MACJ,cAACD,EAAD,CAEEkC,QAAS,IACThB,KAAK,WACLE,QAASxB,EACTuC,OAAQpL,EAAMqL,OAAOrC,GACrBvH,KAAMzB,EAAMqL,OAAOrC,IALdA,GAQP,cAACC,EAAD,CAEEkC,QAAS,IACThB,KAAK,WACLE,QAASxB,EACTuC,OAAQpL,EAAMqL,OAAOrC,GACrBsC,UAAW,CAAEC,EAAG,GAChB9J,KAAMzB,EAAMqL,OAAOrC,GACnBwC,KAAK,GAPAxC,eCvINyC,G,OAnCG,SAACzL,GACjB,OACE,qBAAKO,UAAU,YAAf,SACGP,EAAM0L,QAAQ/G,KAAI,SAACgH,EAAQ3C,GAC1B,OACE,qBAEEzI,UACEP,EAAM4L,sBAAwB5L,EAAM6L,aAAa7C,GAC7C,gBACA,SAENxI,MACY,IAAVwI,EACI,CACE8C,oBAAqB,GACrBC,uBAAwB,IAE1B/C,IAAUhJ,EAAM0L,QAAQ1F,OAAS,EACjC,CACEgG,qBAAsB,GACtBC,wBAAyB,IAE3B,GAENjH,QAAS,kBAAMhF,EAAMgF,QAAQhF,EAAM6L,aAAa7C,KApBlD,SAsBG2C,GArBI3C,UCTF,MAA0B,kCCqK1BkD,E,kDA/Jb,WAAYlM,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXkM,YAAa,aAHE,E,qDAOT,IAAD,OACHd,EAAS,CACXe,UAAW,UACXC,UAAW,UACXC,OAAQ,WAGNC,EAAuBjM,KAAKN,MAAMwM,YAAYtG,QAChD,SAACrE,GAAD,MAA0B,cAAhBA,EAAK4K,UAEbC,EAAuBpM,KAAKN,MAAMwM,YAAYtG,QAChD,SAACrE,GAAD,MAA0B,cAAhBA,EAAK4K,UAEbE,EAAoBrM,KAAKN,MAAMwM,YAAYtG,QAC7C,SAACrE,GAAD,MAA0B,aAAhBA,EAAK4K,UAGbG,EAAQ,SAACC,EAAMhL,EAAMmH,GAEvB,IADA,IAAInF,EAAY,EACPiJ,EAAI,EAAGA,GAAK9D,EAAO8D,IAC1BjJ,GAAasC,OAAOtE,EAAKiL,GAAGD,IAE9B,OAAOhJ,GAGT,OACE,qBAAKtD,UAAU,uBAAf,UACiC,IAA9BD,KAAKN,MAAM+M,eACV,8BACE,qBAAKC,IAAKC,EAAOC,IAAI,aAEO,IAA5B5M,KAAKN,MAAM+F,MAAMC,OACnB1F,KAAKN,MAAM+F,MAAME,UACdC,QAAO,SAACtG,GAAD,OACNA,EAASK,MACNkN,cACAC,SAAS,EAAKpN,MAAMqN,aAAaF,kBAErCxI,KAAI,SAAC/E,EAAUoJ,GACd,IAAIsE,EAAIf,EAAqB5H,KAAI,SAAC4I,EAAOvE,GACvC,MAAO,CACLT,KAAMgF,EAAK,KACXnB,UAAWQ,EACThN,EAASkF,UAAUqI,cACnBZ,EACAvD,GAEFqD,UAAWO,EACThN,EAASkF,UAAUqI,cACnBT,EACA1D,GAEFsD,OAAQM,EACNhN,EAASkF,UAAUqI,cACnBR,EACA3D,OAKN,MAA0B,UAAnBpJ,EAASK,MACd,qBAAiBM,UAAU,WAAWC,MAAO,CAAE2E,QAAS,IAAxD,SACE,sBAAK5E,UAAU,aAAf,UACE,uBAAOA,UAAU,mBAAjB,SAAqCX,EAASK,QAC9C,uBACA,sBACEM,UAAU,6BACVC,MAAO,CAAEgN,WAAY,GAAIpI,cAAe,IAF1C,UAIE,sBAAK7E,UAAU,mBAAf,UACE,8BAAMX,EAASiE,YACf,sBACEtD,UAAU,kBACVC,MAAO,CACLoD,MAAO,WAHX,UAME,sBAAMpD,MAAO,CAAEmD,SAAU,GAAID,WAAY,QAAzC,oBAGC9D,EAASkE,kBAEZ,+CAEF,sBAAKvD,UAAU,mBAAf,UACE,qBAAKC,MAAO,CAAEiN,aAAc,IAA5B,SACG7N,EAASmE,SAEZ,4CAEF,sBAAKxD,UAAU,mBAAf,UACE,8BAAMX,EAASoE,YACf,sBACEzD,UAAU,kBACVC,MAAO,CACLoD,MAAO,WAHX,UAME,sBAAMpD,MAAO,CAAEmD,SAAU,GAAID,WAAY,QAAzC,oBAGC9D,EAASqE,kBAGZ,+CAEF,sBAAK1D,UAAU,mBAAf,UACE,8BAAMX,EAASsE,SACf,sBACE3D,UAAU,kBACVC,MAAO,CACLoD,MAAO,WAHX,UAME,sBAAMpD,MAAO,CAAEmD,SAAU,GAAID,WAAY,QAAzC,oBAGC9D,EAASuE,eAEZ,+CAGJ,gCACE,cAAC,EAAD,CACEuH,QAAS,CAAC,QAAS,QAAS,UAC5BG,aAAc,CAAC,YAAa,YAAa,UACzC7G,QAAS,SAAC0I,GACR,EAAKC,SAAS,CACZxB,YAAauB,KAGjB9B,oBAAqB,EAAK3L,MAAMkM,cAElC,cAAC,EAAD,CACEjD,MAAO,YACPsB,eAAe,EACfoD,MAAM,EACN/L,KAAMyL,EACNpC,OAAQ,CAAC,EAAKjL,MAAMkM,aACpBd,OAAQ,CAACA,EAAO,EAAKpL,MAAMkM,uBA9EzBnD,GAmFR,QAEN,W,GA1JQlI,aCLL,G,OAAA,IAA0B,qCCA1B,MAA0B,kCCA1B,MAA0B,kCCwC1B2F,G,OAlCA,SAACzG,GACd,OACE,gCACE,sBAAKO,UAAU,SAAf,sBACYP,EAAM6N,UADlB,IAC8B7N,EAAMqC,MAAQ,KAAO,GAAK,aACtD,mBACE1B,KAAK,+CACL+E,OAAO,SACPC,IAAI,sBAHN,SAKE,qBAAKqH,IAAKc,EAAQZ,IAAI,SAAS3M,UAAU,qBAG7C,sBAAKA,UAAU,mBAAf,UACE,qBACEyE,QAAS,kBAAMhF,EAAM+N,QAAQC,KAAK,WAClChB,IAAKiB,EACLf,IAAI,QACJ3M,UAAU,eAEZ,sBAAMC,MAAO,CAAEkD,WAAY,QAA3B,oBACA,qBACEsB,QAAS,kBAAMhF,EAAM+N,QAAQC,KAAK,MAClChB,IAAKkB,EACLhB,IAAI,QACJ3M,UAAU,wBCpBL4N,G,OARW,SAACnO,GACzB,OACE,qBAAKQ,MAAOR,EAAMQ,MAAQR,EAAMQ,MAAQ,GAAID,UAAU,oBAAtD,SACGP,EAAMoO,UCAQC,E,4MACnBpO,MAAQ,CAAEoC,MAAO,EAAGG,OAAQ,G,EAE5B8L,iBAAmB,WACjB,EAAKX,SAAS,CAAEtL,MAAO1C,OAAO2C,WAAYE,OAAQ7C,OAAO8C,e,kEAGzD9C,OAAOmD,iBAAiB,SAAUxC,KAAKgO,oB,6CAGvC3O,OAAOoD,oBAAoB,SAAUzC,KAAKgO,oB,+BAI1C,OACE,cAAC9E,EAAA,EAAD,CACEnH,MAAO/B,KAAKL,MAAMoC,MAAQ,KAAO,IAAM,IACvCG,OAAQlC,KAAKL,MAAMoC,MAAQ,IAAM,GAAK,GACtCR,KAAMvB,KAAKN,MAAM6B,KAHnB,SAKE,cAACsH,EAAA,EAAD,CACEgB,KAAK,WACLE,QAAS/J,KAAKN,MAAM6I,MACpBuC,OAAQ9K,KAAKN,MAAM4D,MACnB2K,YAAa,EACb/C,KAAK,U,GAzBwBgD,iB,0BCyZxBC,G,kDAzZb,WAAYzO,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,GAFI,E,qDAKT,IAAD,OACHyO,EAC0B,IAA5BpO,KAAKN,MAAM+F,MAAMC,OACb1F,KAAKN,MAAM+F,MAAM4I,kBAAkBhK,KAAI,SAACiK,GACtC,MAAgC,KAAzBA,EAAMC,eACT,CACEtG,KAAMqG,EAAME,KACZjL,UAAWsC,OAAOyI,EAAMC,iBAE1B,QAEN,KAEFE,EAC0B,IAA5BzO,KAAKN,MAAM+F,MAAMC,OACb1F,KAAKN,MAAM+F,MAAM4I,kBAAkBhK,KAAI,SAACiK,GACtC,MAAgC,KAAzBA,EAAMC,eACT,CACEtG,KAAMqG,EAAME,KACZjL,UACEsC,OAAOyI,EAAMC,gBACb1I,OAAOyI,EAAMI,eACb7I,OAAOyI,EAAMK,iBAEjB,QAEN,KACFC,EAC0B,IAA5B5O,KAAKN,MAAM+F,MAAMC,OACb1F,KAAKN,MAAM+F,MAAM4I,kBAAkBhK,KAAI,SAACiK,GACtC,MAA+B,KAAxBA,EAAMI,cACT,CACEzG,KAAMqG,EAAME,KACZjL,UAAWsC,OAAOyI,EAAMI,gBAE1B,QAEN,KACFG,EAC0B,IAA5B7O,KAAKN,MAAM+F,MAAMC,OACb1F,KAAKN,MAAM+F,MAAM4I,kBAAkBhK,KAAI,SAACiK,GACtC,MAAgC,KAAzBA,EAAMK,eACT,CACE1G,KAAMqG,EAAME,KACZjL,UAAWsC,OAAOyI,EAAMK,iBAE1B,QAEN,KAEAG,EACwB,IAA5B9O,KAAKN,MAAM+F,MAAMC,OACb1F,KAAKN,MAAM+F,MAAME,UAAUC,QACzB,SAACmJ,GAAD,MAA6B,UAAjBA,EAAOpP,SACnB,GAAG6D,eACL,EAEAwL,EACwB,IAA5BhP,KAAKN,MAAM+F,MAAMC,OACb1F,KAAKN,MAAM+F,MAAME,UAAUC,QACzB,SAACmJ,GAAD,MAA6B,UAAjBA,EAAOpP,SACnB,GAAGgE,eACL,EAEAsL,EACwB,IAA5BjP,KAAKN,MAAM+F,MAAMC,OACb1F,KAAKN,MAAM+F,MAAME,UAAUC,QACzB,SAACmJ,GAAD,MAA6B,UAAjBA,EAAOpP,SACnB,GAAGkE,YACL,EAEAqL,EACwB,IAA5BlP,KAAKN,MAAM+F,MAAMC,OACb1F,KAAKN,MAAM+F,MAAME,UACdC,QAAO,SAACmJ,GAAD,MAA6B,UAAjBA,EAAOpP,SAC1BiG,QAAO,SAACjG,GAAD,OAA4C,IAAjCkG,OAAOlG,EAAM6D,mBAC/Ba,KAAI,SAAC1E,GACJ,OAAO,eAAGA,EAAMA,MAAQA,EAAM6D,mBAElC,GAEA2L,EACwB,IAA5BnP,KAAKN,MAAM+F,MAAMC,OACb1F,KAAKN,MAAM+F,MAAME,UACdC,QAAO,SAACmJ,GAAD,MAA6B,UAAjBA,EAAOpP,SAC1BiG,QAAO,SAACjG,GAAD,OAA4C,IAAjCkG,OAAOlG,EAAMgE,mBAC/BU,KAAI,SAAC1E,GACJ,OAAO,eAAGA,EAAMA,MAAQkG,OAAOlG,EAAMgE,oBAEzC,GACAyL,EACwB,IAA5BpP,KAAKN,MAAM+F,MAAMC,OACb1F,KAAKN,MAAM+F,MAAME,UACdC,QAAO,SAACmJ,GAAD,MAA6B,UAAjBA,EAAOpP,SAC1BiG,QAAO,SAACjG,GAAD,OAAyC,IAA9BkG,OAAOlG,EAAMkE,gBAC/BQ,KAAI,SAAC1E,GACJ,OAAO,eAAGA,EAAMA,MAAQkG,OAAOlG,EAAMkE,iBAEzC,GAEN,OACE,sBACE5D,UAAU,mBACVC,MAAO,CAAE2E,QAAS,qBAFpB,UAIE,qBAAK5E,UAAU,iBAAiBC,MAAO,CAAE2E,QAAS,IAAlD,SACE,sBACE5E,UAAU,oBACVC,MAAO,CACL+E,WAAY,WAHhB,UAME,qBAAK/E,MAAO,CAAEmD,SAAU,IAAxB,SAC+B,IAA5BrD,KAAKN,MAAM+F,MAAMC,OACd1F,KAAKN,MAAM+F,MAAME,UAAUC,QACzB,SAACmJ,GAAD,MAA6B,UAAjBA,EAAOpP,SACnB,GAAG4D,UACL,IAEN,sBAAKtD,UAAU,yBAAf,UACE,sBAAMC,MAAO,CAAEmD,SAAU,GAAID,WAAY,QAAzC,oBAC6B,IAA5BpD,KAAKN,MAAM+F,MAAMC,QAGU,qBAFjB1F,KAAKN,MAAM+F,MAAME,UAAUC,QAChC,SAACmJ,GAAD,MAA6B,UAAjBA,EAAOpP,SACnB,GAAG6D,gBAGmB,OAFxBxD,KAAKN,MAAM+F,MAAME,UAAUC,QACzB,SAACmJ,GAAD,MAA6B,UAAjBA,EAAOpP,SACnB,GAAG6D,eACHxD,KAAKN,MAAM+F,MAAME,UAAUC,QACzB,SAACmJ,GAAD,MAA6B,UAAjBA,EAAOpP,SACnB,GAAG6D,eAEP,EAC6B,IAAhCqC,OAAOiJ,GACN,cAAC,IAAD,CACEO,KACE,qBACEnP,MAAO,CACLoP,UAAW,IACXC,UAAW,SACXC,YAAa,GACbvK,WAAY,QACZD,aAAc,GACdH,QAAS,GACTvB,MAAO,UACPF,WAAY,QAThB,SAYG8L,EAAiB7K,KAAI,SAAC1E,EAAO+I,GAC5B,OACE,gCACGjC,OAAOC,KAAK/G,GAAO,GADtB,KAC4B8G,OAAOqB,OAAOnI,GAAO,KADvC+I,QAOlB+G,YAAa,QACbC,OAAQ1P,KAAKL,MAAMgQ,cACnBC,cAAe,kBACb,EAAKvC,SAAS,CACZsC,eAAgB,EAAKhQ,MAAMgQ,iBA3BjC,SA+BE,qBACEjL,QAAS,WACPmL,KAAQC,MAAM,CACZC,SAAU,aACVC,OAAQ,yBACRzH,MAAO,iBAET,EAAK8E,SAAS,CACZsC,eAAgB,EAAKhQ,MAAMgQ,iBAG/B1P,UAAU,cACVC,MAAO,CAAE+P,WAAY,EAAG/K,OAAQ,WAZlC,iBAiBA,QAEN,qBAAKhF,MAAO,CAAEmD,SAAU,IAAxB,uBAC6B,IAA5BrD,KAAKN,MAAM+F,MAAMC,OAChB,qBAAKxF,MAAO,CAAEC,QAAS,OAAQC,eAAgB,UAA/C,SACE,cAAC,EAAD,CACEmB,KAAM6M,EACN7F,MAAM,YACNjF,MAAM,cAGR,UAGR,qBAAKrD,UAAU,iBAAiBC,MAAO,CAAE2E,QAAS,IAAlD,SACE,sBACE5E,UAAU,oBACVC,MAAO,CACL+E,WAAY,WAHhB,UAME,qBAAK/E,MAAO,CAAEmD,SAAU,GAAI8J,aAAc,IAA1C,SAC+B,IAA5BnN,KAAKN,MAAM+F,MAAMC,OACd1F,KAAKN,MAAM+F,MAAME,UAAUC,QACzB,SAACmJ,GAAD,MAA6B,UAAjBA,EAAOpP,SACnB,GAAG8D,OACL,IAGN,qBAAKvD,MAAO,CAAEmD,SAAU,IAAxB,oBAC6B,IAA5BrD,KAAKN,MAAM+F,MAAMC,OAChB,qBAAKxF,MAAO,CAAEC,QAAS,OAAQC,eAAgB,UAA/C,SACE,cAAC,EAAD,CACEmB,KAAMkN,EACNlG,MAAM,YACNjF,MAAM,cAGR,UAGR,qBAAKrD,UAAU,iBAAiBC,MAAO,CAAE2E,QAAS,IAAlD,SACE,sBACE5E,UAAU,oBACVC,MAAO,CACL+E,WAAY,WAHhB,UAME,qBAAK/E,MAAO,CAAEmD,SAAU,IAAxB,SAC+B,IAA5BrD,KAAKN,MAAM+F,MAAMC,OACd1F,KAAKN,MAAM+F,MAAME,UAAUC,QACzB,SAACmJ,GAAD,MAA6B,UAAjBA,EAAOpP,SACnB,GAAG+D,UACL,IAEN,sBAAKzD,UAAU,yBAAf,UACE,sBAAMC,MAAO,CAAEmD,SAAU,GAAID,WAAY,QAAzC,oBAC6B,IAA5BpD,KAAKN,MAAM+F,MAAMC,QAGU,qBAFjB1F,KAAKN,MAAM+F,MAAME,UAAUC,QAChC,SAACmJ,GAAD,MAA6B,UAAjBA,EAAOpP,SACnB,GAAGgE,gBAGmB,OAFxB3D,KAAKN,MAAM+F,MAAME,UAAUC,QACzB,SAACmJ,GAAD,MAA6B,UAAjBA,EAAOpP,SACnB,GAAGgE,eACH3D,KAAKN,MAAM+F,MAAME,UAAUC,QACzB,SAACmJ,GAAD,MAA6B,UAAjBA,EAAOpP,SACnB,GAAGgE,eAEP,EAC6B,IAAhCkC,OAAOmJ,GACN,cAAC,IAAD,CACEK,KACE,qBACEnP,MAAO,CACL+E,WAAY,QACZD,aAAc,GACdH,QAAS,GACTvB,MAAO,UACPF,WAAY,QANhB,SASG+L,EAAiB9K,KAAI,SAAC1E,EAAO+I,GAC5B,OACE,gCACGjC,OAAOC,KAAK/G,GAAO,GADtB,KAC4B8G,OAAOqB,OAAOnI,GAAO,KADvC+I,QAOlB+G,YAAa,QACbC,OAAQ1P,KAAKL,MAAMuQ,WACnBN,cAAe,kBACb,EAAKvC,SAAS,CACZ6C,YAAa,EAAKvQ,MAAMuQ,cAxB9B,SA4BE,qBACExL,QAAS,WACPmL,KAAQC,MAAM,CACZC,SAAU,aACVC,OAAQ,sBACRzH,MAAO,gBAET,EAAK8E,SAAS,CACZ6C,YAAa,EAAKvQ,MAAMuQ,cAG5BjQ,UAAU,cACVC,MAAO,CAAE+P,WAAY,EAAG/K,OAAQ,WAZlC,iBAiBA,QAEN,qBAAKhF,MAAO,CAAEmD,SAAU,IAAxB,uBAC6B,IAA5BrD,KAAKN,MAAM+F,MAAMC,OAChB,qBAAKxF,MAAO,CAAEC,QAAS,OAAQC,eAAgB,UAA/C,SACE,cAAC,EAAD,CACEmB,KAAMsN,EACNtG,MAAM,YACNjF,MAAM,cAGR,UAGR,qBAAKrD,UAAU,iBAAiBC,MAAO,CAAE2E,QAAS,IAAlD,SACE,sBACE5E,UAAU,oBACVC,MAAO,CACL+E,WAAY,WAHhB,UAME,qBAAK/E,MAAO,CAAEmD,SAAU,IAAxB,SAC+B,IAA5BrD,KAAKN,MAAM+F,MAAMC,OACd1F,KAAKN,MAAM+F,MAAME,UAAUC,QACzB,SAACmJ,GAAD,MAA6B,UAAjBA,EAAOpP,SACnB,GAAGiE,OACL,IAEN,sBAAK3D,UAAU,yBAAf,UACE,sBAAMC,MAAO,CAAEmD,SAAU,GAAID,WAAY,QAAzC,oBAC6B,IAA5BpD,KAAKN,MAAM+F,MAAMC,QAGO,qBAFd1F,KAAKN,MAAM+F,MAAME,UAAUC,QAChC,SAACmJ,GAAD,MAA6B,UAAjBA,EAAOpP,SACnB,GAAGkE,aAGgB,OAFrB7D,KAAKN,MAAM+F,MAAME,UAAUC,QACzB,SAACmJ,GAAD,MAA6B,UAAjBA,EAAOpP,SACnB,GAAGkE,YACH7D,KAAKN,MAAM+F,MAAME,UAAUC,QACzB,SAACmJ,GAAD,MAA6B,UAAjBA,EAAOpP,SACnB,GAAGkE,YAEP,EAC0B,IAA7BgC,OAAOoJ,GACN,cAAC,IAAD,CACEI,KACE,qBACEnP,MAAO,CACL+E,WAAY,QACZD,aAAc,GACdH,QAAS,GACTvB,MAAO,UACPF,WAAY,QANhB,SASGgM,EAAc/K,KAAI,SAAC1E,EAAO+I,GACzB,OACE,gCACGjC,OAAOC,KAAK/G,GAAO,GADtB,KAC4B8G,OAAOqB,OAAOnI,GAAO,KADvC+I,QAOlB+G,YAAa,QACbC,OAAQ1P,KAAKL,MAAMwQ,WACnBP,cAAe,kBACb,EAAKvC,SAAS,CACZ8C,YAAa,EAAKxQ,MAAMwQ,cAxB9B,SA4BE,qBACEzL,QAAS,WACPmL,KAAQC,MAAM,CACZC,SAAU,aACVC,OAAQ,sBACRzH,MAAO,gBAET,EAAK8E,SAAS,CACZ8C,YAAa,EAAKxQ,MAAMwQ,cAG5BlQ,UAAU,cACVC,MAAO,CAAE+P,WAAY,EAAG/K,OAAQ,WAZlC,iBAiBA,QAEN,qBAAKhF,MAAO,CAAEmD,SAAU,IAAxB,oBAC6B,IAA5BrD,KAAKN,MAAM+F,MAAMC,OAChB,qBAAKxF,MAAO,CAAEC,QAAS,OAAQC,eAAgB,UAA/C,SACE,cAAC,EAAD,CACEmB,KAAMqN,EACNrG,MAAM,YACNjF,MAAM,cAGR,iB,GAlZU9C,a,qBC4EX4B,I,OAAAA,MA1EO,SAAC1C,GACrB,IAAM0Q,EAAQ,CACZC,UAAW,aACXC,KAAM,aACNC,IAAK,QACL/K,MAAO,QACPmD,MAAO,aAEL6H,EAAU,oBAEd,OAAO9Q,EAAM+Q,YAAc,IACzB,8BACE,qBAAKxQ,UAAU,wBAAf,SACGP,EAAM0L,QAAQ/G,KAAI,SAACgH,EAAQ3C,GAC1B,OACE,wBAEEzI,UACEP,EAAMgR,KAAOhR,EAAMiR,aAAajI,GAC5B8H,EAAU,UACVA,EAEN9L,QAAS,WACPhF,EAAMgF,QAAQhF,EAAMiR,aAAajI,IACjCmH,KAAQC,MAAM,CACZC,SAAUrQ,EAAMmK,KAChBmG,OAAQ3E,EAAS,YACjB9C,MAAO7I,EAAMmK,KAAO,IAAMwB,KAZhC,UAgBE,cAAC,IAAD,CACE9F,KAAM,CAAC,MAAO6K,EAAM/E,IACpBpL,UAAU,gBAEXoL,IAnBI3C,UA0Bf,8BACE,qBAAKzI,UAAU,wBAAf,SACGP,EAAM0L,QAAQ/G,KAAI,SAACgH,EAAQ3C,GAC1B,OACE,uBAEEzI,UACEP,EAAMgR,KAAOhR,EAAMiR,aAAajI,GAC5B8H,EAAU,UACVA,EAEN9L,QAAS,WACPhF,EAAMgF,QAAQhF,EAAMiR,aAAajI,IACjCmH,KAAQC,MAAM,CACZC,SAAUrQ,EAAMmK,KAChBmG,OAAQ3E,EAAS,YACjB9C,MAAO7I,EAAMmK,KAAO,IAAMwB,KAZhC,SAgBE,cAAC,IAAD,CACE9F,KAAM,CAAC,MAAO6K,EAAM/E,IACpBpL,UAAU,iBAjBPyI,c,4BC0DJkI,I,OA5GK,SAAClR,GACnB,IAAMmR,EAAc,CAClB,CACEC,UAAW,SACXC,SAFF,YAE8B,IAAjBC,EAAgB,EAAhBA,aACT,GAAwB,YAApBtR,EAAMuR,UAAyB,CACjC,IAAIC,EAAeF,EAAaG,WAAWC,eAAe,GAC1D1R,EAAM2R,YAAY3R,EAAM4R,KAAKJ,EAAarJ,MAC1CmJ,EAAaG,WAAWI,aAAa,QAChC,CACL,IAAIL,EAAeF,EAAaG,WAAWC,eAAe,GACtDF,GACFxR,EAAM2R,YAAY3R,EAAM4R,KAAK7K,OAAOqB,OAAOoJ,GAAc,IAAI,QAMvE,OACE,cAAC,KAAD,CACEjR,UAAU,gBACViC,OAAQxC,EAAMwC,OAASxC,EAAMwC,OAAS,QACtCH,MAAOrC,EAAMqC,MAAQrC,EAAMqC,MAAQ,OACnCkP,UAAWvR,EAAMuR,UAAYvR,EAAMuR,UAAY,MAC/CK,KAAM5R,EAAM4R,KACZpL,QAASxG,EAAMwG,QACfkF,QAAS,CACPoG,yBAA0B,EAC1BC,aAAc,EACdC,gBAAiB,cACjB3G,OAAQ,CACN,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAEF4G,SAAU,UACVC,SAAU,UACVC,SAAU,UACVC,UAAWpS,EAAMoS,UACbpS,EAAMoS,UACN,CAAErI,KAAM,EAAGe,IAAK,GAAIC,MAAO,GAK/BsH,WAA+B,IAApBrS,EAAMqS,UACjB1H,OAAQ3K,EAAM2K,OACV,CAAE2H,SAAU,QACZtS,EAAMuS,eACNvS,EAAMuS,eACN,CACED,SAAU,QACVE,UAAW,UAEjBC,MAAOzS,EAAMyS,MACT,CACErE,MAAO,GACPsE,aAAc,OACdC,UAAW,WAEb,CAAEvE,MAAOpO,EAAMoO,MAAOwE,eAAgB,CAAEhP,MAAO,SACnDiP,MAAO7S,EAAM6S,MACT,CACEH,aAAc,QAEhB,CAAEI,SAAU,GAChBC,iBAC4B,IAA1B/S,EAAM+S,gBACF,SAAC5K,EAAKjG,EAAMsB,GACV,MACE,qFACAxD,EAAM4R,KAAKzJ,GAAK,GAChB,UACAjG,EACA,UAGJ,MAMR8Q,UAAW,CAAE,cAAe,KAC5B7B,aAA8B,IAAjBnR,EAAMiT,OAAkB9B,EAAc,SCrG1C+B,I,OAJY,SAAClT,GAC1B,OAAO,qBAAKO,UAAU,qBAAf,SAAqCP,EAAM0K,Y,8BCA9CyI,GAAS,CAAC,UAAW,mBAAoB,WAgChCC,GA9BQ,SAACpT,GACtB,OACE,qBACEO,UAAU,sBACVC,MAAOR,EAAMwC,OAAS,CAAEA,OAAQxC,EAAMwC,QAAW,CAAEA,OAAQ,KAF7D,SAIE,cAACoH,EAAA,EAAD,UACE,eAACyJ,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,CACEjJ,QAAQ,QACRxI,KAAM7B,EAAM6B,KACZ0R,YAAa,IACb9R,KAAK,UACLoH,OAAO,EALT,SAOG7I,EAAM6B,KAAK8C,KAAI,SAAC6O,EAAOxK,GAAR,OACd,cAAC,KAAD,CAEEvH,KAAM0R,GAAOnK,EAAQmK,GAAOnN,SAF9B,eACegD,SAMnB,cAACyB,EAAA,EAAD,YCotBKkG,G,kDAvuBb,WAAY3Q,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CAAEwM,QAAQ,EAAOgH,QAAS,EAAGC,SAAS,GAFlC,E,qDAKT,IAAD,OACHC,EAAe,GAEnB,GAAwC,IAApCrT,KAAKN,MAAM8G,cAAcd,OAAc,CACzC,IAAInE,EAAO,GACXkF,OAAOqB,OAAO9H,KAAKN,MAAM8G,eAAenC,KAAI,SAACsC,GAC3C,OAAOF,OAAO6M,OAAO/R,EAAMoF,EAAKC,iBAUlCyM,EAPa5M,OAAOC,KAAKnF,GAAMgS,MAAK,SAACC,EAAGC,GACtC,OAAOlS,EAAKkS,GAAL,UAAuBlS,EAAKiS,GAAL,aAG7B5N,QAAO,SAACrE,GAAD,MAAmB,eAATA,KACjBmS,MAAM,EAAG,IAEYrP,KAAI,SAACsC,GAC3B,OAAO,aAAEsB,KAAMtB,GAAO,QAAUpF,EAAKoF,GAAMpD,cAI/C,IAAIoQ,EAC0B,IAA5B3T,KAAKN,MAAM+F,MAAMC,OACb1F,KAAKN,MAAM+F,MAAM4I,kBAAkBhK,KAAI,SAACiK,GACtC,MAAgC,KAAzBA,EAAMsF,eACT,CACE3L,KAAMqG,EAAME,KACZ1C,UAAWjG,OAAOyI,EAAMuF,gBACxBC,OACEjO,OAAOyI,EAAMuF,gBACbhO,OAAOyI,EAAMsF,gBACb/N,OAAOyI,EAAMyF,eACfhI,UAAWlG,OAAOyI,EAAMsF,gBACxB5H,OAAQnG,OAAOyI,EAAMyF,gBAEvB,QAEN,KAEFC,EAC0B,IAA5BhU,KAAKN,MAAM+F,MAAMC,OACb1F,KAAKN,MAAM+F,MAAM4I,kBAAkBhK,KAAI,SAACiK,GACtC,MAAgC,KAAzBA,EAAMK,eACT,CACE1G,KAAMqG,EAAME,KACZ1C,UAAWjG,OAAOyI,EAAMC,gBACxBuF,OACEjO,OAAOyI,EAAMC,gBACb1I,OAAOyI,EAAMK,gBACb9I,OAAOyI,EAAMI,eACf3C,UAAWlG,OAAOyI,EAAMK,gBACxB3C,OAAQnG,OAAOyI,EAAMI,eACrBuF,eAAgBpO,OAAOyI,EAAMuF,gBAC7BK,YACErO,OAAOyI,EAAMuF,gBACbhO,OAAOyI,EAAMsF,gBACb/N,OAAOyI,EAAMyF,eACfI,eAAgBtO,OAAOyI,EAAMsF,gBAC7BQ,YAAavO,OAAOyI,EAAMyF,gBAE5B,QAEN,KAEFM,EAC0B,IAA5BrU,KAAKN,MAAM+F,MAAMC,OAAe1F,KAAKN,MAAM+F,MAAME,UAAY,GAQ3D2O,EAC0B,IAA5BtU,KAAKN,MAAM+F,MAAMC,OACb2O,EACGzO,QACC,SAACmJ,GAAD,MACmB,UAAjBA,EAAOpP,OAAsC,qBAAjBoP,EAAOpP,SAEtC0E,KAAI,SAAC1E,GACJ,MAAO,CAACA,EAAMA,MAAOkG,OAAOlG,EAAM,EAAKD,MAAM6U,oBAEjD,GAEND,EAAeA,EAAaf,MAlBT,SAACC,EAAGC,GACrB,OAAI5N,OAAO2N,EAAE,IAAM3N,OAAO4N,EAAE,KAAa,EACrC5N,OAAO2N,EAAE,IAAM3N,OAAO4N,EAAE,IAAY,EACjC,KAeoCC,MAAM,EAAG,IAEtD,IAAIc,EAAmB,GACK,IAAxBF,EAAa5O,QACf4O,EAAajQ,KAAI,SAAC9C,GAChBiT,EAAiB9G,KAAKnM,EAAK,OAI/B,IAuEIkT,EAvEAC,EAC0B,IAA5B1U,KAAKN,MAAM+F,MAAMC,OACb2O,EACGzO,QACC,SAACmJ,GAAD,MACmB,UAAjBA,EAAOpP,OACP6U,EAAiB1H,SAASiC,EAAOpP,UAEpC0E,KAAI,SAACkI,GACJ,OAAOA,EAAK/H,UAAUqI,iBAE1B,GAEF8H,EAC0B,IAA5B3U,KAAKN,MAAM+F,MAAMC,OACb2O,EACGzO,QACC,SAACmJ,GAAD,MACmB,UAAjBA,EAAOpP,OACP6U,EAAiB1H,SAASiC,EAAOpP,UAEpC0E,KAAI,SAACkI,GACJ,OAAOA,EAAK5M,SAEhB,GAEFsM,EAAuBjM,KAAKN,MAAMwM,YAAYtG,QAChD,SAACrE,GAAD,MAA0B,cAAhBA,EAAK4K,UAEbC,EAAuBpM,KAAKN,MAAMwM,YAAYtG,QAChD,SAACrE,GAAD,MAA0B,cAAhBA,EAAK4K,UAEbE,EAAoBrM,KAAKN,MAAMwM,YAAYtG,QAC7C,SAACrE,GAAD,MAA0B,aAAhBA,EAAK4K,UAGbG,EAAQ,SAACC,EAAMhL,EAAMmH,GAEvB,IADA,IAAInF,EAAY,EACPiJ,EAAI,EAAGA,GAAK9D,EAAO8D,IAC1BjJ,GAAasC,OAAOoG,EAAqBO,GAAGD,IAE9C,OAAOhJ,GAGLqR,EAAyB3I,EAAqB5H,KAAI,SAAC9C,EAAMmH,GAC3D,IAAImM,EAAM,GAOV,OALAH,EAAkBrQ,KAAI,SAACkI,GACrBsI,EAAInH,KAAJ,eACGnB,EAAKuI,cAAgBxI,EAAMC,EAAMN,EAAsBvD,QAGrD,eAAGnH,EAAKiN,KAAOqG,MAGKzI,EAAqB/H,KAAI,SAAC9C,GACrD,IAAIsT,EAAM,GAIV,OAHAH,EAAkBrQ,KAAI,SAACkI,GACrBsI,EAAInH,KAAJ,eAAYnB,EAAKuI,cAAgBvT,EAAKgL,QAEjC,eAAGhL,EAAKiN,KAAOqG,MAGExI,EAAkBhI,KAAI,SAAC9C,GAC/C,IAAIsT,EAAM,GAIV,OAHAH,EAAkBrQ,KAAI,SAACkI,GACrBsI,EAAInH,KAAJ,eAAYnB,EAAKuI,cAAgBvT,EAAKgL,QAEjC,eAAGhL,EAAKiN,KAAOqG,MAKxBJ,EACoC,IAAlCzU,KAAKN,MAAMwM,YAAYxG,OACnBkP,EAAuBvQ,KAAI,SAACiK,EAAO5F,GAQjC,OAPYjC,OAAOqB,OAAOwG,GAAOjK,KAAI,SAAC1E,GACpC,IAAIoV,EAAW,CAAE9M,KAAMxB,OAAOC,KAAK4H,GAAO,IAI1C,OAHA3O,EAAM0E,KAAI,SAAC1E,EAAO6M,GAChBuI,EAASJ,EAAkBnI,IAAM/F,OAAOqB,OAAOnI,GAAO,MAEjDoV,KAEI,MAEf,KAEN,IAAIvB,EACgC,IAAlCxT,KAAKN,MAAMwM,YAAYxG,QAA4C,IAA5B1F,KAAKN,MAAM+F,MAAMC,OACpD1F,KAAKN,MAAMwM,YACRtG,QAAO,SAACrE,GAAD,MAA0B,cAAhBA,EAAK4K,UACtB9H,KAAI,SAAC2Q,EAAGtM,GACP,IAAIuM,EAAI,GACRxO,OAAOC,KAAKsO,GAAG3Q,KAAI,SAAC6Q,GAClBD,EAAEC,GAAM5I,EAAM4I,EAAI,EAAKxV,MAAMwM,YAAaxD,MAE5C,IAAIyM,EAAK1O,OAAO2O,YACd3O,OAAO4O,QACL5O,OAAO2O,YACL3O,OAAO4O,QAAQJ,GAAG1B,MAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAE,GAAKD,EAAE,QAE5CE,MAAM,EAAG,IAab,OAVQjN,OAAOC,KAAKyO,GACjBvP,QAAO,SAACqC,GAAD,MAAmB,OAATA,KACjB5D,KAAI,SAAC4D,EAAMuE,GACV,OAAO,aACLvE,KAAM,EAAKvI,MAAM+F,MAAME,UAAUC,QAC/B,SAACjG,GAAD,OAAWA,EAAM6E,UAAUqI,gBAAkB5E,KAC7C,GAAGtI,OACJ,QAAUwV,EAAGlN,UAKxB,GAOAqN,EAA2BtV,KAAKN,MAAMwM,YAAYtG,QACtD,SAACrE,GAAD,MAA0B,cAAhBA,EAAK4K,UAGXoJ,EAAe,CACnBC,QAAS,SAACC,GAAD,oBAAC,gBACLA,GADI,IAEP/D,gBAAiB,QACjBpM,YAAa,GACb6H,aAAc,MAEhB9B,OAAQ,SAACoK,EAAD,GAAyD,EAA9ClU,KAA+C,IAAzCmU,EAAwC,EAAxCA,WAAYC,EAA4B,EAA5BA,UAAWC,EAAiB,EAAjBA,WAC9C,OAAO,6BACFH,GADL,IAEE/D,gBAAiBgE,EACb,KACAE,EACA,UACAD,EACA,UACA,KACJrS,MAAOoS,EAAa,OAASE,EAAa,QAAU,UACpD1Q,OAAQwQ,EAAa,cAAgB,UAErC,UAAU,6BACLD,EAAO,YADZ,IAEE/D,iBAAkBgE,IAAeE,EAAa,UAAY,eAK9DC,EAAY,GACZC,EAAmB,GAEW,IAA9B9V,KAAKN,MAAMqW,QAAQrQ,SACrB1F,KAAKN,MAAMqW,QAAQ1R,KAAI,SAAC9C,GACtBsU,EAAUnI,KAAKnM,EAAKyU,gBAEtBH,EAAY,YAAI,IAAII,IAAIJ,IAAYxR,KAAI,SAAC6R,GACvC,OAAO,eAAGA,EAAU,OAIxB,IAAIC,EAAW,GACbC,EAAc,GACZC,EAAU,EACVC,EAAgB,EACpB,GAAkC,IAA9BtW,KAAKN,MAAMqW,QAAQrQ,OAAc,CACnC,IAAI6Q,EAAS,EACXC,EAAS,EACTC,EAAS,EACTC,EAAS,EACTC,EAAS,EACTC,EAAS,EACTC,EAAS,EACTC,EAAS,EACTC,EAAS,EACTC,EAAU,EACVC,EAAO,EACPC,EAAS,EACXlX,KAAKN,MAAMqW,QAAQ1R,KAAI,SAAC9C,GACtBsU,EAAUjQ,QAAO,SAACsQ,EAASxN,GACrBjC,OAAOC,KAAKwP,GAAS,KAAO3U,EAAKyU,cACnCH,EAAUnN,GAAOnH,EAAKyU,aACpBH,EAAUnN,GAAOnH,EAAKyU,aAAe,MAGnB,KAApBzU,EAAK4V,WACHtR,OAAOtE,EAAK4V,aAAe,GAAKtR,OAAOtE,EAAK4V,aAAe,GAC7DZ,IAEA1Q,OAAOtE,EAAK4V,YAAc,IAC1BtR,OAAOtE,EAAK4V,aAAe,GAE3BX,IAEA3Q,OAAOtE,EAAK4V,YAAc,IAC1BtR,OAAOtE,EAAK4V,aAAe,GAE3BV,IAEA5Q,OAAOtE,EAAK4V,YAAc,IAC1BtR,OAAOtE,EAAK4V,aAAe,GAE3BT,IAEA7Q,OAAOtE,EAAK4V,YAAc,IAC1BtR,OAAOtE,EAAK4V,aAAe,GAE3BR,IAEA9Q,OAAOtE,EAAK4V,YAAc,IAC1BtR,OAAOtE,EAAK4V,aAAe,GAE3BP,IAEA/Q,OAAOtE,EAAK4V,YAAc,IAC1BtR,OAAOtE,EAAK4V,aAAe,GAE3BN,IAEAhR,OAAOtE,EAAK4V,YAAc,IAC1BtR,OAAOtE,EAAK4V,aAAe,GAE3BL,IAEAjR,OAAOtE,EAAK4V,YAAc,IAC1BtR,OAAOtE,EAAK4V,aAAe,GAE3BJ,IAEAC,IAGFX,IAGkB,KAAhB9U,EAAK6V,OACa,MAAhB7V,EAAK6V,OACPH,IACyB,MAAhB1V,EAAK6V,QACdF,IAGFZ,OAIJR,EAAmBD,EAAUxR,KAAI,SAAC6R,GAChC,GAAgC,KAA5BzP,OAAOC,KAAKwP,GAAS,GACvB,OAAO,aACLjO,KAAMxB,OAAOC,KAAKwP,IACjB,WAAazP,OAAOqB,OAAOoO,OAKlCC,EAAW,CAAC,aAERlO,KAAM,cACL,QAAUsO,GAHJ,aAKPtO,KAAM,eAAgB,QAAUuO,GALzB,aAMPvO,KAAM,eAAgB,QAAUwO,GANzB,aAOPxO,KAAM,eAAgB,QAAUyO,GAPzB,aAQPzO,KAAM,eAAgB,QAAU0O,GARzB,aASP1O,KAAM,eAAgB,QAAU2O,GATzB,aAUP3O,KAAM,eAAgB,QAAU4O,GAVzB,aAWP5O,KAAM,eAAgB,QAAU6O,GAXzB,aAYP7O,KAAM,eAAgB,QAAU8O,GAZzB,aAaP9O,KAAM,eAAgB,QAAU+O,IAEpCZ,EAAc,CACZ,CAAEnO,KAAM,OAAQ/E,MAAO+T,GACvB,CAAEhP,KAAM,SAAU/E,MAAOgU,GACzB,CAAEjP,KAAM,mBAAoB/E,MAAOoT,IAIvC,OACE,sBAAKrW,UAAU,MAAf,UACE,qBAAKA,UAAU,mBAAf,SACE,sBACEC,MAAO,CACLmX,UAAW,IACXpS,WAAY,8CACZH,cAAe,GACfwS,YAAa,GACbpK,WAAY,GACZlI,aAAc,GACdmI,aAAc,IARlB,UAWE,cAAC,EAAD,CAAmBW,MAAO,qCAC1B,cAAC,EAAD,CACElF,MAAO,WACPsB,eAAe,EACfoD,MAAM,EACN/L,KAAM8R,EACNzI,OAAQ,CAAC,SACTG,OAAQ,CAAC,kBAIf,qBAAK9K,UAAU,kBAAf,SACE,sBACEC,MAAO,CACL+E,WAAY,8CACZH,cAAe,GACfuS,UAAW,IACXC,YAAa,GACbpK,WAAY,GACZlI,aAAc,GACdmI,aAAc,IARlB,UAWE,cAAC,EAAD,CAAmBW,MAAO,qCAC1B,cAAC,EAAD,CACE1C,QAAS,CAAC,QAAS,SACnBG,aAAc,CAAC,aAAc,SAC7B7G,QAAS,SAAC0I,GACR,EAAK1N,MAAM6X,SAASnK,IAEtB9B,oBAAqBtL,KAAKN,MAAMmM,cAElC,cAAC,EAAD,CACEjD,MAAO,YACPsB,eAAe,EACfoD,MAAM,EACN/L,KAC6B,UAA3BvB,KAAKN,MAAMmM,YAA0B8H,EAAiBK,EAExDpJ,OAAQ,CAAC,YAAa,UACtBG,OAAQ,CAAC,UAAW,kBAK1B,qBAAK9K,UAAU,kBAAf,SACE,sBACEC,MAAO,CACL+E,WAAY,8CACZH,cAAe,GACfuS,UAAW,IACXC,YAAa,GACbpK,WAAY,GACZlI,aAAc,GACdmI,aAAc,IARlB,UAWE,cAAC,EAAD,CAAmBW,MAAO,qCAC1B,cAAC,EAAD,CACE1C,QAAS,CAAC,QAAS,SACnBG,aAAc,CAAC,aAAc,SAC7B7G,QAAS,SAAC0I,GACR,EAAK1N,MAAM6X,SAASnK,IAEtB9B,oBAAqBtL,KAAKN,MAAMmM,cAElC,cAAC,EAAD,CACEjD,MAAO,YACPsB,eAAe,EACfoD,MAAM,EACN/L,KAC6B,UAA3BvB,KAAKN,MAAMmM,YAA0B8H,EAAiBK,EAExDpJ,OAAQ,CAAC,YAAa,UACtBG,OAAQ,CAAC,UAAW,kBAK1B,qBAAK9K,UAAU,kBAAf,SACE,sBACEC,MAAO,CACLmX,UAAW,IACXpS,WAAY,8CACZH,cAAe,GACfwS,YAAa,GACbpK,WAAY,GACZlI,aAAc,GACdmI,aAAc,IARlB,UAWE,cAAC,EAAD,CACEW,MAAO,6CAET,gCACE,qBAAK7N,UAAU,QAAf,SACE,qBACEA,UAAU,eACVyE,QAAS,WACP,EAAK2I,SAAS,CACZ+F,SAAU,EAAKzT,MAAMyT,QACrBD,QACE,EAAKxT,MAAMwT,QAAUK,EAAE9N,OAAS,EAC5B,EAAK/F,MAAMwT,QACX,IAER,EAAKxT,MAAMwT,QAAUK,EAAE9N,OAAS,EAC3B,EAAK8R,MAAQC,aAAY,WACxB,OAAO,EAAK9X,MAAMwT,QAAUK,EAAE9N,OAAS,EACnC,EAAK/F,MAAMyT,QACT,EAAK/F,SAAS,CACZ8F,QAAS,EAAKxT,MAAMwT,QAAU,IAEhC,MACDuE,cAAc,EAAKF,QACG,IAAvB,EAAK7X,MAAMyT,QACP,EAAK/F,SAAS,CACZ+F,SAAS,IAEX,QACP,KACHsE,cAAc,EAAKF,QAzB3B,SA4BGxX,KAAKL,MAAMyT,QAAU,OAAS,YAGnC,qBAAKnT,UAAU,aAAf,SACGqV,EAAyB5P,OAAS,EAC/B4P,EAAyBtV,KAAKL,MAAMwT,SAAS3E,KAC7C,UAGR,cAAC,EAAD,CACEjF,OAAO,WACPX,MAAO,WACPsB,eAAe,EACfoD,MAAM,EACN/L,KAAMiS,EAAExT,KAAKL,MAAMwT,SACnBvI,OAAQ,CAAC,SACTG,OAAQ,CAAC,kBAKf,qBAAK9K,UAAU,kBAAf,SACE,sBACEC,MAAO,CACL+E,WAAY,8CACZH,cAAe,GACfuS,UAAW,IACXC,YAAa,GACbpK,WAAY,GACZlI,aAAc,GACdmI,aAAc,IARlB,UAWE,cAAC,EAAD,CAAmBW,MAAO,iCAC1B,cAAC,EAAD,CACElF,MAAO,YACPyB,QAAQ,EACRH,eAAe,EACfoD,MAAM,EACN/L,KAAMkT,EACN7J,OAAQ+J,EACR5J,OAAQ,CACN,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,kBAKR,qBAAK9K,UAAU,kBAAf,SACE,sBACEC,MAAO,CACLmX,UAAW,IACXpS,WAAY,8CACZH,cAAe,GACfwS,YAAa,GACbpK,WAAY,GACZlI,aAAc,GACdmI,aAAc,IARlB,UAWE,cAAC,EAAD,CAAmBW,MAAO,2BAC1B,qBAAK7N,UAAU,MAAMC,MAAO,CAAEE,eAAgB,UAA9C,SACE,qBAAKH,UAAU,WAAf,SACE,cAAC,KAAD,CACE0X,aAAa,EACbC,cAAc,EACdC,SAAU,SAACC,GACT,EAAKpY,MAAMqY,eAAeD,IAE5BrC,OAAQF,EACRyC,YAAY,YACZ5M,QAAS,CACP,CAAElI,MAAO,YAAaqF,MAAO,aAC7B,CAAErF,MAAO,SAAUqF,MAAO,UAC1B,CAAErF,MAAO,SAAUqF,MAAO,UAC1B,CAAErF,MAAO,YAAaqF,MAAO,oBAKrC,cAAC,GAAD,CACEyP,aAAa,EACbC,eAAgB,SAChBnG,UAAW,CAAErI,KAAM,GAAIe,IAAK,GAAIC,MAAO,GAAIC,OAAQ,IACnD4G,KAAMgD,EACNpO,QA3YI,CACZ,CAAE2D,KAAM,SAAUtB,MAAO,QACzB,CAAEsB,KAAM,SAAUtB,MAAO,UA0YjB0I,UAAW,WACX/O,OAAQ,eAKd,qBAAKjC,UAAU,kBAAf,SACE,sBACEC,MAAO,CACLmX,UAAW,IACXpS,WAAY,8CACZH,cAAe,GACfwS,YAAa,GACbpK,WAAY,GACZlI,aAAc,GACdmI,aAAc,IARlB,UAWE,cAAC,EAAD,CAAmBW,MAAO,0BAC1B,cAAC,EAAD,CACElF,MAAO,WACPsB,eAAe,EACfoD,MAAM,EACN/L,KAAM4U,EACNvL,OAAQ,CAAC,SACTG,OAAQ,CAAC,aAEX,cAAC,GAAD,CACEX,QAAO,gCAA2BiM,EAA3B,qBAIb,qBAAKpW,UAAU,kBAAf,SACE,sBACEC,MAAO,CACLmX,UAAW,IACXpS,WAAY,8CACZH,cAAe,GACfwS,YAAa,GACbpK,WAAY,GACZlI,aAAc,GACdmI,aAAc,IARlB,UAWE,cAAC,EAAD,CAAmBW,MAAO,6BAC1B,sBAAK5N,MAAO,CAAEiN,cAAe,IAA7B,UACE,uBAAMjN,MAAO,CAAEoD,MAAO,UAAWF,WAAY,QAA7C,iBACO,IACmB,IAAvBgT,EAAY1Q,OACT0Q,EAAYxQ,QAAO,SAACsS,GAAD,MAAwB,SAAdA,EAAKjQ,QAAiB,GAAG/E,MACtD,KAEN,uBACEhD,MAAO,CACL+P,WAAY,GACZ3M,MAAO,mBACPF,WAAY,QAJhB,mBAOS,IACiB,IAAvBgT,EAAY1Q,OACT0Q,EAAYxQ,QAAO,SAACsS,GAAD,MAAwB,WAAdA,EAAKjQ,QAAmB,GAClD/E,MACH,KAEN,uBACEhD,MAAO,CACL+P,WAAY,GACZ3M,MAAO,UACPF,WAAY,QAJhB,uBAOa,IACa,IAAvBgT,EAAY1Q,OACT0Q,EAAYxQ,QACV,SAACsS,GAAD,MAAwB,qBAAdA,EAAKjQ,QACf,GAAG/E,MACL,QAGR,cAAC,GAAD,CAAgB3B,KAAM6U,IACtB,cAAC,GAAD,CACEhM,QAAO,gCAA2BkM,EAA3B,qBAIb,qBAAKrW,UAAU,kBAAf,SACE,sBACEC,MAAO,CACLmX,UAAW,IACXpS,WAAY,8CACZH,cAAe,GACfwS,YAAa,GACbpK,WAAY,GACZlI,aAAc,GACdmI,aAAc,IARlB,UAWE,cAAC,EAAD,CAAmBW,MAAO,kCAE1B,cAAC,EAAD,CACElF,MAAO,WACPsB,eAAe,EACfoD,MAAM,EACN/L,KAAMuU,EACNlL,OAAQ,CAAC,YACTG,OAAQ,CAAC,aAEX,cAAC,GAAD,CACEX,QAAO,gCAGI,qBAFFyL,EAAUjQ,QACf,SAACsQ,GAAD,MAAyC,KAA5BzP,OAAOC,KAAKwP,GAAS,MAClC,GACEzP,OAAOqB,OACL+N,EAAUjQ,QACR,SAACsQ,GAAD,MAAyC,KAA5BzP,OAAOC,KAAKwP,GAAS,MAClC,IACF,GACFL,EAAUjQ,QACR,SAACsQ,GAAD,MAAyC,KAA5BzP,OAAOC,KAAKwP,GAAS,MAClC,GAXD,4B,GAntBG1V,aCFlB2X,IADkBzX,EAAQ,KACFA,EAAQ,MAChC0X,GAAmB1X,EAAQ,KAC3B2X,GAAgB3X,EAAQ,KACxB4X,GAAQ5X,EAAQ,KAChB6X,GAAQ7X,EAAQ,KAChB8X,GAAa9X,EAAQ,KACrB+X,GAAe/X,EAAQ,KACvBgY,GAAmBhY,EAAQ,KAC3BiY,GAAQjY,EAAQ,KAChBkY,GAAYlY,EAAQ,KACpBmY,GAASnY,EAAQ,KACjBoY,GAAMpY,EAAQ,KACdqY,GAAUrY,EAAQ,KAClBsY,GAAUtY,EAAQ,KAClBuY,GAAkBvY,EAAQ,KAC1BwY,GAAexY,EAAQ,KACvByY,GAAYzY,EAAQ,KACpB0Y,GAAS1Y,EAAQ,KACjB2Y,GAAc3Y,EAAQ,KACtB4Y,GAAgB5Y,EAAQ,KACxB6Y,GAAc7Y,EAAQ,KACtB8Y,GAAU9Y,EAAQ,KAClB+Y,GAAY/Y,EAAQ,KACpBgZ,GAAUhZ,EAAQ,KAClBiZ,GAAWjZ,EAAQ,KACnBkZ,GAASlZ,EAAQ,KACjBmZ,GAAanZ,EAAQ,KACrBoZ,GAASpZ,EAAQ,KACjBqZ,GAAYrZ,EAAQ,KACpBsZ,GAAStZ,EAAQ,KACjBuZ,GAAOvZ,EAAQ,KACfwZ,GAAYxZ,EAAQ,KACpByZ,GAAUzZ,EAAQ,KAClB0Z,GAAc1Z,EAAQ,KACtB2Z,GAAe3Z,EAAQ,KACvB4Z,GAAa5Z,EAAQ,KAIrBI,IAHkBJ,EAAQ,KAGZ,CAAC,UAAW,UAAW,YAIrCK,GAAiB,CACrBC,QAAS,CACPC,QAAS,QAEXC,MAAO,CACLC,KAAM,OACNC,WAAY,YACZH,QAAS,QAEXI,QAAS,CACPJ,QAAS,SAiCb,IA2cesZ,GA3cM,SAAC,GAAyB,IAAvBhZ,EAAsB,EAAtBA,KAAMiZ,EAAgB,EAAhBA,UAAgB,EACA/Y,mBAAS,IADT,mBACrCC,EADqC,KACrBC,EADqB,KAEtCC,EA/BR,WACE,IAAMC,EAA6B,kBAAXxC,OAExB,SAASyC,IACP,MAAO,CACLC,MAAOF,EAAWxC,OAAO2C,gBAAaC,EACtCC,OAAQL,EAAWxC,OAAO8C,iBAAcF,GANrB,MAUaR,mBAASK,GAVtB,mBAUhBM,EAVgB,KAUJC,EAVI,KA0BvB,OAdAC,qBAAU,WACR,IAAKT,EACH,OAAO,EAGT,SAASU,IACPF,EAAcP,KAIhB,OADAzC,OAAOmD,iBAAiB,SAAUD,GAC3B,kBAAMlD,OAAOoD,oBAAoB,SAAUF,MAEjD,IAEIH,EAKMM,GAEPC,EAAaC,cAAWC,OAAO,CAAC,EAAG,KAAKC,MAAMhC,IAE9CiC,EAAe,SAACC,GAAoC,IAA/BC,EAA8B,uDAApB,CAAEC,MAAO,MAC5C,OAAO,WACLvB,EAAkB,6BAAKsB,GAAN,IAAeD,WAI9BG,EAAe,WACnBxB,EAAkB,KAGd8Y,EAAa,SAACxS,GAClB,OAAQA,GACN,IAAK,wBACH,OAAOkQ,GACT,IAAK,mBACH,OAAOC,GACT,IAAK,gBACH,OAAOC,GACT,IAAK,QACH,OAAOC,GACT,IAAK,QACH,OAAOC,GACT,IAAK,aACH,OAAOC,GACT,IAAK,eACH,OAAOC,GACT,IAAK,mBACH,OAAOC,GACT,IAAK,QACH,OAAOC,GACT,IAAK,YACH,OAAOC,GACT,IAAK,SACH,OAAOC,GACT,IAAK,MACH,OAAOC,GACT,IAAK,UACH,OAAOC,GACT,IAAK,UACH,OAAOC,GACT,IAAK,kBACH,OAAOC,GACT,IAAK,eACH,OAAOC,GACT,IAAK,YACH,OAAOC,GACT,IAAK,SACH,OAAOC,GACT,IAAK,cACH,OAAOC,GACT,IAAK,gBACH,OAAOC,GACT,IAAK,cACH,OAAOC,GACT,IAAK,UACH,OAAOC,GACT,IAAK,YACH,OAAOC,GACT,IAAK,UACH,OAAOC,GACT,IAAK,WACH,OAAOC,GACT,IAAK,SACH,OAAOC,GACT,IAAK,aACH,OAAOC,GACT,IAAK,SACH,OAAOC,GACT,IAAK,YACH,OAAOC,GACT,IAAK,SACH,OAAOC,GACT,IAAK,OACH,OAAOC,GACT,IAAK,YACH,OAAOC,GACT,IAAK,UACH,OAAOC,GACT,IAAK,cACH,OAAOC,GACT,IAAK,eACH,OAAOC,GACT,IAAK,aACH,OAAOC,GACT,QACE,OAAOvB,KAiRb,OACE,sBAAK9Y,UAAU,WAAf,UACsB,KAAnByB,EACC,cAAC,IAAD,UACE,gCACE,sBACExB,MAAO,CACLkD,WAAY,OACZC,SAAU,GACVC,MAAO,oBAJX,SAOG5B,EAAesB,IAAI0X,WAAWC,WAEjC,uBACA,uBACEza,MAAO,CACLkD,WAAY,OACZC,SAAU,GACVC,MAAO,oBAJX,UAOuC,qBAA7B5B,EAAe6B,UACnB,cACA,eAEiC,qBAA7B7B,EAAe6B,UACnB7B,EAAe6B,UACf,KACiC,qBAA7B7B,EAAe6B,WACsB,IAA3CsC,OAAOnE,EAAekZ,MAAMrX,WAC1B,uBAAMrD,MAAO,CAAEmD,SAAU,GAAID,WAAY,QAAzC,oBACW1B,EAAekZ,MAAMrX,aAGhC,aAIR,KACJ,cAAC,gBAAD,CACEO,iBAAkB,CAChBlD,MAvTS,SAACqH,GAChB,OAAQA,GACN,IAAK,wBACH,OAAO,IACT,IAAK,mBACH,OAAO,KACT,IAAK,gBACH,OAAO,KACT,IAAK,QACH,OAAO,KACT,IAAK,QACH,OAAO,KACT,IAAK,aACH,OAAO,IACT,IAAK,eACH,OAAO,KACT,IAAK,mBACH,OAAO,IACT,IAAK,QACH,OAAO,KACT,IAAK,YACH,OAAO,KACT,IAAK,SACH,OAAO,KACT,IAAK,MACH,OAAO,KACT,IAAK,UACH,OAAO,KACT,IAAK,UACH,OAAO,KACT,IAAK,kBACH,OAAO,KACT,IAAK,eACH,OAAO,KACT,IAAK,YACH,OAAO,KACT,IAAK,SACH,OAAO,KACT,IAAK,cACH,OAAO,IACT,IAAK,gBACH,OAAO,KACT,IAAK,cACH,OAAO,KACT,IAAK,UACH,OAAO,IACT,IAAK,YACH,OAAO,KACT,IAAK,UACH,OAAO,KACT,IAAK,WACH,OAAO,KACT,IAAK,SACH,OAAO,KACT,IAAK,aACH,OAAO,IACT,IAAK,SACH,OAAO,KACT,IAAK,YACH,OAAO,KACT,IAAK,SACH,OAAO,IACT,IAAK,OACH,OAAO,IACT,IAAK,YACH,OAAO,KACT,IAAK,UACH,OAAO,IACT,IAAK,cACH,OAAO,KACT,IAAK,eACH,OAAO,KACT,IAAK,aACH,OAAO,IACT,QACE,OAAO,MA4OE4S,CAASL,GAChB3Z,OAzOU,SAACoH,GACjB,OAAQA,GACN,IAAK,wBACH,MAAO,CACLwS,EAAWD,GAAX,oBAAgD,GAAK,EACrDC,EAAWD,GAAX,oBAAgD,GAAK,GAEzD,IAAK,mBACH,MAAO,CACLC,EAAWD,GAAX,oBAAgD,GAAK,EACrDC,EAAWD,GAAX,oBAAgD,GAAK,KAEzD,IAAK,gBACH,MAAO,CACLC,EAAWD,GAAX,oBAAgD,GAAK,EACrDC,EAAWD,GAAX,oBAAgD,GAAK,GAEzD,IAAK,QACH,MAAO,CACLC,EAAWD,GAAX,oBAAgD,GAAK,EACrDC,EAAWD,GAAX,oBAAgD,GAAK,GAEzD,IAAK,QACH,MAAO,CACLC,EAAWD,GAAX,oBAAgD,GAAK,IACrDC,EAAWD,GAAX,oBAAgD,GAAK,KAEzD,IAAK,aACH,MAAO,CACLC,EAAWD,GAAX,oBAAgD,GAAK,EACrDC,EAAWD,GAAX,oBAAgD,GAAK,GAEzD,IAAK,eACH,MAAO,CACLC,EAAWD,GAAX,oBAAgD,GAAK,EACrDC,EAAWD,GAAX,oBAAgD,GAAK,KAEzD,IAAK,mBACH,MAAO,CACLC,EAAWD,GAAX,oBAAgD,GAAK,GACrDC,EAAWD,GAAX,oBAAgD,GAAK,IAEzD,IAAK,QACH,MAAO,CACLC,EAAWD,GAAX,oBAAgD,GAAK,GACrDC,EAAWD,GAAX,oBAAgD,GAAK,KAEzD,IAAK,YACH,MAAO,CACLC,EAAWD,GAAX,oBAAgD,GAAK,EACrDC,EAAWD,GAAX,oBAAgD,GAAK,KAEzD,IAAK,SACH,MAAO,CACLC,EAAWD,GAAX,oBAAgD,GAAK,EACrDC,EAAWD,GAAX,oBAAgD,GAAK,GAEzD,IAAK,MACH,MAAO,CACLC,EAAWD,GAAX,oBAAgD,GAAK,GACrDC,EAAWD,GAAX,oBAAgD,GAAK,IAEzD,IAAK,UACH,MAAO,CACLC,EAAWD,GAAX,oBAAgD,GAAK,EACrDC,EAAWD,GAAX,oBAAgD,GAAK,KAEzD,IAAK,UACH,MAAO,CACLC,EAAWD,GAAX,oBAAgD,GAAK,IACrDC,EAAWD,GAAX,oBAAgD,GAAK,KAEzD,IAAK,kBACH,MAAO,CACLC,EAAWD,GAAX,oBAAgD,GAAK,IACrDC,EAAWD,GAAX,oBAAgD,GAAK,KAEzD,IAAK,eACH,MAAO,CACLC,EAAWD,GAAX,oBAAgD,GAAK,IACrDC,EAAWD,GAAX,oBAAgD,GAAK,KAEzD,IAAK,YACH,MAAO,CACLC,EAAWD,GAAX,oBAAgD,GAAK,IACrDC,EAAWD,GAAX,oBAAgD,GAAK,KAEzD,IAAK,SACH,MAAO,CACLC,EAAWD,GAAX,oBAAgD,GAAK,EACrDC,EAAWD,GAAX,oBAAgD,GAAK,GAEzD,IAAK,cACH,MAAO,CACLC,EAAWD,GAAX,oBAAgD,GAAK,EACrDC,EAAWD,GAAX,oBAAgD,GAAK,GAEzD,IAAK,gBACH,MAAO,CACLC,EAAWD,GAAX,oBAAgD,GAAK,EACrDC,EAAWD,GAAX,oBAAgD,GAAK,GAEzD,IAAK,cACH,MAAO,CACLC,EAAWD,GAAX,oBAAgD,GAAK,IACrDC,EAAWD,GAAX,oBAAgD,GAAK,KAEzD,IAAK,UACH,MAAO,CACLC,EAAWD,GAAX,oBAAgD,GAAK,EACrDC,EAAWD,GAAX,oBAAgD,GAAK,GAEzD,IAAK,YACH,MAAO,CACLC,EAAWD,GAAX,oBAAgD,GAAK,IACrDC,EAAWD,GAAX,oBAAgD,GAAK,IAEzD,IAAK,UACH,MAAO,CACLC,EAAWD,GAAX,oBAAgD,GAAK,EACrDC,EAAWD,GAAX,oBAAgD,GAAK,KAEzD,IAAK,WACH,MAAO,CACLC,EAAWD,GAAX,oBAAgD,GAAK,EACrDC,EAAWD,GAAX,oBAAgD,GAAK,IAEzD,IAAK,SACH,MAAO,CACLC,EAAWD,GAAX,oBAAgD,GAAK,EACrDC,EAAWD,GAAX,oBAAgD,GAAK,KAEzD,IAAK,aACH,MAAO,CACLC,EAAWD,GAAX,oBAAgD,GAAK,EACrDC,EAAWD,GAAX,oBAAgD,GAAK,GAEzD,IAAK,SACH,MAAO,CACLC,EAAWD,GAAX,oBAAgD,GAAK,IACrDC,EAAWD,GAAX,oBAAgD,GAAK,KAEzD,IAAK,YACH,MAAO,CACLC,EAAWD,GAAX,oBAAgD,GAAK,EACrDC,EAAWD,GAAX,oBAAgD,GAAK,KAEzD,IAAK,SACH,MAAO,CACLC,EAAWD,GAAX,oBAAgD,GAAK,GACrDC,EAAWD,GAAX,oBAAgD,GAAK,IAEzD,IAAK,OACH,MAAO,CACLC,EAAWD,GAAX,oBAAgD,GAAK,EACrDC,EAAWD,GAAX,oBAAgD,GAAK,IAEzD,IAAK,YACH,MAAO,CACLC,EAAWD,GAAX,oBAAgD,GAAK,IACrDC,EAAWD,GAAX,oBAAgD,GAAK,GAEzD,IAAK,UACH,MAAO,CACLC,EAAWD,GAAX,oBAAgD,GAAK,GACrDC,EAAWD,GAAX,oBAAgD,GAAK,IAEzD,IAAK,cACH,MAAO,CACLC,EAAWD,GAAX,oBAAgD,GAAK,IACrDC,EAAWD,GAAX,oBAAgD,GAAK,KAEzD,IAAK,eACH,MAAO,CACLC,EAAWD,GAAX,oBAAgD,GAAK,EACrDC,EAAWD,GAAX,oBAAgD,GAAK,KAEzD,IAAK,aACH,MAAO,CACLC,EAAWD,GAAX,oBAAgD,GAAK,EACrDC,EAAWD,GAAX,oBAAgD,GAAK,GAEzD,QACE,MAAO,CACLC,EAAWD,GAAX,oBAAgD,GAAK,EACrDC,EAAWD,GAAX,oBAAgD,GAAK,MAgD7CM,CAAUN,IAEpBzW,WAAW,cACX7B,OACEN,EAAKG,MAAQ,MAAQH,EAAKG,MAAQ,IAC9B,IACAH,EAAKG,OAAS,KAAOH,EAAKG,MAAQ,IAClC,IACAH,EAAKG,OAAS,IACd,IACAiC,KAAKC,MAAMrC,EAAKG,MAAQ,IAE9BA,MACEH,EAAKG,MAAQ,MAAQH,EAAKG,MAAQ,IAC9B,IACAH,EAAKG,OAAS,KAAOH,EAAKG,MAAQ,IAClC,IACAH,EAAKG,OAAS,IACd,IACAiC,KAAKC,MAAMrC,EAAKG,MAAQ,GAE9BmC,WAAS,GAxBX,SA0BE,cAAC,cAAD,CAAaC,UAAWsW,EAAWD,GAAnC,SACG,qBAAGpW,YACUC,KAAI,SAACrB,GACf,IAAMC,EAAUwD,OAAOC,KAAKnF,GAAM+C,MAChC,SAACC,GAAD,OAAOA,IAAMvB,EAAI0X,WAAWC,YAG9B,OACE,cAAC,YAAD,CAEExW,UAAWnB,EACX7B,KACEI,EAAK0B,GACDN,EAAWpB,EAAK0B,GAASM,WAxe3B,OA2eJrD,MAAOa,GACPgC,aAAcA,EAAaC,EAAKzB,EAAK0B,IACrCE,aAAcA,GATTH,EAAI2B,oBCngBrBoW,G,kDACJ,WAAYrb,GAAQ,IAAD,8BACjB,cAAMA,IA8HRsb,WAAa,SAACC,EAAOrZ,GAGnB,IAFA,IAAIsZ,EAAS,GACTC,EAAS,YAAOF,GACbE,EAAUzV,OAAS,GACxBwV,EAAOxN,KAAKyN,EAAUC,OAAO,EAAGxZ,IAElC,OAAOsZ,GArIU,EAwInBlN,iBAAmB,WACjB,EAAKX,SAAS,CAAEtL,MAAO1C,OAAO2C,WAAYE,OAAQ7C,OAAO8C,eAzIxC,EAgJnBkZ,gBAAkB,SAACpT,GACjB,OAAQA,GACN,IAAK,8BACH,MAAO,wBACT,IAAK,oBACH,MAAO,mBACT,IAAK,iBACH,MAAO,gBACT,IAAK,QACH,MAAO,QACT,IAAK,QACH,MAAO,QACT,IAAK,aACH,MAAO,aACT,IAAK,eACH,MAAO,eACT,IAAK,yBACH,MAAO,mBACT,IAAK,QACH,MAAO,QACT,IAAK,YACH,MAAO,YACT,IAAK,SACH,MAAO,SACT,IAAK,MACH,MAAO,MACT,IAAK,UACH,MAAO,UACT,IAAK,UACH,MAAO,UACT,IAAK,mBACH,MAAO,kBACT,IAAK,oBACH,MAAO,eACT,IAAK,YACH,MAAO,YACT,IAAK,SACH,MAAO,SACT,IAAK,cACH,MAAO,cACT,IAAK,iBACH,MAAO,gBACT,IAAK,cACH,MAAO,cACT,IAAK,UACH,MAAO,UACT,IAAK,YACH,MAAO,YACT,IAAK,UACH,MAAO,UACT,IAAK,WACH,MAAO,WACT,IAAK,SACH,MAAO,SACT,IAAK,aACH,MAAO,aACT,IAAK,SACH,MAAO,SACT,IAAK,YACH,MAAO,YACT,IAAK,SACH,MAAO,SACT,IAAK,aACH,MAAO,OACT,IAAK,YACH,MAAO,YACT,IAAK,UACH,MAAO,UACT,IAAK,cACH,MAAO,cACT,IAAK,gBACH,MAAO,eACT,IAAK,cACH,MAAO,aACT,QACE,MAAO,YAzNX,EAAKtI,MAAQ,CACXoN,aAAc,GACduO,YAAa,EACb5K,GAAI,IACJ3O,MAAO,EACPG,OAAQ,EACRqZ,aAAc,GACd5L,eAAe,EACfO,YAAY,EACZqE,cAAe,YACf1I,YAAa,aACbnK,eAAgB,GAChB8Z,cAAe,MACfrL,YAAY,EACZsL,WAAY,EACZC,WAAY,EACZC,iBAAiB,EACjBlP,gBAAgB,EAChBlL,KAAM,GACNiF,cAAe,GACfuP,QAAS,GACT7J,YAAa,GACbzG,MAAO,GACPmW,UAAW,GACXhR,OAAQ,CAAC,UAAW,WAAY,QAAS,QAAS,OAClDiR,QAAS,EACTC,SAAU,CACR,CACEvT,MAAO,WACPmJ,gBAAiB,qBACjBqK,YAAa,gBACbC,YAAa,EACbza,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,IACvB0L,MAAO,CAAC,GAAI,GAAI,GAAI,GAAI,IACxBgP,MAAO,CAAC,GAAI,GAAI,GAAI,GAAI,IACxBC,MAAO,CAAC,GAAI,GAAI,GAAI,GAAI,OArCb,E,gEA2CE,IAAD,OAClB7c,OAAOmD,iBAAiB,SAAUxC,KAAKgO,kBAEvC3O,OAAOmD,iBAAiB,SAAS,WAC/B,EAAK2Z,UACL,EAAKC,kBAGPpc,KAAKqN,SAAS,CACZZ,gBAAgB,IAElBzM,KAAKqc,aACLrc,KAAKsc,iBACLtc,KAAKmc,UACLnc,KAAKoc,iB,qCAGS,IAAD,OACbG,MAAM,wDAAyD,CAC7DC,OAAQ,QAEPC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACL,EAAKvP,SAAS,CACZ7G,cAAeoW,OAGlBC,OAAM,SAAChd,S,mCAGE,IAAD,OACX0c,MAAM,6CAA8C,CAClDC,OAAQ,QAEPC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACL,EAAKvP,SAAS,CACZ0I,QAAS6G,EAASE,SAClBrQ,gBAAgB,OAGnBoQ,OAAM,SAAChd,GACN,EAAKwN,SAAS,CACZZ,gBAAgB,S,uCAKN,IAAD,OACf8P,MAAM,iDAAkD,CACtDC,OAAQ,QAEPC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACL,EAAKvP,SAAS,CACZnB,YAAa0Q,EAASG,aACtBtQ,gBAAgB,OAGnBoQ,OAAM,SAAChd,GACN,EAAKwN,SAAS,CACZZ,gBAAgB,S,gCAKb,IAAD,OACR8P,MAAM,yCAA0C,CAC9CC,OAAQ,QAEPC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACL,EAAKvP,SAAS,CACZ5H,MAAOmX,EACPnQ,gBAAgB,OAGnBoQ,OAAM,SAAChd,GACN,EAAKwN,SAAS,CACZZ,gBAAgB,S,6CAmBtBpN,OAAOoD,oBAAoB,SAAUzC,KAAKgO,oB,+BAkFlC,IAAD,OACP,OACE,cAAC,EAAD,UACE,qBAAK/N,UAAU,YAAf,SACE,sBAAKA,UAAU,YAAf,UACE,8BACE,cAAC,EAAD,CACEsN,UAAW,QACXE,QAASzN,KAAKN,MAAM+N,QACpB1L,MAAO/B,KAAKL,MAAMoC,UAGtB,sBAAK7B,MAAO,CAAEmX,UAAW,QAAzB,UACE,cAAC,GAAD,CAAa5R,MAAOzF,KAAKL,MAAM8F,QAC/B,cAAC,GAAD,CACEoE,KAAK,QACL6G,GAAI1Q,KAAKL,MAAM+Q,GACftF,QAAS,CAAC,YAAa,OAAQ,QAAS,OACxCuF,aAAc,CAAC,IAAK,QAAS,SAAU,QACvCjM,QAAS,SAACsY,GACR,EAAK3P,SAAS,CACZqD,GAAIsM,OAIS,MAAlBhd,KAAKL,MAAM+Q,GACV,cAAC,GAAD,CACElK,cAAexG,KAAKL,MAAM6G,cAC1B0F,YAAalM,KAAKL,MAAMuM,YACxB6J,QAAS/V,KAAKL,MAAMoW,QACpBxB,cAAevU,KAAKL,MAAM4U,cAC1BiH,cAAexb,KAAKL,MAAM6b,cAC1B/V,MAAOzF,KAAKL,MAAM8F,MAClBsS,eAAgB,SAACD,GACf,EAAKzK,SAAS,CACZkH,cACqB,OAAnBuD,EACI,YACAA,EAAe5U,SAGzBqU,SAAU,SAACnK,GAAD,OACR,EAAKC,SAAS,CACZxB,YAAauB,KAGjBvB,YAAa7L,KAAKL,MAAMkM,cAExB,KACe,SAAlB7L,KAAKL,MAAM+Q,GACV,iCAC4B,IAAzB1Q,KAAKL,MAAMsd,UACV,gCACE,sBACE/c,MAAO,CACL+E,WACE,8CACFH,cAAe,GACfoI,WAAY,GACZlI,aAAc,GACdmI,aAAc,IAPlB,UAUE,cAAC,EAAD,CACEjN,MAAO,CAAEsI,UAAW,UACpBsF,MAAO9N,KAAKL,MAAMud,oBAEpB,sBACEhd,MAAO,CACLC,QAAS,OACTC,eAAgB,gBAHpB,UAME,sBACEF,MAAO,CACLkD,WAAY,OACZC,SAAU,GACVC,MAAO,oBAJX,UAOE,6CACA,uBACA,+BAAOtD,KAAKL,MAAMwd,eAAe5Z,YACjC,uBAGA,MADCvD,KAAKL,MAAMwd,eAAe3Z,eAEzB,uBACEtD,MAAO,CAAEmD,SAAU,GAAID,WAAY,QADrC,mBAGU,IACPpD,KAAKL,MAAMwd,eAAe3Z,kBAE3B,QAGN,sBACEtD,MAAO,CACLkD,WAAY,OACZC,SAAU,GACVC,MAAO,mBAJX,UAOE,0CACA,uBACA,+BAAOtD,KAAKL,MAAMwd,eAAe1Z,YAEnC,sBACEvD,MAAO,CACLkD,WAAY,OACZC,SAAU,GACVC,MAAO,mBAJX,UAOE,6CACA,uBACA,+BAAOtD,KAAKL,MAAMwd,eAAezZ,YACjC,uBAEA,MADC1D,KAAKL,MAAMwd,eAAe3Z,eAEzB,uBACEtD,MAAO,CAAEmD,SAAU,GAAID,WAAY,QADrC,mBAGU,IACPpD,KAAKL,MAAMwd,eAAexZ,kBAE3B,QAEN,sBACEzD,MAAO,CACLkD,WAAY,OACZC,SAAU,GACVC,MAAO,oBAJX,UAOE,0CACA,uBACA,+BAAOtD,KAAKL,MAAMwd,eAAevZ,SACjC,uBAEA,MADC5D,KAAKL,MAAMwd,eAAe3Z,eAEzB,uBACEtD,MAAO,CAAEmD,SAAU,GAAID,WAAY,QADrC,oBAGWpD,KAAKL,MAAMwd,eAAetZ,eAEnC,cAIV,qBAAK5D,UAAU,gCAAf,SACE,qBACEC,MAAO,CACL+E,WAAY,UACZC,OAAQ,UACR9B,WAAY,OACZyB,QAAS,WACTG,aAAc,GAEhBN,QAAS,kBACP,EAAK2I,SAAS,CACZ4P,WAAW,KAVjB,uBAkBF,KACJ,qBACEhd,UAAU,gBACVC,MAAO,CACL6E,OAAQ,+BACRO,YAAa,EACb2B,UAAW,GACXgJ,WAAY,EACZjL,aAAc,IAPlB,SAUE,qBACE/E,UAAU,YACVC,MAAO,CAAE+G,UAAW,GAAIkG,aAAc,IAFxC,UAI4B,IAAzBnN,KAAKL,MAAMsd,UACV,8BACE,cAAC,GAAD,CACEzC,UAAWxa,KAAKL,MAAM6a,UACtBjZ,KACsC,IAApCvB,KAAKL,MAAM6G,cAAcd,QAGf,qBAFC1F,KAAKL,MAAM6G,cAChBxG,KAAKL,MAAMud,mBAEXld,KAAKL,MAAM6G,cACTxG,KAAKL,MAAMud,mBADb,aAIF,OAKV,cAAC,EAAD,CACE1b,aAAc,SAAC7B,GACb,EAAK0N,SAAS,CACZ4P,WAAW,EACXzC,UAAW,EAAKa,gBAAgB1b,EAAMA,OACtCud,kBAAmBvd,EAAMA,MACzBwd,eAAgBxd,KAGpB4B,KAC8B,IAA5BvB,KAAKL,MAAM8F,MAAMC,OACb1F,KAAKL,MAAM8F,MAAME,UAAUC,QACzB,SAACjG,GAAD,MAA2B,UAAhBA,EAAMA,SAEnB,YAOd,KACe,UAAlBK,KAAKL,MAAM+Q,GACV,qCACE,qBAAKxQ,MAAO,CAAEgN,WAAY,GAA1B,SACE,uBACErD,KAAK,OACLmO,YAAY,SACZH,SAAU,SAACpQ,GAAD,OACR,EAAK4F,SAAS,CACZN,aAActF,EAAErC,OAAOlC,aAK/B,cAAC,EAAD,CACEgJ,YAAalM,KAAKL,MAAMuM,YACxBO,eAAgBzM,KAAKL,MAAM8M,eAC3BhH,MAAOzF,KAAKL,MAAM8F,MAClBsH,aAAc/M,KAAKL,MAAMoN,kBAG3B,KAAM,IACS,WAAlB/M,KAAKL,MAAM+Q,GACV,cAAC,EAAD,CACEjL,MAAOzF,KAAKL,MAAM8F,MAClBe,cAAexG,KAAKL,MAAM6G,gBAE1B,QAEN,cAAC,EAAD,e,GA5dQhG,aAoeL4c,eAAWrC,I,qECjWXvV,I,yDA/Ib,WAAY9F,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,GAFI,E,qDAMjB,IAAM4B,EAC6B,IAAjCvB,KAAKN,MAAM2d,WAAW3X,OAClB1F,KAAKN,MAAM2d,WACRzX,QAAO,SAACsQ,GAAD,MAA+B,UAAlBA,EAAQpI,SAC5BzJ,KAAI,SAAC6R,GACJ,MAAO,CACLA,QAASA,EAAQpI,MACjBvK,UAAWsC,OAAOqQ,EAAQ3S,WAC1BE,OAAQoC,OAAOqQ,EAAQzS,QACvBC,UAAWmC,OAAOqQ,EAAQxS,WAC1BE,OAAQiC,OAAOqQ,EAAQtS,QACvBkC,eAAgBD,OAAOqQ,EAAQoH,iBAC/BrX,YAAaJ,OAAOqQ,EAAQqH,cAC5BC,MAAO3X,OAAOqQ,EAAQuH,gBAG5B,GAEAvX,EAC6B,IAAjClG,KAAKN,MAAM2d,WAAW3X,OAClB,CACE,CACES,OAAQ,UACRC,SAAU,WAEZ,CACED,OAAQ,YACRC,SAAU,YACVC,KAAM,SAAC3G,GACL,OACE,qCACqC,IAAlCA,EAAM4G,SAASR,eAAuB,KACrC,uBACE5F,MAAO,CACLmD,SAAU,GACVD,WAAY,OACZE,MAAO,WAJX,UAOE,sBAAMpD,MAAO,CAAEmD,SAAU,GAAID,WAAY,QAAzC,oBAGC1D,EAAM4G,SAASR,kBAEjB,IACH,sBAAM7F,UAAU,SAAhB,SAA0BP,EAAMwD,aAKxC,CACEiD,OAAQ,SACRC,SAAU,SACVC,KAAM,SAAC3G,GACL,OACE,mCACE,sBAAMO,UAAU,SAAhB,SAA0BP,EAAMwD,YAKxC,CACEiD,OAAQ,YACRC,SAAU,YACVC,KAAM,SAAC3G,GACL,OACE,mCACE,sBAAMO,UAAU,SAAhB,SAA0BP,EAAMwD,YAKxC,CACEiD,OAAQ,SACRC,SAAU,SACVC,KAAM,SAAC3G,GACL,OACE,qCACkC,IAA/BA,EAAM4G,SAASL,YAAoB,KAClC,uBACE/F,MAAO,CACLmD,SAAU,GACVD,WAAY,OACZE,MAAO,WAJX,UAOE,sBAAMpD,MAAO,CAAEmD,SAAU,GAAID,WAAY,QAAzC,oBAGC1D,EAAM4G,SAASL,eAEjB,IACH,sBAAMhG,UAAU,SAAhB,SAA0BP,EAAMwD,aAKxC,CACEiD,OAAQ,QACRC,SAAU,QACVC,KAAM,SAAC3G,GACL,OACE,mCACE,sBAAMO,UAAU,SAAhB,SAA0BP,EAAMwD,aAM1C,GACN,OACE,qBAAKjD,UAAU,mBAAf,SACE,qBAAKA,UAAU,YAAf,SACE,qBAAKA,UAAU,oBAAf,SACE,cAAC,IAAD,CACEC,MAAO,CAAEmX,UAAW,KACpB9V,KAAMA,EACN2E,QAASA,EACTgB,gBAAiB,GACjBjH,UAAU,sBACVkH,WAAY,8CACZC,cAAe,SAACzH,EAAO0H,EAASC,GAC9B,MAAO,CACLpH,MAAO,CACLkD,WAAY,UAIlBuE,YAAU,c,GAvIJnH,cCkHLkd,I,yDAhHb,WAAYhe,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,GAFI,E,qDAKT,IAAD,OACDoL,EAAS,CACbe,UAAW,UACXgI,OAAQ,UACR/H,UAAW,UACXC,OAAQ,WAGV,OACE,qBAAK/L,UAAU,kBAAf,SACGD,KAAKN,MAAM6B,KAAK8C,KAAI,SAACsZ,EAAMjV,GAC1B,IAAIkV,EAAY,EAAKle,MAAMke,UAAUhY,QACnC,SAACrE,GAAD,OAAUkF,OAAOC,KAAKnF,GAAM,KAAOkF,OAAOC,KAAKiX,GAAM,MAEnDE,EAAc,EAAKne,MAAMme,YAAYjY,QACvC,SAACrE,GAAD,OAAUkF,OAAOC,KAAKnF,GAAM,KAAOkF,OAAOC,KAAKiX,GAAM,MAEnDG,EAAc,EAAKpe,MAAMoe,YAAYlY,QACvC,SAACrE,GAAD,OAAUkF,OAAOC,KAAKnF,GAAM,KAAOkF,OAAOC,KAAKiX,GAAM,MAEvD,OACE,qBAEEzd,MAAO,CAAEiN,aAAc,GAAIlG,UAAW,IACtChH,UAAW,EAAKP,MAAMO,UAHxB,SAKE,sBACEA,UAAU,OACVC,MAAO,CACL+E,WAAY8F,EAAOtE,OAAOC,KAAKiX,GAAM,KAHzC,UAME,qBACE1d,UAAU,cACVC,MAA4B,IAArB0d,EAAUlY,OAAe,GAAK,CAAEyH,aAAc,IAFvD,SAIG1G,OAAOqB,OAAO6V,GAAM,KAED,IAArBC,EAAUlY,OACT,sBAAKzF,UAAU,eAAf,UACE,sBAAMA,UAAU,aAAhB,oBAA4C,IAC3C2d,EAAU,GAAGnX,OAAOC,KAAKiX,GAAM,IAC/BE,EAAY,GAAGpX,OAAOC,KAAKiX,GAAM,IAChC,cAAC,IAAD,CACEtO,KACE,qBACEnP,MAAO,CACLoP,UAAW,IACXC,UAAW,SACXC,YAAa,GACbvK,WAAY,QACZD,aAAc,GACdH,QAAS,GACTvB,MAAO,UACPF,WAAY,QAThB,SAYG0a,EAAY,GAAGrX,OAAOC,KAAKiX,GAAM,MAGtClO,YAAa,QACbC,OAAQ,EAAK/P,MAAM8G,OAAOC,KAAKiX,GAAM,IACrC/N,cAAe,kBACb,EAAKvC,SAAL,eACG5G,OAAOC,KAAKiX,GAAM,IAAM,EAAKhe,MAC5B8G,OAAOC,KAAKiX,GAAM,OAtB1B,SA2BE,qBACEjZ,QAAS,WACPmL,KAAQC,MAAM,CACZC,SAAU,EAAKrQ,MAAMmK,KAAO,QAC5BmG,OACE,EAAKtQ,MAAMmK,KACXpD,OAAOC,KAAKiX,GAAM,GAClB,gBACFpV,MACE,EAAK7I,MAAMmK,KACXpD,OAAOC,KAAKiX,GAAM,GAClB,UAEJ,EAAKtQ,SAAL,eACG5G,OAAOC,KAAKiX,GAAM,IAAM,EAAKhe,MAC5B8G,OAAOC,KAAKiX,GAAM,OAIxB1d,UAAU,yBAnBZ,iBAwBA,QAEJ,KACJ,qBAAKC,MAAO,CAAEmD,SAAU,IAAxB,SAA+BoD,OAAOC,KAAKiX,GAAM,SA3E9CjV,Y,GA5BOlI,cCuHXud,G,kDAxHb,WAAYre,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,GAFI,E,qDAMjB,OACE,cAAC,GAAD,CACEkK,KAAK,SACL5J,UAAU,iBACVsB,KAAM,CACJ,CACEuK,UACmC,IAAjC9L,KAAKN,MAAM2d,WAAW3X,OAClB1F,KAAKN,MAAM2d,WAAWzX,QACpB,SAACjG,GAAD,MAA2B,UAAhBA,EAAMmO,SACjB,GAAGvK,UACL,GAER,CACEuQ,OACmC,IAAjC9T,KAAKN,MAAM2d,WAAW3X,OAClB1F,KAAKN,MAAM2d,WAAWzX,QACpB,SAACjG,GAAD,MAA2B,UAAhBA,EAAMmO,SACjB,GAAGrK,OACL,GAER,CACEsI,UACmC,IAAjC/L,KAAKN,MAAM2d,WAAW3X,OAClB1F,KAAKN,MAAM2d,WAAWzX,QACpB,SAACjG,GAAD,MAA2B,UAAhBA,EAAMmO,SACjB,GAAGpK,UACL,GAER,CACEsI,OACmC,IAAjChM,KAAKN,MAAM2d,WAAW3X,OAClB1F,KAAKN,MAAM2d,WAAWzX,QACpB,SAACjG,GAAD,MAA2B,UAAhBA,EAAMmO,SACjB,GAAGlK,OACL,IAGVia,YAAa,CACX,CACE/R,UACmC,IAAjC9L,KAAKN,MAAM2d,WAAW3X,QAKhB,IAJNG,OACE7F,KAAKN,MAAM2d,WAAWzX,QACpB,SAACjG,GAAD,MAA2B,UAAhBA,EAAMmO,SACjB,GAAGwP,kBAKX,CACEtR,OACmC,IAAjChM,KAAKN,MAAM2d,WAAW3X,QAKhB,IAJNG,OACE7F,KAAKN,MAAM2d,WAAWzX,QACpB,SAACjG,GAAD,MAA2B,UAAhBA,EAAMmO,SACjB,GAAGyP,gBAMbK,UAAW,CACT,CACE9R,UACmC,IAAjC9L,KAAKN,MAAM2d,WAAW3X,OAClB1F,KAAKN,MAAM2d,WAAWzX,QACpB,SAACjG,GAAD,MAA2B,UAAhBA,EAAMmO,SACjB,GAAGwP,gBACL,GAER,CACEtR,OACmC,IAAjChM,KAAKN,MAAM2d,WAAW3X,OAClB1F,KAAKN,MAAM2d,WAAWzX,QACpB,SAACjG,GAAD,MAA2B,UAAhBA,EAAMmO,SACjB,GAAGyP,aACL,IAGVO,YAAa,CACX,CACEhS,UAAW9L,KAAKN,MAAM2d,WACnBzX,QACC,SAACjG,GAAD,MACkB,UAAhBA,EAAMmO,OAA+C,KAA1BnO,EAAM2d,mBAEpCjZ,KAAI,SAAC1E,EAAO+I,GACX,OACE,gCACG/I,EAAMmO,MADT,KACkBnO,EAAM2d,kBADd5U,OAMlB,CACEsD,OAAQhM,KAAKN,MAAM2d,WAChBzX,QACC,SAACjG,GAAD,MAA2B,UAAhBA,EAAMmO,OAA4C,KAAvBnO,EAAM4d,gBAE7ClZ,KAAI,SAAC1E,EAAO+I,GACX,OACE,gCACG/I,EAAMmO,MADT,KACkBnO,EAAM4d,eADd7U,c,GA7GHlI,aCsUV6P,G,kDA/Tb,WAAY3Q,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,GAFI,E,qDAKT,IAAD,OACD4V,EAAe,CACnBC,QAAS,SAACC,GAAD,oBAAC,gBACLA,GADI,IAEP/D,gBAAiB,QACjBpM,YAAa,GACb6H,aAAc,MAEhB9B,OAAQ,SAACoK,EAAD,GAAyD,EAA9ClU,KAA+C,IAAzCmU,EAAwC,EAAxCA,WAAYC,EAA4B,EAA5BA,UAAWC,EAAiB,EAAjBA,WAC9C,OAAO,6BACFH,GADL,IAEE/D,gBAAiBgE,EACb,KACAE,EACA,UACAD,EACA,QACA,KACJrS,MAAOoS,EAAa,OAASE,EAAa,QAAU,UACpD1Q,OAAQwQ,EAAa,cAAgB,UAErC,UAAU,6BACLD,EAAO,YADZ,IAEE/D,iBAAkBgE,IAAeE,EAAa,UAAY,eAM9D5B,EACoC,IAAtChU,KAAKN,MAAMse,gBAAgBtY,OACvB1F,KAAKN,MAAMse,gBAAgB3Z,KAAI,SAACiK,EAAO5F,GACrC,MAAO,CACLT,KAAMqG,EAAM2P,WACZnS,UAAWjG,OAAOyI,EAAM4P,gBACxBpK,OACEjO,OAAOyI,EAAM4P,gBACbrY,OAAOyI,EAAM6P,gBACbtY,OAAOyI,EAAM1K,OAAOwa,OACtBrS,UAAWlG,OAAOyI,EAAM6P,gBACxBnS,OAAQnG,OAAOyI,EAAM1K,OAAOwa,OAC5BnK,eAAgBpO,OAAOyI,EAAMxI,gBAC7BoO,YACY,IAAVxL,EACI7C,OAAOyI,EAAM4P,gBACbrY,OAAOyI,EAAM6P,gBACbtY,OAAOyI,EAAM1K,OAAOwa,OACpBvY,OAAOyI,EAAM4P,gBACbrY,OAAOyI,EAAM6P,gBACbtY,OAAOyI,EAAM1K,OAAOwa,QACnBvY,OACC,EAAKnG,MAAMse,gBAAgBtV,EAAQ,GAAGwV,gBAEtCrY,OACE,EAAKnG,MAAMse,gBAAgBtV,EAAQ,GAAGyV,gBAExCtY,OACE,EAAKnG,MAAMse,gBAAgBtV,EAAQ,GAAG9E,OAAOwa,QAEvDjK,eAAgBtO,OAAOyI,EAAMtI,gBAC7BoO,YACY,IAAV1L,EACI7C,OAAOyI,EAAM1K,OAAOwa,OACpBvY,OAAOyI,EAAM1K,OAAOwa,OACpBvY,OAAO,EAAKnG,MAAMse,gBAAgBtV,EAAQ,GAAG9E,OAAOwa,WAG9D,GAEFC,EAC+B,IAAjCre,KAAKN,MAAM4e,WAAW5Y,OAClBe,OAAOqB,OACL9H,KAAKN,MAAM4e,WAAW1Y,QACpB,SAACiE,GAAD,MAAmC,oBAAzBpD,OAAOC,KAAKmD,GAAM,MAC5B,IACF,GAAGxF,KAAI,SAACiK,EAAO5F,GAAW,IAAD,EACzB,OAAO,EAAP,CACET,KAAMqG,EAAMiQ,KADd,cAEG,WAAajQ,EAAMkQ,UAAUC,QAAQ,WAAY,KAFpD,cAGG,6BAA+BnQ,EAAMoQ,gBAAgBD,QACpD,WACA,KALJ,KASF,KAEFE,EAC+B,IAAjC3e,KAAKN,MAAM4e,WAAW5Y,OAClBe,OAAOqB,OACL9H,KAAKN,MAAM4e,WAAW1Y,QACpB,SAACiE,GAAD,MAAmC,4BAAzBpD,OAAOC,KAAKmD,GAAM,MAC5B,IACF,GAAGxF,KAAI,SAACiK,EAAO5F,GAAW,IAAD,EACzB,OAAO,EAAP,CACET,KAAMqG,EAAMiQ,KADd,cAEG,WAAajQ,EAAMkQ,UAAUC,QAAQ,WAAY,KAFpD,cAGG,6BACmD,IAAlDnQ,EAAMoQ,gBAAgBD,QAAQ,WAAY,IACtC,EACAnQ,EAAMoQ,gBAAgBD,QAAQ,WAAY,KANlD,KASF,KAQFnK,EAC+B,IAAjCtU,KAAKN,MAAM2d,WAAW3X,OAClB1F,KAAKN,MAAM2d,WACRzX,QAAO,SAACsQ,GAAD,MAA+B,UAAlBA,EAAQpI,SAC5BzJ,KAAI,SAAC1E,GACJ,MAAO,CAACA,EAAMmO,MAAOjI,OAAOlG,EAAM,EAAKD,MAAM6U,oBAEjD,GAEFqK,EAC+B,IAAjC5e,KAAKN,MAAM4e,WAAW5Y,OAClBe,OAAOqB,OACL9H,KAAKN,MAAM4e,WAAW1Y,QACpB,SAACiE,GAAD,MAAmC,oBAAzBpD,OAAOC,KAAKmD,GAAM,MAC5B,IACF,GAAGxF,KAAI,SAACiK,EAAO5F,GACf,MAAO,CACLT,KAAMqG,EAAMuQ,IACZ3b,MAAO2C,OAAOyI,EAAMoQ,gBAAgBD,QAAQ,WAAY,SAG5D,GAENnK,EAAeA,EAAaf,MA7BT,SAACC,EAAGC,GACrB,OAAI5N,OAAO2N,EAAE,IAAM3N,OAAO4N,EAAE,KAAa,EACrC5N,OAAO2N,EAAE,IAAM3N,OAAO4N,EAAE,IAAY,EACjC,KA0BoCC,MAAM,EAAG,IAOtD,OACE,sBAAKzT,UAAU,MAAf,UACE,qBAAKA,UAAU,kBAAf,SACE,sBAAKA,UAAU,gBAAf,UACE,cAAC,EAAD,CAAmB6N,MAAO,gCAC1B,cAAC,EAAD,CACE1C,QAAS,CAAC,OAAQ,OAClBG,aAAc,CAAC,YAAa,YAC5B7G,QAAS,SAAC0I,GACR,EAAK1N,MAAMof,YAAY1R,IAEzB9B,oBAAqBtL,KAAKN,MAAM4L,sBAElC,cAAC,EAAD,CACE1C,MAAO5I,KAAKN,MAAM4L,oBAClBpB,eAAe,EACfoD,MAAM,EACN/L,KAAMyS,EACNpJ,OAAQ,CAAC,aACTG,OAAQ,CAAC,kBAIf,qBAAK9K,UAAU,kBAAf,SACE,sBAAKA,UAAU,gBAAf,UACE,cAAC,EAAD,CAAmB6N,MAAO,6BAC1B,cAAC,EAAD,CACE1C,QAAS,CAAC,OAAQ,OAClBG,aAAc,CAAC,YAAa,YAC5B7G,QAAS,SAAC0I,GACR,EAAK1N,MAAMof,YAAY1R,IAEzB9B,oBAAqBtL,KAAKN,MAAM4L,sBAElC,cAAC,EAAD,CACE1C,MAAO5I,KAAKN,MAAM4L,oBAClBpB,eAAe,EACfoD,MAAM,EACN/L,KAAMyS,EACNpJ,OAAQ,CAAC,UACTG,OAAQ,CAAC,kBAKf,qBAAK9K,UAAU,kBAAf,SACE,sBAAKA,UAAU,gBAAf,UACE,cAAC,EAAD,CAAmB6N,MAAO,uBAC1B,cAAC,EAAD,CACE1C,QAAS,CAAC,OAAQ,OAClBG,aAAc,CAAC,YAAa,YAC5B7G,QAAS,SAAC0I,GACR,EAAK1N,MAAMof,YAAY1R,IAEzB9B,oBAAqBtL,KAAKN,MAAM4L,sBAElC,cAAC,EAAD,CACE1C,MAAO5I,KAAKN,MAAM4L,oBAClBpB,eAAe,EACfoD,MAAM,EACN/L,KAAMyS,EACNpJ,OAAQ,CAAC,UACTG,OAAQ,CAAC,kBAKf,qBAAK9K,UAAU,kBAAf,SACE,sBAAKA,UAAU,gBAAf,UACE,cAAC,EAAD,CAAmB6N,MAAO,8BAC1B,qBAAK7N,UAAU,MAAMC,MAAO,CAAEE,eAAgB,UAA9C,SACE,qBAAKH,UAAU,WAAf,SACE,cAAC,KAAD,CACE0X,aAAa,EACbC,cAAc,EACdC,SAAU,SAACC,GACT,EAAKpY,MAAMmY,SAASC,IAEtBrC,OAAQF,EACRyC,YAAY,mBACZ5M,QAAS,CACP,CAAElI,MAAO,YAAaqF,MAAO,oBAC7B,CAAErF,MAAO,SAAUqF,MAAO,iBAC1B,CAAErF,MAAO,SAAUqF,MAAO,iBAC1B,CAAErF,MAAO,YAAaqF,MAAO,2BAKrC,cAAC,GAAD,CACEyP,aAAa,EACbC,eAAgB,SAChBnG,UAAW,CAAErI,KAAM,GAAIe,IAAK,GAAIC,MAAO,GAAIC,OAAQ,IACnD4G,KAAMgD,EACNpO,QAnGI,CACZ,CAAE2D,KAAM,SAAUtB,MAAO,QACzB,CAAEsB,KAAM,SAAUtB,MAAO,UAkGjB0I,UAAW,WACX/O,OAAQ,eAId,qBAAKjC,UAAU,kBAAf,SACE,sBAAKA,UAAU,gBAAf,UACE,cAAC,EAAD,CAAmB6N,MAAO,yBAC1B,cAAC,EAAD,CACElF,MAAO,WACPsB,eAAe,EACfoD,MAAM,EACN/L,KAAM8c,EACNzT,OAAQ,CAAC,YACTG,OAAQ,CAAC,aAEX,cAAC,GAAD,CACEX,QACE,+GAKR,qBAAKnK,UAAU,kBAAf,SACE,sBAAKA,UAAU,gBAAf,UACE,cAAC,EAAD,CAAmB6N,MAAO,4BAC1B,sBAAK5N,MAAO,CAAEiN,cAAe,IAA7B,UACE,uBAAMjN,MAAO,CAAEoD,MAAO,UAAWF,WAAY,QAA7C,iBACO,IACmB,IAAvBwb,EAAYlZ,OACTkZ,EAAYhZ,QAAO,SAACsS,GAAD,MAAwB,SAAdA,EAAKjQ,QAAiB,GAAG/E,MACtD,KAEN,uBACEhD,MAAO,CACL+P,WAAY,GACZ3M,MAAO,mBACPF,WAAY,QAJhB,mBAOS,IACiB,IAAvBwb,EAAYlZ,OACTkZ,EAAYhZ,QAAO,SAACsS,GAAD,MAAwB,WAAdA,EAAKjQ,QAAmB,GAClD/E,MACH,QAGR,cAAC,GAAD,CAAgB3B,KAAMqd,IACtB,cAAC,GAAD,CACExU,QACE,+GAKR,qBAAKnK,UAAU,kBAAf,SACE,sBAAKA,UAAU,gBAAf,UACE,cAAC,EAAD,CAAmB6N,MAAO,iCAC1B,cAAC,EAAD,CACElF,MAAO,WACPsB,eAAe,EACfoD,MAAM,EACN/L,KAAMod,EACN/T,OAAQ,CAAC,WAAY,8BACrBG,OAAQ,CAAC,UAAW,aAEtB,cAAC,GAAD,CACEX,QACE,sH,GAtTQ5J,aC2BTue,I,OAjCM,SAACrf,GACpB,OACE,qBAAKO,UAAU,eAAf,SACGP,EAAM0L,QAAQ/G,KAAI,SAACgH,EAAQ3C,GAC1B,OACE,qBAEEzI,UACEP,EAAMsf,YAActf,EAAM6L,aAAa7C,GACnC,mBACA,YAENxI,MACER,EAAMsf,YAActf,EAAM6L,aAAa7C,GACnC,CACEzD,WAAYvF,EAAMqL,OAAOrC,GACzBpF,MAAO,SAET,CACEyB,OAAQ,aAAerF,EAAMqL,OAAOrC,GACpCpF,MAAO5D,EAAMqL,OAAOrC,IAG5BhE,QAAS,kBAAMhF,EAAMgF,QAAQhF,EAAM6L,aAAa7C,KAlBlD,SAoBG2C,GAnBI3C,U,UCDX/F,GAAaC,cAChBC,OAAO,CAAC,EAAG,KACXC,MAAM,CACL,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,YAqGWmc,GAlGE,SAAC,GAA4C,IAA1Ctd,EAAyC,EAAzCA,kBAAmBJ,EAAsB,EAAtBA,KAAMyd,EAAgB,EAAhBA,UAC3C,OACE,cAAC,gBAAD,CACE9c,OAAQ,IACRH,MAAO,IACPmC,WAAS,GACTJ,iBAAkB,CAChBob,OAAQ,EAAE,GAAI,EAAG,GACjBte,MAAO,KANX,SASGW,EAAKmE,OAAS,GACb,cAAC,cAAD,CAAavB,UA5BnB,yGA4BM,SACG,qBAAGC,YACUC,KAAI,SAACrB,GACf,IAAMgS,EAAIzT,EAAK+C,MACb,SAACC,GAAD,OAAO4a,GAAS5a,EAAEuJ,SAAW9K,EAAI0X,WAAW0E,UAQ9C,OACE,cAAC,YAAD,CAEEjb,UAAWnB,EACXD,aAAc,WAEVpB,EADe,qBAANqT,EACS,CAChB,CAAElH,MAAO9K,EAAI0X,WAAW2E,WACxB,CAAEvT,UAA2B,KAAhBkJ,EAAEzR,UAAmB,EAAIyR,EAAEzR,WACxC,CAAEyI,OAAqB,KAAbgJ,EAAEpR,OAAgB,EAAIoR,EAAEpR,QAClC,CAAEmI,UAA2B,KAAhBiJ,EAAEtR,UAAmB,EAAIsR,EAAEtR,WACxC,CACE4b,YACqB,KAAnBtK,EAAEuI,aAAsB,EAAIvI,EAAEuI,cAElC,CACEgC,eACwB,KAAtBvK,EAAEsI,gBAAyB,EAAItI,EAAEsI,kBAkBrB,CAChB,CAAExP,MAAO9K,EAAI0X,WAAW8E,MACxB,CAAE1T,UAAW,GACb,CAAEE,OAAQ,GACV,CAAED,UAAW,GACb,CAAEuT,YAAa,GACf,CAAEC,eAAgB,MAIxBpc,aAAc,WACZxB,EAAkB,KAEpBzB,MAAO,CACLgB,MAAO,CACLC,KAAM,OACNF,QAAS,QAEXI,QAAS,CACPF,KAAM,OACNF,QAAS,SAGbE,KACE6T,EACIrS,GAAWkD,OAAOmP,EAAEgK,KAEpB,WA5DDhc,EAAI2B,iBCiFZ8a,G,kDA3Hb,WAAY/f,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,GAFI,E,oEAKK+f,GACtB,OAAQA,EAAS,IACf,IAAK,YACH,MAAO,mBAET,IAAK,SACH,MAAO,mBAET,IAAK,YACH,MAAO,mBAET,QACE,MAAO,sB,+BAGH,IAAD,OACP,OACE,qBAAKzf,UAAU,MAAMC,MAAO,CAAE+G,UAAW,IAAzC,SACE,qBAAKhH,UAAU,mBAAmBC,MAAO,CAAEmX,UAAW,SAAtD,SACE,sBAAKpX,UAAU,aAAf,UACE,cAAC,GAAD,CACE+e,UAAWhf,KAAKN,MAAMsf,UACtB5T,QAAS,CAAC,YAAa,YAAa,UACpCG,aAAc,CAAC,YAAa,YAAa,UACzCR,OAAQ,CACN,oBACA,mBACA,oBAEFrG,QAAS,SAAC0I,GAAD,OAAU,EAAK1N,MAAMigB,YAAYvS,MAE5C,cAACwS,GAAD,CACEZ,UAAWhf,KAAKN,MAAMsf,UACtBzd,KACmC,IAAjCvB,KAAKN,MAAM2d,WAAW3X,OAClB1F,KAAKN,MAAM2d,WAAWzX,QACpB,SAACtG,GAAD,MAAiC,UAAnBA,EAASwO,SAEzB,GAENnM,kBAAmB,SAACyI,GAAD,OACjB,EAAK1K,MAAMmgB,oBAAoBzV,MAGnC,cAAC,IAAD,UAC2C,IAAxCpK,KAAKN,MAAMiC,kBAAkB+D,OAC5B,gCACE,sBACExF,MAAO,CACLoD,MAAOtD,KAAK8f,wBACVrZ,OAAOC,KAAK1G,KAAKN,MAAMiC,kBAAkB,KAE3CyB,WAAY,OACZC,SAAU,IANd,SASGoD,OAAOqB,OAAO9H,KAAKN,MAAMiC,kBAAkB,MAE9C,uBACA,uBACEzB,MAAO,CACLoD,MAAOtD,KAAK8f,wBACVrZ,OAAOC,KAAK1G,KAAKN,MAAMiC,kBAAkB,KAE3CyB,WAAY,OACZC,SAAU,IANd,UASGoD,OAAOC,KAAK1G,KAAKN,MAAMiC,kBAAkB,IAT5C,IASkD,KAC/C8E,OAAOqB,OAAO9H,KAAKN,MAAMiC,kBAAkB,IAAK,IACjD,sBAAMzB,MAAO,CAAEmD,SAAU,GAAID,WAAY,QAAzC,oBAGCqD,OAAOqB,OAAO9H,KAAKN,MAAMiC,kBAAkB,OAE9C,uBACA,uBACEzB,MAAO,CACLoD,MAAOtD,KAAK8f,wBACVrZ,OAAOC,KAAK1G,KAAKN,MAAMiC,kBAAkB,KAE3CyB,WAAY,OACZC,SAAU,IANd,UASGoD,OAAOC,KAAK1G,KAAKN,MAAMiC,kBAAkB,IAT5C,IASkD,KAC/C8E,OAAOqB,OAAO9H,KAAKN,MAAMiC,kBAAkB,IAAK,IACjD,sBAAMzB,MAAO,CAAEmD,SAAU,GAAID,WAAY,QAAzC,oBAGCqD,OAAOqB,OAAO9H,KAAKN,MAAMiC,kBAAkB,OAE9C,uBACA,uBACEzB,MAAO,CACLoD,MAAOtD,KAAK8f,wBACVrZ,OAAOC,KAAK1G,KAAKN,MAAMiC,kBAAkB,KAE3CyB,WAAY,OACZC,SAAU,IANd,UASGoD,OAAOC,KAAK1G,KAAKN,MAAMiC,kBAAkB,IAT5C,IASkD,KAC/C8E,OAAOqB,OAAO9H,KAAKN,MAAMiC,kBAAkB,OAE9C,0BAGF,gB,GAlHQnB,aCFlBuK,I,OAAS,CACbe,UAAW,UACXE,OAAQ,YA+CK+T,GA5CE,SAACrgB,GAChB,OACE,qBAAuBO,UAAU,oBAAjC,SACE,sBAAKA,UAAU,YAAf,UACE,uBAAOA,UAAU,kBAAjB,SAAoCP,EAAMoO,QAC1C,uBACA,qBAAK7N,UAAU,6BAAf,SACGP,EAAM6B,KAAK8C,KAAI,SAAC9C,EAAMmH,GACrB,IAAIsX,EAAWtgB,EAAMsgB,SAASpa,QAC5B,SAACwE,GAAD,OAAa3D,OAAOC,KAAK0D,GAAS,KAAO3D,OAAOC,KAAKnF,GAAM,MAEzD0e,EAAWvgB,EAAMke,UAAUhY,QAC7B,SAACwE,GAAD,OAAa3D,OAAOC,KAAK0D,GAAS,KAAO3D,OAAOC,KAAKnF,GAAM,MAG7D,OACE,sBAAKtB,UAAU,kBAAf,UACE,gCACGwG,OAAOqB,OAAOvG,GACM,IAApBye,EAASta,QAAgBsa,EAAS,GACjC,uBACE/f,UAAU,uBACVC,MAAO,CACLoD,MAAOyH,GAAOtE,OAAOC,KAAKnF,KAH9B,UAMG,KACD,sBAAMtB,UAAU,uBAAhB,oBACqB,IAApB+f,EAASta,QAAgBsa,EAAS,GAC/BvZ,OAAOqB,OAAOmY,EAAS,IAAI,GAC3B,QAEJ,QAEN,8BAAMxZ,OAAOC,KAAKnF,iBAhCpB7B,EAAMgJ,QCsELkD,G,uKA3EH,IAAD,OACP,OAAqC,IAA9B5L,KAAKN,MAAM+M,eAChB,8BACE,qBAAKC,IAAKC,EAAOC,IAAI,aAGvB,qCACE,qBAAK1M,MAAO,CAAEiN,aAAc,IAA5B,SACE,uBACE+S,aAAclgB,KAAKN,MAAMqN,aACzBlD,KAAK,OACLmO,YAAY,SACZH,SAAU,SAACpQ,GAAD,OAAO,EAAK/H,MAAMygB,SAAS1Y,QAGzC,qBAAKxH,UAAU,MAAf,SACoC,IAAjCD,KAAKN,MAAM2d,WAAW3X,OACnB1F,KAAKN,MAAM2d,WACRzX,QACC,SAACtG,GAAD,MACqB,UAAnBA,EAASwO,OACTxO,EAASwO,MACNjB,cACAC,SAAS,EAAKpN,MAAMqN,iBAE1B1I,KAAI,SAAC/E,EAAUoJ,GACd,OACE,cAAC,GAAD,CAEEoF,MAAOxO,EAASwO,MAChBxO,SAAUA,EACVoJ,MAAOA,EACPnH,KAAM,CACJ,CACEuK,UAAWxM,EAASiE,WAEtB,CACEuQ,OAAQxU,EAASmE,QAEnB,CACEuI,OAAQ1M,EAASsE,QAEnB,CACEmI,UAAWzM,EAASoE,WAEtB,CAAE0c,QAAS9gB,EAAS+gB,UACpB,CAAEC,MAAOhhB,EAASme,aAEpBuC,SAAU,CACR,CACElU,UAC+B,KAA7BxM,EAASge,iBAEb,CACEtR,OAAkC,KAA1B1M,EAASie,eAGrBK,UAAW,CACT,CACE9R,UAAWxM,EAASge,iBAEtB,CACEtR,OAAQ1M,EAASie,gBAlChB7U,MAwCb,c,GArEMlI,aCAd+f,GAAY,OACZC,GAAa,QAMb1d,GAAQ,SAAC2d,EAAMC,GAInB,IAJqC,IAAdC,EAAa,uDAAN,EAC1BnU,EAAIiU,EACF3d,EAAQ,GAEP0J,GAAKkU,GACV5d,EAAM4K,KAAKlB,GACXA,GAAKmU,EAGP,OAAO7d,GAqLM8d,G,kDAhLb,WAAYlhB,GAAQ,IAAD,uBACjB,cAAMA,IAoBRmhB,SAAW,SAAAC,GAAS,IAAD,EACkB,EAAKphB,MAAhCqhB,qBADS,MACO,SAAA/T,GAAC,OAAIA,GADZ,EAGXsO,EAActX,KAAKgd,IAAI,EAAGhd,KAAKid,IAAIH,EAAM,EAAKrF,aAE9CyF,EAAiB,CACrB5F,cACAG,WAAY,EAAKA,WACjB0F,UAAW,EAAKA,UAChBC,aAAc,EAAKA,cAGrB,EAAK/T,SAAS,CAAEiO,gBAAe,kBAAMyF,EAAcG,OAjClC,EAoCnBG,YAAc,SAAAP,GAAI,OAAI,SAAAQ,GACpBA,EAAIC,iBACJ,EAAKV,SAASC,KAtCG,EAyCnBU,eAAiB,SAAAF,GACfA,EAAIC,iBACJ,EAAKV,SAAS,EAAKlhB,MAAM2b,YAAqC,EAAtB,EAAKmG,eAAsB,IA3ClD,EA8CnBC,gBAAkB,SAAAJ,GAChBA,EAAIC,iBACJ,EAAKV,SAAS,EAAKlhB,MAAM2b,YAAqC,EAAtB,EAAKmG,eAAsB,IAhDlD,EA8DnBE,iBAAmB,WAEjB,IAAMlG,EAAa,EAAKA,WAClBH,EAAc,EAAK3b,MAAM2b,YACzBmG,EAAiB,EAAKA,eAMtBG,EAAsC,EAAtB,EAAKH,eAAsB,EAGjD,GAAIhG,EAFgBmG,EAAe,EAEL,CAE5B,IAAMC,EAAY7d,KAAKgd,IAAI,EAAG1F,EAAcmG,GACtCK,EAAU9d,KAAKid,IAAIxF,EAAa,EAAGH,EAAcmG,GAEnDM,EAAQjf,GAAM+e,EAAWC,GAOvBE,EAAeH,EAAY,EAC3BI,EAAiBxG,EAAaqG,EAAW,EACzCI,EAAcN,GAAgBG,EAAMrc,OAAS,GAEnD,QAAQ,GAEN,KAAMsc,IAAiBC,EACrB,IAAME,EAAarf,GAAM+e,EAAYK,EAAaL,EAAY,GAC9DE,EAAK,CAAIxB,IAAJ,mBAAkB4B,GAAlB,YAAiCJ,IACtC,MAIF,KAAOC,GAAgBC,EACrB,IAAME,EAAarf,GAAMgf,EAAU,EAAGA,EAAUI,GAChDH,EAAK,sBAAOA,GAAP,YAAiBI,GAAjB,CAA6B3B,KAClC,MAIF,KAAMwB,GAAgBC,EACtB,QACEF,EAAK,CAAIxB,IAAJ,mBAAkBwB,GAAlB,CAAyBvB,KAKlC,MAAM,CAAE,GAAR,mBAAcuB,GAAd,CAAqBtG,IAIvB,OAAO3Y,GAAM,EAAG2Y,IAtHC,MAEmD/b,EAA5D0hB,oBAFS,MAEM,KAFN,IAEmD1hB,EAAvCyhB,iBAFZ,MAEwB,GAFxB,IAEmDzhB,EAAvB+hB,sBAF5B,MAE6C,EAF7C,SAIjB,EAAKN,UAAiC,kBAAdA,EAAyBA,EAAY,GAC7D,EAAKC,aAAuC,kBAAjBA,EAA4BA,EAAe,EAGtE,EAAKK,eAA2C,kBAAnBA,EACzBzd,KAAKgd,IAAI,EAAGhd,KAAKid,IAAIQ,EAAgB,IACrC,EAEJ,EAAKhG,WAAazX,KAAKoe,KAAK,EAAKhB,aAAe,EAAKD,WAErD,EAAKxhB,MAAQ,CAAE2b,YAAa,GAdX,E,gEAkBjBtb,KAAK6gB,SAAS,K,+BAwGN,IAAD,OAEP,IAAK7gB,KAAKohB,cAAoC,IAApBphB,KAAKyb,WAAkB,OAAO,KAFjD,IAICH,EAAgBtb,KAAKL,MAArB2b,YACFyG,EAAQ/hB,KAAK2hB,mBAEnB,OACE,cAAC,WAAD,UACE,qBAAKU,aAAW,uBAAhB,SACE,oBAAIpiB,UAAU,aAAd,SACI8hB,EAAM1d,KAAI,SAACyc,EAAMpY,GAEjB,OAAIoY,IAASP,GACX,oBAAgBtgB,UAAU,YAA1B,SACE,oBAAGA,UAAU,YAAYI,KAAK,IAAIgiB,aAAW,WAAW3d,QAAS,EAAK8c,eAAtE,UACE,sBAAMc,cAAY,OAAlB,kBACA,sBAAMriB,UAAU,UAAhB,0BAHKyI,GAQPoY,IAASN,GACX,oBAAgBvgB,UAAU,YAA1B,SACE,oBAAGA,UAAU,YAAYI,KAAK,IAAIgiB,aAAW,OAAO3d,QAAS,EAAKgd,gBAAlE,UACE,sBAAMY,cAAY,OAAlB,kBACA,sBAAMriB,UAAU,UAAhB,sBAHKyI,GAST,oBAAgBzI,UAAS,mBAAeqb,IAAgBwF,EAAO,UAAY,IAA3E,SACE,mBAAG7gB,UAAU,YAAYI,KAAK,IAAIqE,QAAU,EAAK2c,YAAYP,GAA7D,SAAuEA,KADhEpY,gB,GA5JAlI,aCyNV+hB,G,uKAvOH,IAAD,OACDhN,EAAe,CACnBC,QAAS,SAACC,GAAD,oBAAC,gBACLA,GADI,IAEP/D,gBAAiB,QACjBpM,YAAa,GACb6H,aAAc,MAEhB9B,OAAQ,SAACoK,EAAD,GAAyD,EAA9ClU,KAA+C,IAAzCmU,EAAwC,EAAxCA,WAAYC,EAA4B,EAA5BA,UAAWC,EAAiB,EAAjBA,WAC9C,OAAO,6BACFH,GADL,IAEE/D,gBAAiBgE,EACb,KACAE,EACA,UACAD,EACA,QACA,KACJrS,MAAOoS,EAAa,OAASE,EAAa,QAAU,UACpD1Q,OAAQwQ,EAAa,cAAgB,UAErC,UAAU,6BACLD,EAAO,YADZ,IAEE/D,iBAAkBgE,IAAeE,EAAa,UAAY,eAM5DxK,EAAU3E,OAAOC,KAAKyY,IAAU9a,KAAI,SAAC/E,GACzC,MAAO,CACL4D,MAAO5D,EACPiJ,MAAO4W,GAAS7f,OAIhBkP,EAAO,IAAIgU,KACXC,EACFjU,EAAKkU,WAAa,EAAI,IAAMlU,EAAKmU,UAAY,IAAMnU,EAAKoU,cAE1D,OACE,qCACE,8BACE,cAAC,KAAD,CACEjL,aAAa,EACbE,SAAU,SAACC,GACT,EAAKzK,SAAS,CACZuO,UAAW,GACXD,iBAAiB,IAEnB,EAAKkH,cACgB,OAAnB/K,EACIgL,KAAEC,MAAMtc,OAAOC,KAAKyY,IAAW,GAAG,GAClC,CAACrH,EAAe5U,MAAM4R,iBAG9BW,OAAQF,EACRnK,QAASA,MAIb,sBAAKnL,UAAU,MAAf,WACiC,IAA9BD,KAAKN,MAAM+M,eACV,qBAAKvM,MAAO,CAAE6B,MAAO,QAArB,SACE,qBAAK2K,IAAKC,EAAOC,IAAI,aAEW,IAAhC5M,KAAKN,MAAMkc,UAAUlW,OACvB1F,KAAKN,MAAMkc,UAAUvX,KAAI,SAAC2e,EAAUC,GAClC,IA4D+B,EA5D3B1hB,EAAOkF,OAAOC,KAAKsc,EAASE,cAAc,IAC3Ctd,QAAO,SAACrE,GAAD,MAAmB,SAATA,GAAmBA,IAASkhB,KAC7Cpe,KAAI,SAAC0F,EAASrB,GAAW,IAAD,EACvB,OAAO,EAAP,CACET,KAAM8B,EACN+B,UAAWkX,EAASE,cAAc,GAAGnZ,GAASoZ,YAC9CnX,OAAQgX,EAASE,cAAc,GAAGnZ,GAASqZ,aAC3CrX,UACEiX,EAASE,cAAc,GAAGnZ,GAASsZ,kBALvC,cAMG,YACCL,EAASE,cAAc,GAAGnZ,GAASuZ,iBAPvC,cAQG,aACCN,EAASE,cAAc,GAAGnZ,GAASwZ,kBATvC,KAYAC,EAC0B,IAA5B,EAAK9jB,MAAM+jB,MAAM/d,eACVe,OAAOqB,OACZ,EAAKpI,MAAM+jB,MAAM,GAAGC,aAAa,IACjC9d,QACA,SAACsQ,GAAD,MACc,OAAZA,GACAA,EAAQpI,QAAUkV,EAASW,oBAAoB,GAAGC,KAAK9V,SACzD,GACA+V,EAAgBpd,OAAOqB,OACzB,EAAKpI,MAAM+jB,MAAM,GAAGC,aAAa,IACjC9d,QACA,SAACsQ,GAAD,MACc,OAAZA,GACAA,EAAQpI,QAAUkV,EAASW,oBAAoB,GAAGC,KAAK9V,SACzD,GACEgW,EAAard,OAAOqB,OAAOkb,EAASE,cAAc,IACpDzc,OAAOqB,OAAOkb,EAASE,cAAc,IAAIxd,OAAS,GAEhDnC,EACY,cAAdigB,EACIK,EAAcV,YACdW,EAAWX,YACbvf,EACY,cAAd4f,EACIK,EAAcT,aACdU,EAAWV,aACb1f,EACY,cAAd8f,EACIK,EAAcE,gBACdD,EAAWT,iBACbW,EACY,cAAdR,EACIK,EAAcI,sBACdH,EAAWR,gBACbY,EACY,cAAdV,EACIK,EAAcM,uBACdL,EAAWP,iBACba,EAAuB3d,OAAOqB,OAChC,EAAKpI,MAAM+jB,MAAM,GAAGC,aAAa,IACjC9d,QACA,SAACsQ,GAAD,OACEA,EAAQpI,QAAUkV,EAASW,oBAAoB,GAAGC,KAAK9V,SACzD,GACgB,cAAd0V,GACFjiB,EAAKmM,MAAL,GACEzF,KAAMwa,EACN3W,UAAWsY,EAAqBjB,YAChCnX,OAAQoY,EAAqBhB,aAC7BrX,UAAWqY,EAAqBL,iBAJlC,cAKG,YAAcK,EAAqBH,uBALtC,cAMG,aAAeG,EAAqBD,wBANvC,IASF,OACE,qBAAkBlkB,UAAU,sBAA5B,SACE,sBAAKA,UAAU,mBAAf,UACE,uBAAOA,UAAU,mBAAjB,SACG+iB,EAASW,oBAAoB,GAAGC,KAAK9V,QAExC,uBACA,sBAAK7N,UAAU,6BAAf,UACE,sBAAKA,UAAU,6BAAf,UACE,gCACGsD,EACiB,IAAjBygB,EAAqB,KACpB,uBAAM9jB,MAAO,CAAEmD,SAAU,IAAzB,UACG,KACD,sBACEnD,MAAO,CACLmD,SAAU,GACVD,WAAY,QAHhB,oBAQC4gB,QAIP,+CAEF,sBAAK/jB,UAAU,0BAAf,UACE,gCACG2D,EACc,IAAdsgB,EAAkB,KACjB,uBAAMhkB,MAAO,CAAEmD,SAAU,IAAzB,UACG,KACD,sBACEnD,MAAO,CACLmD,SAAU,GACVD,WAAY,QAHhB,oBAQC8gB,QAIP,4CAEF,sBAAKjkB,UAAU,6BAAf,UACE,8BAAMyD,IACN,kDAGJ,cAAC,EAAD,CACEkF,MAAO,YACPgC,OAAQ,CACN,YACA,YACA,SACA,YACA,cAEFG,OAAQ,CACN,UACA,UACA,UACA,UACA,WAEFxJ,KAAMA,QApEF0hB,MA0EZ,KACJ,uBACEjjB,KAAKN,MAAMic,gBAST,KARF,qBAAK1b,UAAU,MAAMC,MAAO,CAAE6B,MAAO,OAAQ8C,QAAS,IAAtD,SACE,cAAC,GAAD,CACEuc,aAAc3a,OAAOC,KAAKyY,IAAUzZ,OACpCyb,UAAW,EACXM,eAAgB,EAChBV,cAAe/gB,KAAKN,MAAMqhB,4B,GA9NjBvgB,aC4RV6jB,G,kDAlRb,WAAY3kB,GAAQ,IAAD,8BACjB,cAAMA,IAwJRqhB,cAAgB,SAAC9T,GAAW,IAClBqO,EAA4BrO,EAA5BqO,YAAaG,EAAexO,EAAfwO,WAErB,EAAKpO,SAAS,CACZuO,UAAW,GACXnP,gBAAgB,IAEb,EAAK9M,MAAMgc,iBACd,EAAKkH,cAAcC,KAAEC,MAAMtc,OAAOC,KAAKyY,IAAW,GAAG7D,EAAc,IAGrE,EAAKjO,SAAS,CACZiO,YAAaA,EAAc,EAC3BG,WAAYA,KAtKG,EA0KnBzN,iBAAmB,WACjB,EAAKX,SAAS,CAAEtL,MAAO1C,OAAO2C,WAAYE,OAAQ7C,OAAO8C,eAzKzD,EAAKxC,MAAQ,CACX2L,oBAAqB,YACrByB,aAAc,GACd0W,MAAO,GACP/S,GAAI,IACJ3O,MAAO,EACPG,OAAQ,EACR8b,gBAAiB,GACjBrc,kBAAmB,GACnBqd,UAAW,YACXzK,cAAe,YACfiH,cAAe,MACfF,YAAa,EACbgJ,gBAAiB,EACjBC,eAAgB,EAChB9I,WAAY,EACZ4B,WAAY,GACZiB,WAAY,GACZ7R,gBAAgB,EAChBkP,iBAAiB,EACjBpa,KAAM,GACNqa,UAAW,IAvBI,E,gEA2BE,IAAD,OAClBvc,OAAOmD,iBAAiB,SAAUxC,KAAKgO,kBAEvChO,KAAKqN,SAAS,CACZZ,gBAAgB,IAElBpN,OAAOmD,iBAAiB,SAAS,WAC/B,EAAKgiB,gBACL,EAAKC,eACL,EAAKC,gBACL,EAAKC,aAAa,CAAC,OAGrB3kB,KAAKwkB,gBACLxkB,KAAKykB,eACLzkB,KAAK0kB,gBACL1kB,KAAK2kB,aAAa,CAAC,M,sCAGJ,IAAD,OACdpI,MAAM,6DAA8D,CAClEC,OAAQ,QAEPC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACL,EAAKvP,SAAS,CACZiR,WAAY1B,OAGfC,OAAM,SAAChd,GACN,EAAKwN,SAAS,CACZZ,gBAAgB,S,sCAKP,IAAD,OACd8P,MAAM,wDAAyD,CAC7DqI,OAAQ,CAAE,8BAA+B,KACzCpI,OAAQ,QAEPC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACL,EAAKvP,SAAS,CACZgQ,WAAYT,OAGfC,OAAM,SAAChd,GACN,EAAKwN,SAAS,CACZZ,gBAAgB,S,qCAKR,IAAD,OACb8P,MAAM,uCAAwC,CAC5CC,OAAQ,QAEPC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACL,EAAKvP,SAAS,CACZ2Q,gBAAiBpB,OAGpBC,OAAM,SAAChd,GACN,EAAKwN,SAAS,CACZZ,gBAAgB,S,mCAKXoY,GAAS,IAAD,OACfpB,EAAQ,GACZzjB,KAAKqN,SAAS,CACZoW,MAAO,GACPhX,gBAAgB,IAElBoY,EAAOxgB,KAAI,SAAC/E,GACVid,MAAM,+FAEJ,CACEC,OAAQ,QAGTC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACL,EAAKvP,SAAS,CACZZ,gBAAgB,EAChBgX,MAAOA,EAAMqB,OAAOlI,QAGvBC,OAAM,SAAChd,GACN,EAAKwN,SAAS,CACZZ,gBAAgB,Y,oCAMZlL,GAAO,IAAD,OAClBA,EAAK8C,KAAI,SAAC/E,GACRid,MAAM,8FAAD,OAC2Fjd,GAC9F,CACEkd,OAAQ,QAGTC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACL,EAAKvP,UAAS,SAAC1N,GAGb,MAAO,CACLic,UAHgBjc,EAAMic,UAAUkJ,OAAOlI,GAIvCnQ,gBAHqB,SAO1BoQ,OAAM,SAAChd,GACN,EAAKwN,SAAS,CACZZ,gBAAgB,Y,6CA4BxBpN,OAAOoD,oBAAoB,SAAUzC,KAAKgO,oB,+BAGlC,IAAD,OACP,OACE,cAAC,EAAD,UACE,qBAAK/N,UAAU,SAAf,SACE,sBAAKA,UAAU,YAAf,UACE,8BACE,cAAC,EAAD,CACEsN,UAAW,SACXE,QAASzN,KAAKN,MAAM+N,QACpB1L,MAAO/B,KAAKL,MAAMoC,UAGtB,sBAAK7B,MAAO,CAAEmX,UAAW,QAAzB,UACE,cAAC,GAAD,CAAYgG,WAAYrd,KAAKL,MAAM0d,aACnC,cAAC,GAAD,CACExT,KAAK,SACL6G,GAAI1Q,KAAKL,MAAM+Q,GACftF,QAAS,CAAC,YAAa,OAAQ,QAAS,OACxCuF,aAAc,CAAC,IAAK,QAAS,SAAU,QACvCjM,QAAS,SAACsY,GACR,EAAK3P,SAAS,CACZqD,GAAIsM,OAIS,MAAlBhd,KAAKL,MAAM+Q,GACV,cAAC,GAAD,CACEsN,gBAAiBhe,KAAKL,MAAMqe,gBAC5BM,WAAYte,KAAKL,MAAM2e,WACvBjB,WAAYrd,KAAKL,MAAM0d,WACvB/R,oBAAqBtL,KAAKL,MAAM2L,oBAChCiJ,cAAevU,KAAKL,MAAM4U,cAC1BuK,YAAa,SAAC1R,GACZ,EAAKC,SAAS,CACZ/B,oBAAqB8B,KAGzByK,SAAU,SAACC,GACT,EAAKzK,SAAS,CACZkH,cACqB,OAAnBuD,EACI,YACAA,EAAe5U,WAIzB,KACe,SAAlBlD,KAAKL,MAAM+Q,GACV,cAAC,GAAD,CACEsO,UAAWhf,KAAKL,MAAMqf,UACtB3B,WAAYrd,KAAKL,MAAM0d,WACvB1b,kBAAmB3B,KAAKL,MAAMgC,kBAC9Bke,oBAAqB,SAACzV,GACpB,EAAKiD,SAAS,CAAE1L,kBAAmByI,KAErCuV,YAAa,SAACvS,GACZ,EAAKC,SAAS,CACZ2R,UAAW5R,OAIf,KACe,WAAlBpN,KAAKL,MAAM+Q,GACV,cAAC,GAAD,CAAO2M,WAAYrd,KAAKL,MAAM0d,aAC5B,KACe,UAAlBrd,KAAKL,MAAM+Q,GACV,cAAC,GAAD,CACEjE,eAAgBzM,KAAKL,MAAM8M,eAC3BM,aAAc/M,KAAKL,MAAMoN,aACzBsQ,WAAYrd,KAAKL,MAAM0d,WACvB8C,SAAU,SAAC1Y,GACT,EAAK4F,SAAS,CACZN,aAActF,EAAErC,OAAOlC,MAAM2J,cAC7B8O,iBAAiB,OAIrB,KACe,WAAlB3b,KAAKL,MAAM+Q,GACV,cAAC,GAAD,CACEjE,eAAgBzM,KAAKL,MAAM8M,eAC3BgX,MAAOzjB,KAAKL,MAAM8jB,MAClB7H,UAAW5b,KAAKL,MAAMic,UACtBD,gBAAiB3b,KAAKL,MAAMgc,gBAC5BoF,cAAe/gB,KAAK+gB,gBAEpB,QAEN,cAAC,EAAD,e,GA3QSvgB,aCRrBukB,KAAQC,IAAIC,KAAKC,MACjB,IAAMzX,GAAU0X,eAEhBtV,KAAQuV,WAAW,iBAAkB,CAAEC,OAAO,IAC9CxV,KAAQyV,IAAI,CACVxE,KACEzhB,OAAOC,SAASimB,OAASlmB,OAAOC,SAASkmB,SAAWnmB,OAAOC,SAASmmB,OAExE5V,KAAQ6V,SACNrmB,OAAOC,SAASimB,OAASlmB,OAAOC,SAASkmB,SAAWnmB,OAAOC,SAASmmB,MAGtEhY,GAAQkY,QAAO,SAACrmB,GACduQ,KAAQyV,IAAI,CAAExE,KAAMxhB,EAASimB,OAASjmB,EAASkmB,SAAWlmB,EAASmmB,OACnE5V,KAAQ6V,SAASpmB,EAASimB,OAASjmB,EAASkmB,SAAWlmB,EAASmmB,SAG3D,IAAMG,GAAb,uKAEI,OACE,8BACE,cAAC,IAAMC,SAAP,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,SAASC,UAAWhL,KAChC,cAAC,IAAD,CAAO+K,KAAK,IAAIC,UAAW1B,gBAPvC,GAA2B7jB,aCjBrBwlB,IDgCS5I,YAAWwI,IC/BxB,cAAC,IAAD,UACE,cAAC,EAAD,UACE,cAAC,GAAD,SAKNK,IAASC,OAAOF,GAASG,SAASC,eAAe,SpCkH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB9J,MAAK,SAAA+J,GACJA,EAAaC,gBAEd5J,OAAM,SAAAhd,GACLE,QAAQF,MAAMA,EAAM6mB,a","file":"static/js/main.8c0e1769.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport \"./ErrorBoundry.css\";\r\n\r\nclass ErrorBoundry extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { hasError: false };\r\n  }\r\n\r\n  static getDerivedStateFromError(error) {\r\n    // Update state so the next render will show the fallback UI.\r\n    return { hasError: true };\r\n  }\r\n\r\n  componentDidCatch(error, errorInfo) {\r\n    // You can also log the error to an error reporting service\r\n    console.error(error, errorInfo);\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      // You can render any custom fallback UI\r\n      return (\r\n        <div>\r\n          <section className=\"page_404\">\r\n            <div className=\"container\">\r\n              <div className=\"row\">\r\n                <div\r\n                  className=\"col-sm-12\"\r\n                  style={{ display: \"flex\", justifyContent: \"center\" }}\r\n                >\r\n                  <div className=\"col-sm-10 col-sm-offset-1  text-center\">\r\n                    <div className=\"four_zero_four_bg\"></div>\r\n\r\n                    <div className=\"contant_box_404\">\r\n                      <h3 className=\"h2\">Look like you're lost</h3>\r\n\r\n                      <p>the page you are looking for not available!</p>\r\n\r\n                      <a\r\n                        href=\"https://miteshtagadiya.github.io/Covid-19-Global-Dashboard\"\r\n                        className=\"link_404\"\r\n                      >\r\n                        Go to Home\r\n                      </a>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </section>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundry;\r\n","import React, { useState } from \"react\";\r\nimport { ComposableMap, Geographies, Geography } from \"react-simple-maps\";\r\nimport { scaleLog } from \"d3-scale\";\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport \"./indiaMap.css\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst INDIA_TOPO_JSON = require(\"./india.topo.json\");\r\n\r\nconst PROJECTION_CONFIG = {\r\n  scale: 350,\r\n  center: [78.9629, 22.5937], // always in [East Latitude, North Longitude]\r\n};\r\n\r\n// Red Variants\r\nconst COLOR_RANGE = [\"#ffedea\", \"#ffcec5\", \"#ffad9f\"];\r\n\r\nconst DEFAULT_COLOR = \"#EEE\";\r\n\r\nconst geographyStyle = {\r\n  default: {\r\n    outline: \"none\",\r\n  },\r\n  hover: {\r\n    fill: \"#F53\",\r\n    transition: \"all 250ms\",\r\n    outline: \"none\",\r\n  },\r\n  pressed: {\r\n    outline: \"none\",\r\n  },\r\n};\r\n\r\nfunction useWindowSize() {\r\n  const isClient = typeof window === \"object\";\r\n\r\n  function getSize() {\r\n    return {\r\n      width: isClient ? window.innerWidth : undefined,\r\n      height: isClient ? window.innerHeight : undefined,\r\n    };\r\n  }\r\n\r\n  const [windowSize, setWindowSize] = useState(getSize);\r\n\r\n  useEffect(() => {\r\n    if (!isClient) {\r\n      return false;\r\n    }\r\n\r\n    function handleResize() {\r\n      setWindowSize(getSize());\r\n    }\r\n\r\n    window.addEventListener(\"resize\", handleResize);\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return windowSize;\r\n}\r\n\r\nconst IndiaMap = ({ data, onStateClick }) => {\r\n  const [tooltipContent, setTooltipContent] = useState(\"\");\r\n  const size = useWindowSize();\r\n\r\n  const colorScale = scaleLog().domain([1, 10]).range(COLOR_RANGE);\r\n\r\n  const onMouseEnter = (geo, current = { value: \"NA\" }) => {\r\n    return () => {\r\n      setTooltipContent(current);\r\n    };\r\n  };\r\n\r\n  const onMouseLeave = () => {\r\n    setTooltipContent(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"indiamap\">\r\n      {tooltipContent !== \"\" ? (\r\n        <ReactTooltip>\r\n          <div>\r\n            <span\r\n              style={{\r\n                fontWeight: \"bold\",\r\n                fontSize: 16,\r\n                color: \"rgb(64, 75, 105)\",\r\n              }}\r\n            >\r\n              {tooltipContent.state}\r\n            </span>\r\n            <br />\r\n            <span\r\n              style={{\r\n                fontWeight: \"bold\",\r\n                fontSize: 16,\r\n                color: \"rgb(228, 51, 57)\",\r\n              }}\r\n            >\r\n              {\"Confirmed: \"}\r\n              {tooltipContent.confirmed}{\" \"}\r\n              {tooltipContent.deltaconfirmed !== \"0\" ? (\r\n                <span style={{ fontSize: 17, fontWeight: \"bold\" }}>\r\n                  &#9650; {tooltipContent.deltaconfirmed}\r\n                </span>\r\n              ) : null}\r\n            </span>\r\n            <br />\r\n            <span\r\n              style={{\r\n                fontWeight: \"bold\",\r\n                fontSize: 16,\r\n                color: \"rgb(25, 42, 86)\",\r\n              }}\r\n            >\r\n              {\"Active: \"}\r\n              {tooltipContent.active}\r\n            </span>\r\n            <br />\r\n            <span\r\n              style={{\r\n                fontWeight: \"bold\",\r\n                fontSize: 16,\r\n                color: \"rgb(0, 98, 102)\",\r\n              }}\r\n            >\r\n              {\"Recovered: \"}\r\n              {tooltipContent.recovered}\r\n              {tooltipContent.deltaconfirmed !== \"0\" ? (\r\n                <span style={{ fontSize: 17, fontWeight: \"bold\" }}>\r\n                  &#9650; {tooltipContent.deltarecovered}\r\n                </span>\r\n              ) : null}\r\n            </span>\r\n            <br />\r\n            <span\r\n              style={{\r\n                fontWeight: \"bold\",\r\n                fontSize: 16,\r\n                color: \"rgb(83, 92, 104)\",\r\n              }}\r\n            >\r\n              {\"Deaths: \"}\r\n              {tooltipContent.deaths}\r\n              {tooltipContent.deltaconfirmed !== \"0\" ? (\r\n                <span style={{ fontSize: 17, fontWeight: \"bold\" }}>\r\n                  &#9650; {tooltipContent.deltadeaths}\r\n                </span>\r\n              ) : null}\r\n            </span>\r\n            <br />\r\n          </div>\r\n        </ReactTooltip>\r\n      ) : null}\r\n      <ComposableMap\r\n        projectionConfig={PROJECTION_CONFIG}\r\n        projection=\"geoMercator\"\r\n        height={\r\n          size.width < 1500 && size.width > 768\r\n            ? 200\r\n            : size.width <= 768 && size.width > 400\r\n            ? 150\r\n            : size.width <= 400\r\n            ? 120\r\n            : Math.floor(size.width / 10)\r\n        }\r\n        width={\r\n          size.width < 1500 && size.width > 768\r\n            ? 500\r\n            : size.width <= 768 && size.width > 400\r\n            ? 300\r\n            : size.width <= 400\r\n            ? 220\r\n            : Math.floor(size.width / 5)\r\n        }\r\n        data-tip=\"\"\r\n      >\r\n        <Geographies geography={INDIA_TOPO_JSON}>\r\n          {({ geographies }) =>\r\n            geographies.map((geo) => {\r\n              const current = data.find((s) => s.statecode === geo.id);\r\n              return (\r\n                <Geography\r\n                  key={geo.rsmKey}\r\n                  geography={geo}\r\n                  fill={current ? colorScale(current.active) : DEFAULT_COLOR}\r\n                  style={geographyStyle}\r\n                  onClick={() => onStateClick(current)}\r\n                  onMouseEnter={onMouseEnter(geo, current)}\r\n                  onMouseLeave={onMouseLeave}\r\n                />\r\n              );\r\n            })\r\n          }\r\n        </Geographies>\r\n      </ComposableMap>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IndiaMap;\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nconst Footer = (props) => {\r\n  return (\r\n    <div style={{ padding: 15 }}>\r\n      <div\r\n        style={{\r\n          fontWeight: \"bold\",\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          fontSize: 22,\r\n          paddingBottom: 15,\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            border: \"3px solid white\",\r\n            padding: \"5px 25px\",\r\n            borderRadius: 5,\r\n            background: \"white\",\r\n            color: \"#404b69\",\r\n            cursor: \"pointer\",\r\n          }}\r\n        >\r\n          <a\r\n            style={{ textDecoration: \"none\", color: \"#404b69\" }}\r\n            href=\"https://github.com/Bala534/Covid19-Dashboard\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            <span style={{ marginRight: 10 }}>\r\n              <FontAwesomeIcon icon={[\"fab\", \"github\"]} className=\"github\" />\r\n            </span>\r\n            Github\r\n          </a>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        Designed and Developed by{\"  \"}\r\n        <a\r\n          style={{\r\n            color: \"#f6565b\",\r\n            fontWeight: \"bold\",\r\n            textDecoration: \"none\",\r\n          }}\r\n          href=\"http://vishnu.edu.in/\"\r\n          rel=\"noopener noreferrer\"\r\n          target=\"_blank\"\r\n        >\r\n          Team Fusion\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { Component } from \"react\";\r\nimport ReactTable from \"react-table-6\";\r\nimport \"react-table-6/react-table.css\";\r\n\r\nclass Table extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    const data =\r\n      this.props.india.length !== 0\r\n        ? this.props.india.statewise\r\n            .filter((state) => state.state !== \"Total\")\r\n            .map((state) => {\r\n              return {\r\n                state: state.state,\r\n                confirmed: Number(state.confirmed),\r\n                active: Number(state.active),\r\n                recovered: Number(state.recovered),\r\n                deaths: Number(state.deaths),\r\n                deltaConfirmed: Number(state.deltaconfirmed),\r\n                deltaActive: Number(\r\n                  state.deltaconfirmed -\r\n                    state.deltarecovered -\r\n                    state.deltadeaths\r\n                ),\r\n                deltaRecovered: Number(state.deltarecovered),\r\n                deltaDeaths: Number(state.deltadeaths),\r\n              };\r\n            })\r\n        : [];\r\n\r\n    const columns =\r\n      this.props.india.length !== 0\r\n        ? [\r\n            {\r\n              Header: \"State/UT\",\r\n              accessor: \"state\", // String-based value accessors!\r\n            },\r\n            {\r\n              Header: \"Confirmed\",\r\n              accessor: \"confirmed\",\r\n              Cell: (props) => {\r\n                return (\r\n                  <>\r\n                    {props.original.deltaConfirmed === 0 ? null : (\r\n                      <span\r\n                        style={{\r\n                          fontSize: 15,\r\n                          fontWeight: \"bold\",\r\n                          color: \"#e43339\",\r\n                        }}\r\n                      >\r\n                        <span style={{ fontSize: 15, fontWeight: \"bold\" }}>\r\n                          &#9650;\r\n                        </span>\r\n                        {props.original.deltaConfirmed}\r\n                      </span>\r\n                    )}{\" \"}\r\n                    <span className=\"number\">{props.value}</span>\r\n                  </>\r\n                );\r\n              },\r\n            },\r\n            {\r\n              Header: \"Active\",\r\n              accessor: \"active\",\r\n              Cell: (props) => {\r\n                return (\r\n                  <>\r\n                    {props.original.deltaActive === 0 ? null : (\r\n                      <span\r\n                        style={{\r\n                          fontSize: 15,\r\n                          fontWeight: \"bold\",\r\n                          color: \"#192a56\",\r\n                        }}\r\n                      >\r\n                        <span style={{ fontSize: 15, fontWeight: \"bold\" }}>\r\n                          &#9650;\r\n                        </span>\r\n                        {props.original.deltaActive}\r\n                      </span>\r\n                    )}{\" \"}\r\n                    <span className=\"number\">{props.value}</span>\r\n                  </>\r\n                );\r\n              },\r\n            },\r\n            {\r\n              Header: \"Recovered\",\r\n              accessor: \"recovered\",\r\n              Cell: (props) => {\r\n                return (\r\n                  <>\r\n                    {props.original.deltaRecovered === 0 ? null : (\r\n                      <span\r\n                        style={{\r\n                          fontSize: 15,\r\n                          fontWeight: \"bold\",\r\n                          color: \"#006266\",\r\n                        }}\r\n                      >\r\n                        <span style={{ fontSize: 15, fontWeight: \"bold\" }}>\r\n                          &#9650;\r\n                        </span>\r\n                        {props.original.deltaRecovered}\r\n                      </span>\r\n                    )}{\" \"}\r\n                    <span className=\"number\">{props.value}</span>\r\n                  </>\r\n                );\r\n              },\r\n            },\r\n            {\r\n              Header: \"Deaths\",\r\n              accessor: \"deaths\",\r\n              Cell: (props) => {\r\n                return (\r\n                  <>\r\n                    {props.original.deltaDeaths === 0 ? null : (\r\n                      <span\r\n                        style={{\r\n                          fontSize: 15,\r\n                          fontWeight: \"bold\",\r\n                          color: \"#535c68\",\r\n                        }}\r\n                      >\r\n                        <span style={{ fontSize: 15, fontWeight: \"bold\" }}>\r\n                          &#9650;\r\n                        </span>\r\n                        {props.original.deltaDeaths}\r\n                      </span>\r\n                    )}{\" \"}\r\n                    <span className=\"number\">{props.value}</span>\r\n                  </>\r\n                );\r\n              },\r\n            },\r\n          ]\r\n        : [];\r\n\r\n    const cityData =\r\n      this.props.stateWiseCity.length !== 0\r\n        ? Object.keys(this.props.stateWiseCity).map((city) => {\r\n            return {\r\n              [city]: Object.keys(\r\n                this.props.stateWiseCity[city].districtData\r\n              ).map((key) => {\r\n                return {\r\n                  city: key,\r\n                  confirmed: this.props.stateWiseCity[city].districtData[key]\r\n                    .confirmed,\r\n                  deltaConfirmed: this.props.stateWiseCity[city].districtData[\r\n                    key\r\n                  ][\"delta\"][\"confirmed\"],\r\n                  deceased: this.props.stateWiseCity[city].districtData[key]\r\n                    .deceased,\r\n                  active: this.props.stateWiseCity[city].districtData[key]\r\n                    .active,\r\n                  deltaDeceased: this.props.stateWiseCity[city].districtData[\r\n                    key\r\n                  ][\"delta\"][\"deceased\"],\r\n                  recovered: this.props.stateWiseCity[city].districtData[key]\r\n                    .recovered,\r\n                  deltaRecovered: this.props.stateWiseCity[city].districtData[\r\n                    key\r\n                  ][\"delta\"][\"recovered\"],\r\n                };\r\n              }),\r\n            };\r\n          })\r\n        : [];\r\n\r\n    const cityColumns =\r\n      this.props.india.length !== 0\r\n        ? [\r\n            {\r\n              Header: \"District\",\r\n              accessor: \"city\",\r\n            },\r\n            {\r\n              Header: \"Confirmed\",\r\n              accessor: \"confirmed\",\r\n              Cell: (props) => {\r\n                return (\r\n                  <>\r\n                    {props.original.deltaConfirmed === 0 ? null : (\r\n                      <span\r\n                        style={{\r\n                          fontSize: 15,\r\n                          fontWeight: \"bold\",\r\n                          color: \"#e43339\",\r\n                        }}\r\n                      >\r\n                        <span style={{ fontSize: 15, fontWeight: \"bold\" }}>\r\n                          &#9650;\r\n                        </span>\r\n                        {props.original.deltaConfirmed}\r\n                      </span>\r\n                    )}{\" \"}\r\n                    <span className=\"number\">{props.value}</span>\r\n                  </>\r\n                );\r\n              },\r\n            },\r\n            {\r\n              Header: \"Active\",\r\n              accessor: \"active\",\r\n              Cell: (props) => {\r\n                return (\r\n                  <>\r\n                    <span className=\"number\">{props.value}</span>\r\n                  </>\r\n                );\r\n              },\r\n            },\r\n            {\r\n              Header: \"Recovered\",\r\n              accessor: \"recovered\",\r\n              Cell: (props) => {\r\n                return (\r\n                  <>\r\n                    {props.original.deltaRecovered === 0 ? null : (\r\n                      <span\r\n                        style={{\r\n                          fontSize: 15,\r\n                          fontWeight: \"bold\",\r\n                          color: \"#006266\",\r\n                        }}\r\n                      >\r\n                        <span style={{ fontSize: 15, fontWeight: \"bold\" }}>\r\n                          &#9650;\r\n                        </span>\r\n                        {props.original.deltaRecovered}\r\n                      </span>\r\n                    )}{\" \"}\r\n                    <span className=\"number\">{props.value}</span>\r\n                  </>\r\n                );\r\n              },\r\n            },\r\n            {\r\n              Header: \"Deaths\",\r\n              accessor: \"deceased\",\r\n              Cell: (props) => {\r\n                return (\r\n                  <>\r\n                    {props.original.deltaDeceased === 0 ? null : (\r\n                      <span\r\n                        style={{\r\n                          fontSize: 15,\r\n                          fontWeight: \"bold\",\r\n                          color: \"#535c68\",\r\n                        }}\r\n                      >\r\n                        <span style={{ fontSize: 15, fontWeight: \"bold\" }}>\r\n                          &#9650;\r\n                        </span>\r\n                        {props.original.deltaDeceased}\r\n                      </span>\r\n                    )}{\" \"}\r\n                    <span className=\"number\">{props.value}</span>\r\n                  </>\r\n                );\r\n              },\r\n            },\r\n          ]\r\n        : [];\r\n    return (\r\n      <div className=\"row\" style={{ marginTop: 15 }}>\r\n        <div className=\"col-sm-12\">\r\n          <div\r\n            style={{\r\n              background: \"white\",\r\n              color: \"#404b69\",\r\n              borderRadius: 10,\r\n            }}\r\n          >\r\n            <ReactTable\r\n              data={data}\r\n              columns={columns}\r\n              defaultPageSize={10}\r\n              className=\"-striped -highlight\"\r\n              noDataText={<b>No data found</b>}\r\n              getTheadProps={(state, rowInfo, column) => {\r\n                return {\r\n                  style: {\r\n                    fontWeight: \"bold\",\r\n                  },\r\n                };\r\n              }}\r\n              getTdProps={(state, rowInfo, column, instance) => {\r\n                return {\r\n                  onClick: (e, handleOriginal) => {\r\n                    if (handleOriginal) {\r\n                      handleOriginal();\r\n                    }\r\n                  },\r\n                };\r\n              }}\r\n              filterable\r\n              SubComponent={(row) => {\r\n                return row.original.confirmed === 0 ? null : (\r\n                  <div style={{ padding: \"20px\" }}>\r\n                    <div style={{ borderRadius: 10 }}>\r\n                      <ReactTable\r\n                        data={\r\n                          Object.values(\r\n                            cityData.filter(\r\n                              (state) =>\r\n                                Object.keys(state)[0] === row.original.state\r\n                            )[0]\r\n                          )[0]\r\n                        }\r\n                        columns={cityColumns}\r\n                        defaultPageSize={5}\r\n                        showPagination={true}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                );\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Table;\r\n","import React from \"react\";\r\nimport {\r\n  LineChart,\r\n  BarChart,\r\n  AreaChart,\r\n  Area,\r\n  Line,\r\n  Bar,\r\n  XAxis,\r\n  YAxis,\r\n  Tooltip,\r\n  Legend,\r\n  ResponsiveContainer,\r\n  CartesianGrid,\r\n} from \"recharts\";\r\nimport \"./SimpleLineChart.css\";\r\n\r\nconst SimpleLineChart = (props) => {\r\n  const data =\r\n    props.data === undefined\r\n      ? [\r\n          { name: \"Jan\", uv: 4000, pv: 2400, amt: 2400 },\r\n          { name: \"Feb\", uv: 3000, pv: 1398, amt: 2210 },\r\n          { name: \"March\", uv: 2000, pv: 9800, amt: 2290 },\r\n          { name: \"April\", uv: 2780, pv: 3908, amt: 2000 },\r\n          { name: \"May\", uv: 1890, pv: 4800, amt: 2181 },\r\n          { name: \"June\", uv: 2390, pv: 3800, amt: 2500 },\r\n          { name: \"July\", uv: 3490, pv: 4300, amt: 2100 },\r\n        ]\r\n      : props.data;\r\n\r\n  const CustomTooltip = ({ active, payload, label }) => {\r\n    if (active) {\r\n      return (\r\n        <div\r\n          className=\"custom-tooltip\"\r\n          style={{ background: \"white\", padding: 15, borderRadius: 10 }}\r\n        >\r\n          <p\r\n            style={{\r\n              textAlign: \"center\",\r\n              fontWeight: \"bold\",\r\n              color: \"#404b69\",\r\n            }}\r\n          >\r\n            {label}\r\n          </p>\r\n          {typeof payload !== \"undefined\" &&\r\n            payload !== null &&\r\n            payload.map((item, index) => {\r\n              return (\r\n                <div key={index}>\r\n                  <span style={{ color: item.color, fontWeight: \"bold\" }}>\r\n                    {item.name}:{\" \"}\r\n                  </span>\r\n                  <span style={{ color: item.color, fontWeight: \"bold\" }}>\r\n                    {item.value}\r\n                    {typeof props.data.filter(\r\n                      (data) => data?.name === item.payload.name\r\n                    )[0][`daily${item.name}`] === \"undefined\"\r\n                      ? null\r\n                      : \" [+\"}\r\n                    {\r\n                      props.data.filter(\r\n                        (data) => data?.name === item.payload.name\r\n                      )[0][`daily${item.name}`]\r\n                    }\r\n                    {/* {props.data[payload.payload.name][`daily${payload.name}`]} */}\r\n                    {typeof props.data.filter(\r\n                      (data) => data?.name === item.payload.name\r\n                    )[0][`daily${item.name}`] === \"undefined\"\r\n                      ? null\r\n                      : \"]\"}\r\n                  </span>\r\n                  <br />\r\n                </div>\r\n              );\r\n            })}\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return null;\r\n  };\r\n\r\n  let ChartName = (chart) => {\r\n    switch (chart) {\r\n      case \"LineChart\":\r\n        return LineChart;\r\n      case \"BarChart\":\r\n        return BarChart;\r\n      case \"AreaChart\":\r\n        return AreaChart;\r\n      default:\r\n        return LineChart;\r\n    }\r\n  };\r\n\r\n  let selectChart = (chart) => {\r\n    switch (chart) {\r\n      case \"LineChart\":\r\n        return Line;\r\n      case \"BarChart\":\r\n        return Bar;\r\n      case \"AreaChart\":\r\n        return Area;\r\n      default:\r\n        return Line;\r\n    }\r\n  };\r\n\r\n  let Chart = selectChart(props.chart);\r\n  let Type = ChartName(props.chart);\r\n  return (\r\n    <div\r\n      className=\"container-Linechart\"\r\n      style={props.height ? { height: props.height } : { height: 270 }}\r\n    >\r\n      <ResponsiveContainer>\r\n        <Type\r\n          layout={props.layout ? props.layout : \"horizontal\"}\r\n          width={500}\r\n          height={100}\r\n          data={data}\r\n          margin={\r\n            props.layout && props.layout === \"vertical\"\r\n              ? {\r\n                  left: 20,\r\n                }\r\n              : {}\r\n          }\r\n        >\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          {props.layout && props.layout === \"vertical\" ? (\r\n            <XAxis type=\"number\" />\r\n          ) : (\r\n            <XAxis hide={false} dataKey={props.axis ? props.axis : \"name\"} />\r\n          )}\r\n          {props.layout && props.layout === \"vertical\" ? (\r\n            <YAxis\r\n              type=\"category\"\r\n              hide={false}\r\n              dataKey={props.axis ? props.axis : \"name\"}\r\n            />\r\n          ) : (\r\n            <YAxis />\r\n          )}\r\n          {props.customTooltip ? (\r\n            <Tooltip content={<CustomTooltip />} />\r\n          ) : (\r\n            <Tooltip />\r\n          )}\r\n          {typeof props.legend === \"undefined\" || props.legend === true ? (\r\n            <Legend\r\n              layout={props.legendLayout ? props.legendLayout : \"horizontal\"}\r\n              margin={{ top: 0, left: 0, right: 0, bottom: 10 }}\r\n              verticalAlign={\r\n                props.verticalAlign ? props.verticalAlign : \"bottom\"\r\n              }\r\n            />\r\n          ) : null}\r\n          {props.labels.map((label, index) =>\r\n            props.chart === \"BarChart\" ? (\r\n              <Chart\r\n                key={index}\r\n                stackId={\"a\"}\r\n                type=\"monotone\"\r\n                dataKey={label}\r\n                stroke={props.colors[index]}\r\n                fill={props.colors[index]}\r\n              />\r\n            ) : (\r\n              <Chart\r\n                key={index}\r\n                stackId={\"a\"}\r\n                type=\"monotone\"\r\n                dataKey={label}\r\n                stroke={props.colors[index]}\r\n                activeDot={{ r: 8 }}\r\n                fill={props.colors[index]}\r\n                dot={false}\r\n              />\r\n            )\r\n          )}\r\n        </Type>\r\n      </ResponsiveContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SimpleLineChart;\r\n","import React from \"react\";\r\nimport \"./SwitchBar.css\";\r\n\r\nconst SwitchBar = (props) => {\r\n  return (\r\n    <div className=\"SwitchBar\">\r\n      {props.options.map((option, index) => {\r\n        return (\r\n          <div\r\n            key={index}\r\n            className={\r\n              props.showGlobalChartType === props.optionValues[index]\r\n                ? \"switch-active\"\r\n                : \"switch\"\r\n            }\r\n            style={\r\n              index === 0\r\n                ? {\r\n                    borderTopLeftRadius: 10,\r\n                    borderBottomLeftRadius: 10,\r\n                  }\r\n                : index === props.options.length - 1\r\n                ? {\r\n                    borderTopRightRadius: 10,\r\n                    borderBottomRightRadius: 10,\r\n                  }\r\n                : {}\r\n            }\r\n            onClick={() => props.onClick(props.optionValues[index])}\r\n          >\r\n            {option}\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SwitchBar;\r\n","export default __webpack_public_path__ + \"static/media/virus.172bee86.gif\";","import React, { Component } from \"react\";\r\nimport SimpleLineChart from \"../../../charts/SimpleLineChart/SimpleLineChart\";\r\nimport SwitchBar from \"../../../ui/SwitchBar/SwitchBar\";\r\nimport Virus from \"../../../../assets/virus.gif\";\r\n\r\nclass Cards extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      changeChart: \"Confirmed\",\r\n    };\r\n  }\r\n\r\n  render() {\r\n    let colors = {\r\n      Confirmed: \"#e43339\",\r\n      Recovered: \"#006266\",\r\n      Deaths: \"#535c68\",\r\n    };\r\n\r\n    let dailyConfirmedStatus = this.props.dailyStatus.filter(\r\n      (data) => data.status === \"Confirmed\"\r\n    );\r\n    let dailyRecoveredStatus = this.props.dailyStatus.filter(\r\n      (data) => data.status === \"Recovered\"\r\n    );\r\n    let dailyDeathsStatus = this.props.dailyStatus.filter(\r\n      (data) => data.status === \"Deceased\"\r\n    );\r\n\r\n    let count = (code, data, index) => {\r\n      let confirmed = 0;\r\n      for (var i = 0; i <= index; i++) {\r\n        confirmed += Number(data[i][code]);\r\n      }\r\n      return confirmed;\r\n    };\r\n\r\n    return (\r\n      <div className=\"row india-state-card\">\r\n        {this.props.locationLoader === true ? (\r\n          <div>\r\n            <img src={Virus} alt=\"Loader\" />\r\n          </div>\r\n        ) : this.props.india.length !== 0 ? (\r\n          this.props.india.statewise\r\n            .filter((location) =>\r\n              location.state\r\n                .toLowerCase()\r\n                .includes(this.props.searchString.toLowerCase())\r\n            )\r\n            .map((location, index) => {\r\n              let f = dailyConfirmedStatus.map((data1, index) => {\r\n                return {\r\n                  name: data1[\"date\"],\r\n                  Confirmed: count(\r\n                    location.statecode.toLowerCase(),\r\n                    dailyConfirmedStatus,\r\n                    index\r\n                  ),\r\n                  Recovered: count(\r\n                    location.statecode.toLowerCase(),\r\n                    dailyRecoveredStatus,\r\n                    index\r\n                  ),\r\n                  Deaths: count(\r\n                    location.statecode.toLowerCase(),\r\n                    dailyDeathsStatus,\r\n                    index\r\n                  ),\r\n                };\r\n              });\r\n\r\n              return location.state !== \"Total\" ? (\r\n                <div key={index} className=\"col-sm-4\" style={{ padding: 15 }}>\r\n                  <div className=\"state-card\">\r\n                    <label className=\"state-card-label\">{location.state}</label>\r\n                    <br />\r\n                    <div\r\n                      className=\"row justify-content-center\"\r\n                      style={{ paddingTop: 15, paddingBottom: 15 }}\r\n                    >\r\n                      <div className=\"state-card-style\">\r\n                        <div>{location.confirmed}</div>\r\n                        <div\r\n                          className=\"state-card-info\"\r\n                          style={{\r\n                            color: \"#e43339\",\r\n                          }}\r\n                        >\r\n                          <span style={{ fontSize: 15, fontWeight: \"bold\" }}>\r\n                            &#9650;\r\n                          </span>\r\n                          {location.deltaconfirmed}\r\n                        </div>\r\n                        <div>Confirmed</div>\r\n                      </div>\r\n                      <div className=\"state-card-style\">\r\n                        <div style={{ marginBottom: 22 }}>\r\n                          {location.active}\r\n                        </div>\r\n                        <div>Active</div>\r\n                      </div>\r\n                      <div className=\"state-card-style\">\r\n                        <div>{location.recovered}</div>\r\n                        <div\r\n                          className=\"state-card-info\"\r\n                          style={{\r\n                            color: \"#006266\",\r\n                          }}\r\n                        >\r\n                          <span style={{ fontSize: 15, fontWeight: \"bold\" }}>\r\n                            &#9650;\r\n                          </span>\r\n                          {location.deltarecovered}\r\n                        </div>\r\n\r\n                        <div>Recovered</div>\r\n                      </div>\r\n                      <div className=\"state-card-style\">\r\n                        <div>{location.deaths}</div>\r\n                        <div\r\n                          className=\"state-card-info\"\r\n                          style={{\r\n                            color: \"#535c68\",\r\n                          }}\r\n                        >\r\n                          <span style={{ fontSize: 15, fontWeight: \"bold\" }}>\r\n                            &#9650;\r\n                          </span>\r\n                          {location.deltadeaths}\r\n                        </div>\r\n                        <div>Deaths</div>\r\n                      </div>\r\n                    </div>\r\n                    <div>\r\n                      <SwitchBar\r\n                        options={[\"Conf.\", \"Recv.\", \"Deaths\"]}\r\n                        optionValues={[\"Confirmed\", \"Recovered\", \"Deaths\"]}\r\n                        onClick={(prop) => {\r\n                          this.setState({\r\n                            changeChart: prop,\r\n                          });\r\n                        }}\r\n                        showGlobalChartType={this.state.changeChart}\r\n                      />\r\n                      <SimpleLineChart\r\n                        chart={\"AreaChart\"}\r\n                        customTooltip={true}\r\n                        grid={false}\r\n                        data={f}\r\n                        labels={[this.state.changeChart]}\r\n                        colors={[colors[this.state.changeChart]]}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ) : null;\r\n            })\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Cards;\r\n","export default __webpack_public_path__ + \"static/media/github1.237e2214.png\";","export default __webpack_public_path__ + \"static/media/india.7c92a5aa.png\";","export default __webpack_public_path__ + \"static/media/world.58d22508.png\";","import React from \"react\";\r\nimport Github from \"../../../assets/github1.png\";\r\nimport IndiaIcon from \"../../../assets/india.png\";\r\nimport World from \"../../../assets/world.png\";\r\nimport \"./Header.css\";\r\n\r\nconst Header = (props) => {\r\n  return (\r\n    <div>\r\n      <div className=\"Header\">\r\n        Covid-19 {props.dashboard} {props.width < 1024 ? \"\" : \" Dashboard\"}\r\n        <a\r\n          href=\"https://github.com/Bala534/Covid19-Dashboard\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          <img src={Github} alt=\"github\" className=\"github-icon\" />\r\n        </a>\r\n      </div>\r\n      <div className=\"Switch-dashboard\">\r\n        <img\r\n          onClick={() => props.history.push(\"/india\")}\r\n          src={IndiaIcon}\r\n          alt=\"India\"\r\n          className=\"india-icon\"\r\n        />\r\n        <span style={{ fontWeight: \"bold\" }}>Switch</span>\r\n        <img\r\n          onClick={() => props.history.push(\"/\")}\r\n          src={World}\r\n          alt=\"World\"\r\n          className=\"global-icon\"\r\n        />\r\n        \r\n\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport \"./GradientCardTitle.css\";\r\n\r\nconst GradientCardTitle = (props) => {\r\n  return (\r\n    <div style={props.style ? props.style : {}} className=\"GradientCardTitle\">\r\n      {props.title}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GradientCardTitle;\r\n","import React, { PureComponent } from \"react\";\r\nimport {\r\n  LineChart,\r\n  Line,\r\n} from \"recharts\";\r\n\r\nexport default class TinyChart extends PureComponent {\r\n  state = { width: 0, height: 0 };\r\n\r\n  updateDimensions = () => {\r\n    this.setState({ width: window.innerWidth, height: window.innerHeight });\r\n  };\r\n  componentDidMount() {\r\n    window.addEventListener(\"resize\", this.updateDimensions);\r\n  }\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"resize\", this.updateDimensions);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <LineChart\r\n        width={this.state.width < 1439 ? 100 : 250}\r\n        height={this.state.width < 250 ? 30 : 50}\r\n        data={this.props.data}\r\n      >\r\n        <Line\r\n          type=\"monotone\"\r\n          dataKey={this.props.label}\r\n          stroke={this.props.color}\r\n          strokeWidth={2}\r\n          dot={false}\r\n        />\r\n      </LineChart>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport TinyChart from \"../../../charts/TinyChart\";\r\nimport Popover from \"react-popover\";\r\nimport ReactGA from \"react-ga\";\r\n\r\nclass NumbersCard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    let confirmedTinyChartData =\r\n      this.props.india.length !== 0\r\n        ? this.props.india.cases_time_series.map((cases) => {\r\n            return cases.totalconfirmed !== \"\"\r\n              ? {\r\n                  name: cases.date,\r\n                  confirmed: Number(cases.totalconfirmed),\r\n                }\r\n              : null;\r\n          })\r\n        : null;\r\n\r\n    let activeTinyChartData =\r\n      this.props.india.length !== 0\r\n        ? this.props.india.cases_time_series.map((cases) => {\r\n            return cases.totalconfirmed !== \"\"\r\n              ? {\r\n                  name: cases.date,\r\n                  confirmed:\r\n                    Number(cases.totalconfirmed) -\r\n                    Number(cases.totaldeceased) -\r\n                    Number(cases.totalrecovered),\r\n                }\r\n              : null;\r\n          })\r\n        : null;\r\n    let deathTinyChartData =\r\n      this.props.india.length !== 0\r\n        ? this.props.india.cases_time_series.map((cases) => {\r\n            return cases.totaldeceased !== \"\"\r\n              ? {\r\n                  name: cases.date,\r\n                  confirmed: Number(cases.totaldeceased),\r\n                }\r\n              : null;\r\n          })\r\n        : null;\r\n    let recoveredTinyChartData =\r\n      this.props.india.length !== 0\r\n        ? this.props.india.cases_time_series.map((cases) => {\r\n            return cases.totalrecovered !== \"\"\r\n              ? {\r\n                  name: cases.date,\r\n                  confirmed: Number(cases.totalrecovered),\r\n                }\r\n              : null;\r\n          })\r\n        : null;\r\n\r\n    const totalConformedToday =\r\n      this.props.india.length !== 0\r\n        ? this.props.india.statewise.filter(\r\n            (record) => record.state === \"Total\"\r\n          )[0].deltaconfirmed\r\n        : 0;\r\n\r\n    const totalRecoveredToday =\r\n      this.props.india.length !== 0\r\n        ? this.props.india.statewise.filter(\r\n            (record) => record.state === \"Total\"\r\n          )[0].deltarecovered\r\n        : 0;\r\n\r\n    const totalDeathsToday =\r\n      this.props.india.length !== 0\r\n        ? this.props.india.statewise.filter(\r\n            (record) => record.state === \"Total\"\r\n          )[0].deltadeaths\r\n        : 0;\r\n\r\n    const confirmedPopover =\r\n      this.props.india.length !== 0\r\n        ? this.props.india.statewise\r\n            .filter((record) => record.state !== \"Total\")\r\n            .filter((state) => Number(state.deltaconfirmed) !== 0)\r\n            .map((state) => {\r\n              return { [state.state]: state.deltaconfirmed };\r\n            })\r\n        : [];\r\n\r\n    const recoveredPopover =\r\n      this.props.india.length !== 0\r\n        ? this.props.india.statewise\r\n            .filter((record) => record.state !== \"Total\")\r\n            .filter((state) => Number(state.deltarecovered) !== 0)\r\n            .map((state) => {\r\n              return { [state.state]: Number(state.deltarecovered) };\r\n            })\r\n        : [];\r\n    const deathsPopover =\r\n      this.props.india.length !== 0\r\n        ? this.props.india.statewise\r\n            .filter((record) => record.state !== \"Total\")\r\n            .filter((state) => Number(state.deltadeaths) !== 0)\r\n            .map((state) => {\r\n              return { [state.state]: Number(state.deltadeaths) };\r\n            })\r\n        : [];\r\n\r\n    return (\r\n      <div\r\n        className=\"row numeric-card\"\r\n        style={{ padding: \"50px 0px 30px 0px\" }}\r\n      >\r\n        <div className=\"col-sm-3 col-6\" style={{ padding: 15 }}>\r\n          <div\r\n            className=\"numeric-card-body\"\r\n            style={{\r\n              background: \"#448AFF\",\r\n            }}\r\n          >\r\n            <div style={{ fontSize: 30 }}>\r\n              {this.props.india.length !== 0\r\n                ? this.props.india.statewise.filter(\r\n                    (record) => record.state === \"Total\"\r\n                  )[0].confirmed\r\n                : 0}\r\n            </div>\r\n            <div className=\"numeric-card-info-icon\">\r\n              <span style={{ fontSize: 17, fontWeight: \"bold\" }}>&#9650;</span>\r\n              {this.props.india.length !== 0\r\n                ? typeof this.props.india.statewise.filter(\r\n                    (record) => record.state === \"Total\"\r\n                  )[0].deltaconfirmed !== \"undefined\" &&\r\n                  this.props.india.statewise.filter(\r\n                    (record) => record.state === \"Total\"\r\n                  )[0].deltaconfirmed !== null\r\n                  ? this.props.india.statewise.filter(\r\n                      (record) => record.state === \"Total\"\r\n                    )[0].deltaconfirmed\r\n                  : 0\r\n                : 0}\r\n              {Number(totalConformedToday) !== 0 ? (\r\n                <Popover\r\n                  body={\r\n                    <div\r\n                      style={{\r\n                        maxHeight: 400,\r\n                        overflowY: \"scroll\",\r\n                        borderRight: 10,\r\n                        background: \"white\",\r\n                        borderRadius: 10,\r\n                        padding: 15,\r\n                        color: \"#192a56\",\r\n                        fontWeight: \"bold\",\r\n                      }}\r\n                    >\r\n                      {confirmedPopover.map((state, index) => {\r\n                        return (\r\n                          <div key={index}>\r\n                            {Object.keys(state)[0]}: {Object.values(state)[0]}\r\n                          </div>\r\n                        );\r\n                      })}\r\n                    </div>\r\n                  }\r\n                  preferPlace={\"below\"}\r\n                  isOpen={this.state.confirmedOpen}\r\n                  onOuterAction={() =>\r\n                    this.setState({\r\n                      confirmedOpen: !this.state.confirmedOpen,\r\n                    })\r\n                  }\r\n                >\r\n                  <div\r\n                    onClick={() => {\r\n                      ReactGA.event({\r\n                        category: \"India Info\",\r\n                        action: \"Confirmed Info Clicked\",\r\n                        label: \"Confirm Info\",\r\n                      });\r\n                      this.setState({\r\n                        confirmedOpen: !this.state.confirmedOpen,\r\n                      });\r\n                    }}\r\n                    className=\"report-tile\"\r\n                    style={{ marginLeft: 5, cursor: \"pointer\" }}\r\n                  >\r\n                    ?\r\n                  </div>\r\n                </Popover>\r\n              ) : null}\r\n            </div>\r\n            <div style={{ fontSize: 18 }}>Confirmed</div>\r\n            {this.props.india.length !== 0 ? (\r\n              <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                <TinyChart\r\n                  data={confirmedTinyChartData}\r\n                  label=\"confirmed\"\r\n                  color=\"#ffffff\"\r\n                />\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n        <div className=\"col-sm-3 col-6\" style={{ padding: 15 }}>\r\n          <div\r\n            className=\"numeric-card-body\"\r\n            style={{\r\n              background: \"#F9A825\",\r\n            }}\r\n          >\r\n            <div style={{ fontSize: 30, marginBottom: 35 }}>\r\n              {this.props.india.length !== 0\r\n                ? this.props.india.statewise.filter(\r\n                    (record) => record.state === \"Total\"\r\n                  )[0].active\r\n                : 0}\r\n            </div>\r\n\r\n            <div style={{ fontSize: 18 }}>Active</div>\r\n            {this.props.india.length !== 0 ? (\r\n              <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                <TinyChart\r\n                  data={activeTinyChartData}\r\n                  label=\"confirmed\"\r\n                  color=\"#ffffff\"\r\n                />\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n        <div className=\"col-sm-3 col-6\" style={{ padding: 15 }}>\r\n          <div\r\n            className=\"numeric-card-body\"\r\n            style={{\r\n              background: \"#4CAF50\",\r\n            }}\r\n          >\r\n            <div style={{ fontSize: 30 }}>\r\n              {this.props.india.length !== 0\r\n                ? this.props.india.statewise.filter(\r\n                    (record) => record.state === \"Total\"\r\n                  )[0].recovered\r\n                : 0}\r\n            </div>\r\n            <div className=\"numeric-card-info-icon\">\r\n              <span style={{ fontSize: 17, fontWeight: \"bold\" }}>&#9650;</span>\r\n              {this.props.india.length !== 0\r\n                ? typeof this.props.india.statewise.filter(\r\n                    (record) => record.state === \"Total\"\r\n                  )[0].deltarecovered !== \"undefined\" &&\r\n                  this.props.india.statewise.filter(\r\n                    (record) => record.state === \"Total\"\r\n                  )[0].deltarecovered !== null\r\n                  ? this.props.india.statewise.filter(\r\n                      (record) => record.state === \"Total\"\r\n                    )[0].deltarecovered\r\n                  : 0\r\n                : 0}\r\n              {Number(totalRecoveredToday) !== 0 ? (\r\n                <Popover\r\n                  body={\r\n                    <div\r\n                      style={{\r\n                        background: \"white\",\r\n                        borderRadius: 10,\r\n                        padding: 15,\r\n                        color: \"#192a56\",\r\n                        fontWeight: \"bold\",\r\n                      }}\r\n                    >\r\n                      {recoveredPopover.map((state, index) => {\r\n                        return (\r\n                          <div key={index}>\r\n                            {Object.keys(state)[0]}: {Object.values(state)[0]}\r\n                          </div>\r\n                        );\r\n                      })}\r\n                    </div>\r\n                  }\r\n                  preferPlace={\"below\"}\r\n                  isOpen={this.state.activeOpen}\r\n                  onOuterAction={() =>\r\n                    this.setState({\r\n                      activeOpen: !this.state.activeOpen,\r\n                    })\r\n                  }\r\n                >\r\n                  <div\r\n                    onClick={() => {\r\n                      ReactGA.event({\r\n                        category: \"India Info\",\r\n                        action: \"Active Info Clicked\",\r\n                        label: \"Active Info\",\r\n                      });\r\n                      this.setState({\r\n                        activeOpen: !this.state.activeOpen,\r\n                      });\r\n                    }}\r\n                    className=\"report-tile\"\r\n                    style={{ marginLeft: 5, cursor: \"pointer\" }}\r\n                  >\r\n                    ?\r\n                  </div>\r\n                </Popover>\r\n              ) : null}\r\n            </div>\r\n            <div style={{ fontSize: 18 }}>Recovered</div>\r\n            {this.props.india.length !== 0 ? (\r\n              <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                <TinyChart\r\n                  data={recoveredTinyChartData}\r\n                  label=\"confirmed\"\r\n                  color=\"#ffffff\"\r\n                />\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n        <div className=\"col-sm-3 col-6\" style={{ padding: 15 }}>\r\n          <div\r\n            className=\"numeric-card-body\"\r\n            style={{\r\n              background: \"#FF5252\",\r\n            }}\r\n          >\r\n            <div style={{ fontSize: 30 }}>\r\n              {this.props.india.length !== 0\r\n                ? this.props.india.statewise.filter(\r\n                    (record) => record.state === \"Total\"\r\n                  )[0].deaths\r\n                : 0}\r\n            </div>\r\n            <div className=\"numeric-card-info-icon\">\r\n              <span style={{ fontSize: 17, fontWeight: \"bold\" }}>&#9650;</span>\r\n              {this.props.india.length !== 0\r\n                ? typeof this.props.india.statewise.filter(\r\n                    (record) => record.state === \"Total\"\r\n                  )[0].deltadeaths !== \"undefined\" &&\r\n                  this.props.india.statewise.filter(\r\n                    (record) => record.state === \"Total\"\r\n                  )[0].deltadeaths !== null\r\n                  ? this.props.india.statewise.filter(\r\n                      (record) => record.state === \"Total\"\r\n                    )[0].deltadeaths\r\n                  : 0\r\n                : 0}\r\n              {Number(totalDeathsToday) !== 0 ? (\r\n                <Popover\r\n                  body={\r\n                    <div\r\n                      style={{\r\n                        background: \"white\",\r\n                        borderRadius: 10,\r\n                        padding: 15,\r\n                        color: \"#192a56\",\r\n                        fontWeight: \"bold\",\r\n                      }}\r\n                    >\r\n                      {deathsPopover.map((state, index) => {\r\n                        return (\r\n                          <div key={index}>\r\n                            {Object.keys(state)[0]}: {Object.values(state)[0]}\r\n                          </div>\r\n                        );\r\n                      })}\r\n                    </div>\r\n                  }\r\n                  preferPlace={\"below\"}\r\n                  isOpen={this.state.deathsOpen}\r\n                  onOuterAction={() =>\r\n                    this.setState({\r\n                      deathsOpen: !this.state.deathsOpen,\r\n                    })\r\n                  }\r\n                >\r\n                  <div\r\n                    onClick={() => {\r\n                      ReactGA.event({\r\n                        category: \"India Info\",\r\n                        action: \"Deaths Info Clicked\",\r\n                        label: \"Deaths Info\",\r\n                      });\r\n                      this.setState({\r\n                        deathsOpen: !this.state.deathsOpen,\r\n                      });\r\n                    }}\r\n                    className=\"report-tile\"\r\n                    style={{ marginLeft: 5, cursor: \"pointer\" }}\r\n                  >\r\n                    ?\r\n                  </div>\r\n                </Popover>\r\n              ) : null}\r\n            </div>\r\n            <div style={{ fontSize: 18 }}>Deaths</div>\r\n            {this.props.india.length !== 0 ? (\r\n              <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                <TinyChart\r\n                  data={deathTinyChartData}\r\n                  label=\"confirmed\"\r\n                  color=\"#ffffff\"\r\n                />\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NumbersCard;\r\n","import React from \"react\";\r\nimport ReactGA from \"react-ga\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport windowSize from \"react-window-size\";\r\n\r\nimport \"./NavigationBar.css\";\r\n\r\nconst NavigationBar = (props) => {\r\n  const icons = {\r\n    Analytics: \"chart-area\",\r\n    Card: \"tablet-alt\",\r\n    Map: \"globe\",\r\n    Table: \"table\",\r\n    Chart: \"chart-bar\",\r\n  };\r\n  let uiClass = \"nav-item nav-link\";\r\n\r\n  return props.windowWidth > 900 ? (\r\n    <nav>\r\n      <div className=\"nav nav-tabs nav-fill\">\r\n        {props.options.map((option, index) => {\r\n          return (\r\n            <label\r\n              key={index}\r\n              className={\r\n                props.ui === props.optionRoutes[index]\r\n                  ? uiClass + \" active\"\r\n                  : uiClass\r\n              }\r\n              onClick={() => {\r\n                props.onClick(props.optionRoutes[index]);\r\n                ReactGA.event({\r\n                  category: props.type,\r\n                  action: option + \" selected\",\r\n                  label: props.type + \" \" + option,\r\n                });\r\n              }}\r\n            >\r\n              <FontAwesomeIcon\r\n                icon={[\"fas\", icons[option]]}\r\n                className=\"navbar-icon\"\r\n              />\r\n              {option}\r\n            </label>\r\n          );\r\n        })}\r\n      </div>\r\n    </nav>\r\n  ) : (\r\n    <nav>\r\n      <div className=\"nav nav-tabs nav-fill\">\r\n        {props.options.map((option, index) => {\r\n          return (\r\n            <label\r\n              key={index}\r\n              className={\r\n                props.ui === props.optionRoutes[index]\r\n                  ? uiClass + \" active\"\r\n                  : uiClass\r\n              }\r\n              onClick={() => {\r\n                props.onClick(props.optionRoutes[index]);\r\n                ReactGA.event({\r\n                  category: props.type,\r\n                  action: option + \" selected\",\r\n                  label: props.type + \" \" + option,\r\n                });\r\n              }}\r\n            >\r\n              <FontAwesomeIcon\r\n                icon={[\"fas\", icons[option]]}\r\n                className=\"navbar-icon\"\r\n              />\r\n            </label>\r\n          );\r\n        })}\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default windowSize(NavigationBar);\r\n","import * as React from \"react\";\r\nimport { Chart } from \"react-google-charts\";\r\nimport \"./CustomChart.css\";\r\n\r\nconst CustomChart = (props) => {\r\n  const chartEvents = [\r\n    {\r\n      eventName: \"select\",\r\n      callback({ chartWrapper }) {\r\n        if (props.chartType === \"TreeMap\") {\r\n          let selectedItem = chartWrapper.getChart().getSelection()[0];\r\n          props.onPlotClick(props.rows[selectedItem.row]);\r\n          chartWrapper.getChart().setSelection([]);\r\n        } else {\r\n          var selectedItem = chartWrapper.getChart().getSelection()[0];\r\n          if (selectedItem) {\r\n            props.onPlotClick(props.rows[Object.values(selectedItem)[0]][0]);\r\n          }\r\n        }\r\n      },\r\n    },\r\n  ];\r\n  return (\r\n    <Chart\r\n      className=\"custom-charts\"\r\n      height={props.height ? props.height : \"300px\"}\r\n      width={props.width ? props.width : \"auto\"}\r\n      chartType={props.chartType ? props.chartType : \"Bar\"}\r\n      rows={props.rows}\r\n      columns={props.columns}\r\n      options={{\r\n        sliceVisibilityThreshold: 0,\r\n        headerHeight: 0,\r\n        backgroundColor: \"transparent\",\r\n        colors: [\r\n          \"#3c3568\",\r\n          \"#f6ba62\",\r\n          \"#bc443b\",\r\n          \"#185e4b\",\r\n          \"#150a47\",\r\n          \"#334553\",\r\n          \"#d82f5a\",\r\n          \"#000133\",\r\n          \"#11887b\",\r\n          \"#044a05\",\r\n          \"#004953\",\r\n          \"#062e03\",\r\n          \"#7f4330\",\r\n          \"#420303\",\r\n          \"#980036\",\r\n          \"#9c004a\",\r\n          \"#490648\",\r\n          \"#76424e\",\r\n          \"#36013f\",\r\n          \"#36013f\",\r\n          \"#333333\",\r\n          \"#25342b\",\r\n          \"#171717\",\r\n        ],\r\n        minColor: \"#A7A0B3\",\r\n        midColor: \"#88E3CA\",\r\n        maxColor: \"#E0AEF6\",\r\n        chartArea: props.chartArea\r\n          ? props.chartArea\r\n          : { left: 0, top: 10, right: 0 },\r\n        //height: props.height ? props.height : 300,\r\n\r\n        //width: props.width ? props.width : \"100%\",\r\n        // title: \"Company Performance\",\r\n        isStacked: props.isStacked === true ? true : false,\r\n        legend: props.legend\r\n          ? { position: \"none\" }\r\n          : props.legendPosition\r\n          ? props.legendPosition\r\n          : {\r\n              position: \"right\",\r\n              alignment: \"center\",\r\n            },\r\n        hAxis: props.hAxis\r\n          ? {\r\n              title: \"\",\r\n              textPosition: \"none\",\r\n              textColor: \"#ffffff\",\r\n            }\r\n          : { title: props.title, titleTextStyle: { color: \"#333\" } },\r\n        vAxis: props.vAxis\r\n          ? {\r\n              textPosition: \"none\",\r\n            }\r\n          : { minValue: 0 },\r\n        generateTooltip:\r\n          props.generateTooltip === true\r\n            ? (row, size, value) => {\r\n                return (\r\n                  '<div style=\"background:#fff; padding:5px 10px 5px 10px; border:1px solid grey\"><b>' +\r\n                  props.rows[row][0] +\r\n                  \"</b> : \" +\r\n                  size +\r\n                  \"</div>\"\r\n                );\r\n              }\r\n            : null,\r\n        // For the legend to fit, we make the chart area smaller\r\n        //chartArea: { width: \"50%\", height: \"70%\" }\r\n        // lineWidth: 25\r\n      }}\r\n      // For tests\r\n      rootProps={{ \"data-testid\": \"2\" }}\r\n      chartEvents={props.onplot === true ? chartEvents : null}\r\n    />\r\n  );\r\n};\r\nexport default CustomChart;\r\n","import React from \"react\";\r\nimport \"./GradientCardFooter.css\";\r\n\r\nconst GradientCardFooter = (props) => {\r\n  return <div className=\"GradientCardFooter\">{props.content}</div>;\r\n};\r\n\r\nexport default GradientCardFooter;\r\n","import React from \"react\";\r\nimport { Tooltip, ResponsiveContainer, PieChart, Pie, Cell } from \"recharts\";\r\nimport \"../SimpleLineChart/SimpleLineChart.css\";\r\n\r\nconst COLORS = [\"#192a56\", \"rgb(255, 82, 82)\", \"#404b69\"];\r\n\r\nconst SimplePieChart = (props) => {\r\n  return (\r\n    <div\r\n      className=\"container-Linechart\"\r\n      style={props.height ? { height: props.height } : { height: 270 }}\r\n    >\r\n      <ResponsiveContainer>\r\n        <PieChart>\r\n          <Pie\r\n            dataKey=\"value\"\r\n            data={props.data}\r\n            outerRadius={100}\r\n            fill=\"#8884d8\"\r\n            label={false}\r\n          >\r\n            {props.data.map((entry, index) => (\r\n              <Cell\r\n                key={`cell-${index}`}\r\n                fill={COLORS[index % COLORS.length]}\r\n              />\r\n            ))}\r\n          </Pie>\r\n\r\n          <Tooltip />\r\n        </PieChart>\r\n      </ResponsiveContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SimplePieChart;\r\n","import React, { Component } from \"react\";\r\nimport SwitchBar from \"../../../ui/SwitchBar/SwitchBar\";\r\nimport SimpleLineChart from \"../../../charts/SimpleLineChart/SimpleLineChart\";\r\nimport Select from \"react-select\";\r\nimport CustomChart from \"../../../charts/PieChart/CustomChart\";\r\nimport GradientCardTitle from \"../../../ui/GradientCardTitle/GradientCardTitle\";\r\nimport GradientCardFooter from \"../../../ui/GradientCardFooter/GradientCardFooter\";\r\nimport SimplePieChart from \"../../../charts/SimplePieChart/SimplePieChart\";\r\n\r\nclass Analytics extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { status: false, seconds: 0, started: false };\r\n  }\r\n\r\n  render() {\r\n    let toptenCities = [];\r\n\r\n    if (this.props.stateWiseCity.length !== 0) {\r\n      let data = {};\r\n      Object.values(this.props.stateWiseCity).map((city) => {\r\n        return Object.assign(data, city.districtData);\r\n      });\r\n\r\n      let sorted = Object.keys(data).sort((a, b) => {\r\n        return data[b][\"confirmed\"] - data[a][\"confirmed\"];\r\n      });\r\n      let filtered = sorted\r\n        .filter((data) => data !== \"Unassigned\")\r\n        .slice(0, 10);\r\n\r\n      toptenCities = filtered.map((city) => {\r\n        return { name: city, [\"Cases\"]: data[city].confirmed };\r\n      });\r\n    }\r\n\r\n    let totalDataDaily =\r\n      this.props.india.length !== 0\r\n        ? this.props.india.cases_time_series.map((cases) => {\r\n            return cases.dailyrecovered !== \"\"\r\n              ? {\r\n                  name: cases.date,\r\n                  Confirmed: Number(cases.dailyconfirmed),\r\n                  Active:\r\n                    Number(cases.dailyconfirmed) -\r\n                    Number(cases.dailyrecovered) -\r\n                    Number(cases.dailydeceased),\r\n                  Recovered: Number(cases.dailyrecovered),\r\n                  Deaths: Number(cases.dailydeceased),\r\n                }\r\n              : null;\r\n          })\r\n        : null;\r\n\r\n    let totalData =\r\n      this.props.india.length !== 0\r\n        ? this.props.india.cases_time_series.map((cases) => {\r\n            return cases.totalrecovered !== \"\"\r\n              ? {\r\n                  name: cases.date,\r\n                  Confirmed: Number(cases.totalconfirmed),\r\n                  Active:\r\n                    Number(cases.totalconfirmed) -\r\n                    Number(cases.totalrecovered) -\r\n                    Number(cases.totaldeceased),\r\n                  Recovered: Number(cases.totalrecovered),\r\n                  Deaths: Number(cases.totaldeceased),\r\n                  dailyConfirmed: Number(cases.dailyconfirmed),\r\n                  dailyActive:\r\n                    Number(cases.dailyconfirmed) -\r\n                    Number(cases.dailyrecovered) -\r\n                    Number(cases.dailydeceased),\r\n                  dailyRecovered: Number(cases.dailyrecovered),\r\n                  dailyDeaths: Number(cases.dailydeceased),\r\n                }\r\n              : null;\r\n          })\r\n        : null;\r\n\r\n    var sortable =\r\n      this.props.india.length !== 0 ? this.props.india.statewise : [];\r\n\r\n    const Comparator = (a, b) => {\r\n      if (Number(a[1]) > Number(b[1])) return -1;\r\n      if (Number(a[1]) < Number(b[1])) return 1;\r\n      return 0;\r\n    };\r\n\r\n    var pieChartData =\r\n      this.props.india.length !== 0\r\n        ? sortable\r\n            .filter(\r\n              (record) =>\r\n                record.state !== \"Total\" && record.state !== \"State Unassigned\"\r\n            )\r\n            .map((state) => {\r\n              return [state.state, Number(state[this.props.filterByCases])];\r\n            })\r\n        : [];\r\n\r\n    pieChartData = pieChartData.sort(Comparator).slice(0, 10);\r\n\r\n    let sortedCuntryName = [];\r\n    if (pieChartData.length !== 0) {\r\n      pieChartData.map((data) => {\r\n        sortedCuntryName.push(data[0]);\r\n      });\r\n    }\r\n\r\n    let sortedCountryCode =\r\n      this.props.india.length !== 0\r\n        ? sortable\r\n            .filter(\r\n              (record) =>\r\n                record.state !== \"Total\" &&\r\n                sortedCuntryName.includes(record.state)\r\n            )\r\n            .map((code) => {\r\n              return code.statecode.toLowerCase();\r\n            })\r\n        : [];\r\n\r\n    let sortedCountryName =\r\n      this.props.india.length !== 0\r\n        ? sortable\r\n            .filter(\r\n              (record) =>\r\n                record.state !== \"Total\" &&\r\n                sortedCuntryName.includes(record.state)\r\n            )\r\n            .map((code) => {\r\n              return code.state;\r\n            })\r\n        : [];\r\n\r\n    let dailyConfirmedStatus = this.props.dailyStatus.filter(\r\n      (data) => data.status === \"Confirmed\"\r\n    );\r\n    let dailyRecoveredStatus = this.props.dailyStatus.filter(\r\n      (data) => data.status === \"Recovered\"\r\n    );\r\n    let dailyDeathsStatus = this.props.dailyStatus.filter(\r\n      (data) => data.status === \"Deceased\"\r\n    );\r\n\r\n    let count = (code, data, index) => {\r\n      let confirmed = 0;\r\n      for (var i = 0; i <= index; i++) {\r\n        confirmed += Number(dailyConfirmedStatus[i][code]);\r\n      }\r\n      return confirmed;\r\n    };\r\n\r\n    let dailyConfirmedFiltered = dailyConfirmedStatus.map((data, index) => {\r\n      let arr = [];\r\n\r\n      sortedCountryCode.map((code) => {\r\n        arr.push({\r\n          [code.toUpperCase()]: count(code, dailyConfirmedStatus, index),\r\n        });\r\n      });\r\n      return { [data.date]: arr };\r\n    });\r\n\r\n    let dailyRecoveredFiltered = dailyRecoveredStatus.map((data) => {\r\n      let arr = [];\r\n      sortedCountryCode.map((code) => {\r\n        arr.push({ [code.toUpperCase()]: data[code] });\r\n      });\r\n      return { [data.date]: arr };\r\n    });\r\n\r\n    let dailyDeathsFiltered = dailyDeathsStatus.map((data) => {\r\n      let arr = [];\r\n      sortedCountryCode.map((code) => {\r\n        arr.push({ [code.toUpperCase()]: data[code] });\r\n      });\r\n      return { [data.date]: arr };\r\n    });\r\n\r\n    let multiLineChartData = [];\r\n\r\n    multiLineChartData =\r\n      this.props.dailyStatus.length !== 0\r\n        ? dailyConfirmedFiltered.map((cases, index) => {\r\n            let array = Object.values(cases).map((state) => {\r\n              let subArray = { name: Object.keys(cases)[0] };\r\n              state.map((state, i) => {\r\n                subArray[sortedCountryName[i]] = Object.values(state)[0];\r\n              });\r\n              return subArray;\r\n            });\r\n            return array[0];\r\n          })\r\n        : null;\r\n\r\n    let a =\r\n      this.props.dailyStatus.length !== 0 && this.props.india.length !== 0\r\n        ? this.props.dailyStatus\r\n            .filter((data) => data.status === \"Confirmed\")\r\n            .map((d, index) => {\r\n              let x = {};\r\n              Object.keys(d).map((d1) => {\r\n                x[d1] = count(d1, this.props.dailyStatus, index);\r\n              });\r\n              let ob = Object.fromEntries(\r\n                Object.entries(\r\n                  Object.fromEntries(\r\n                    Object.entries(x).sort((a, b) => b[1] - a[1])\r\n                  )\r\n                ).slice(0, 6)\r\n              );\r\n\r\n              let z = Object.keys(ob)\r\n                .filter((name) => name !== \"tt\")\r\n                .map((name, i) => {\r\n                  return {\r\n                    name: this.props.india.statewise.filter(\r\n                      (state) => state.statecode.toLowerCase() === name\r\n                    )[0].state,\r\n                    [\"Cases\"]: ob[name],\r\n                  };\r\n                });\r\n              return z;\r\n            })\r\n        : [];\r\n\r\n    let Columns = [\r\n      { type: \"string\", label: \"name\" },\r\n      { type: \"number\", label: \"value\" },\r\n    ];\r\n\r\n    const filteredByDailyConfirmed = this.props.dailyStatus.filter(\r\n      (data) => data.status === \"Confirmed\"\r\n    );\r\n\r\n    const colourStyles = {\r\n      control: (styles) => ({\r\n        ...styles,\r\n        backgroundColor: \"white\",\r\n        marginRight: 15,\r\n        marginBottom: 15,\r\n      }),\r\n      option: (styles, { data, isDisabled, isFocused, isSelected }) => {\r\n        return {\r\n          ...styles,\r\n          backgroundColor: isDisabled\r\n            ? null\r\n            : isSelected\r\n            ? \"#404b69\"\r\n            : isFocused\r\n            ? \"#ffffff\"\r\n            : null,\r\n          color: isDisabled ? \"#ccc\" : isSelected ? \"white\" : \"#404b69\",\r\n          cursor: isDisabled ? \"not-allowed\" : \"default\",\r\n\r\n          \":active\": {\r\n            ...styles[\":active\"],\r\n            backgroundColor: !isDisabled && (isSelected ? \"#404b69\" : \"white\"),\r\n          },\r\n        };\r\n      },\r\n    };\r\n    let countries = [];\r\n    let nationalityGroup = [];\r\n\r\n    if (this.props.rawData.length !== 0) {\r\n      this.props.rawData.map((data) => {\r\n        countries.push(data.nationality);\r\n      });\r\n      countries = [...new Set(countries)].map((country) => {\r\n        return { [country]: 0 };\r\n      });\r\n    }\r\n\r\n    let ageGroup = [],\r\n      genderGroup = [];\r\n    let unknown = 0;\r\n    let unknownGender = 0;\r\n    if (this.props.rawData.length !== 0) {\r\n      let range1 = 0,\r\n        range2 = 0,\r\n        range3 = 0,\r\n        range4 = 0,\r\n        range5 = 0,\r\n        range6 = 0,\r\n        range7 = 0,\r\n        range8 = 0,\r\n        range9 = 0,\r\n        range10 = 0,\r\n        male = 0,\r\n        female = 0;\r\n      this.props.rawData.map((data) => {\r\n        countries.filter((country, index) => {\r\n          if (Object.keys(country)[0] === data.nationality) {\r\n            countries[index][data.nationality] =\r\n              countries[index][data.nationality] + 1;\r\n          }\r\n        });\r\n        if (data.agebracket !== \"\") {\r\n          if (Number(data.agebracket) >= 0 && Number(data.agebracket) <= 10) {\r\n            range1++;\r\n          } else if (\r\n            Number(data.agebracket) > 10 &&\r\n            Number(data.agebracket) <= 20\r\n          ) {\r\n            range2++;\r\n          } else if (\r\n            Number(data.agebracket) > 20 &&\r\n            Number(data.agebracket) <= 30\r\n          ) {\r\n            range3++;\r\n          } else if (\r\n            Number(data.agebracket) > 30 &&\r\n            Number(data.agebracket) <= 40\r\n          ) {\r\n            range4++;\r\n          } else if (\r\n            Number(data.agebracket) > 40 &&\r\n            Number(data.agebracket) <= 50\r\n          ) {\r\n            range5++;\r\n          } else if (\r\n            Number(data.agebracket) > 50 &&\r\n            Number(data.agebracket) <= 60\r\n          ) {\r\n            range6++;\r\n          } else if (\r\n            Number(data.agebracket) > 60 &&\r\n            Number(data.agebracket) <= 70\r\n          ) {\r\n            range7++;\r\n          } else if (\r\n            Number(data.agebracket) > 70 &&\r\n            Number(data.agebracket) <= 80\r\n          ) {\r\n            range8++;\r\n          } else if (\r\n            Number(data.agebracket) > 80 &&\r\n            Number(data.agebracket) <= 90\r\n          ) {\r\n            range9++;\r\n          } else {\r\n            range10++;\r\n          }\r\n        } else {\r\n          unknown++;\r\n        }\r\n\r\n        if (data.gender !== \"\") {\r\n          if (data.gender === \"M\") {\r\n            male++;\r\n          } else if (data.gender === \"F\") {\r\n            female++;\r\n          }\r\n        } else {\r\n          unknownGender++;\r\n        }\r\n      });\r\n\r\n      nationalityGroup = countries.map((country) => {\r\n        if (Object.keys(country)[0] !== \"\") {\r\n          return {\r\n            name: Object.keys(country),\r\n            [\"Patients\"]: Object.values(country),\r\n          };\r\n        }\r\n      });\r\n\r\n      ageGroup = [\r\n        {\r\n          name: \"0-10 years\",\r\n          [\"Cases\"]: range1,\r\n        },\r\n        { name: \"11-20 years\", [\"Cases\"]: range2 },\r\n        { name: \"21-30 years\", [\"Cases\"]: range3 },\r\n        { name: \"31-40 years\", [\"Cases\"]: range4 },\r\n        { name: \"41-50 years\", [\"Cases\"]: range5 },\r\n        { name: \"51-60 years\", [\"Cases\"]: range6 },\r\n        { name: \"61-70 years\", [\"Cases\"]: range7 },\r\n        { name: \"71-80 years\", [\"Cases\"]: range8 },\r\n        { name: \"81-90 years\", [\"Cases\"]: range9 },\r\n        { name: \"91 up years\", [\"Cases\"]: range10 },\r\n      ];\r\n      genderGroup = [\r\n        { name: \"Male\", value: male },\r\n        { name: \"Female\", value: female },\r\n        { name: \"Awaiting Details\", value: unknownGender },\r\n      ];\r\n    }\r\n\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-sm-12 col-12\">\r\n          <div\r\n            style={{\r\n              minHeight: 368,\r\n              background: \"linear-gradient(to right, #d9a7c7, #fffcdc)\",\r\n              paddingBottom: 15,\r\n              paddingLeft: 15,\r\n              paddingTop: 30,\r\n              borderRadius: 15,\r\n              marginBottom: 15,\r\n            }}\r\n          >\r\n            <GradientCardTitle title={\"Top 10 cities by confirmed cases\"} />\r\n            <SimpleLineChart\r\n              chart={\"BarChart\"}\r\n              customTooltip={true}\r\n              grid={false}\r\n              data={toptenCities}\r\n              labels={[\"Cases\"]}\r\n              colors={[\"#192a56\"]}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"col-sm-6 col-12\">\r\n          <div\r\n            style={{\r\n              background: \"linear-gradient(to right, #d9a7c7, #fffcdc)\",\r\n              paddingBottom: 15,\r\n              minHeight: 368,\r\n              paddingLeft: 15,\r\n              paddingTop: 30,\r\n              borderRadius: 15,\r\n              marginBottom: 15,\r\n            }}\r\n          >\r\n            <GradientCardTitle title={\"Total Confirmed and Active cases\"} />\r\n            <SwitchBar\r\n              options={[\"Total\", \"Daily\"]}\r\n              optionValues={[\"cumulative\", \"daily\"]}\r\n              onClick={(prop) => {\r\n                this.props.onSwitch(prop);\r\n              }}\r\n              showGlobalChartType={this.props.changeChart}\r\n            />\r\n            <SimpleLineChart\r\n              chart={\"AreaChart\"}\r\n              customTooltip={true}\r\n              grid={false}\r\n              data={\r\n                this.props.changeChart === \"daily\" ? totalDataDaily : totalData\r\n              }\r\n              labels={[\"Confirmed\", \"Active\"]}\r\n              colors={[\"#e43339\", \"#192a56\"]}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"col-sm-6 col-12\">\r\n          <div\r\n            style={{\r\n              background: \"linear-gradient(to right, #d9a7c7, #fffcdc)\",\r\n              paddingBottom: 15,\r\n              minHeight: 368,\r\n              paddingLeft: 15,\r\n              paddingTop: 30,\r\n              borderRadius: 15,\r\n              marginBottom: 15,\r\n            }}\r\n          >\r\n            <GradientCardTitle title={\"Total Recovered cases and Deaths\"} />\r\n            <SwitchBar\r\n              options={[\"Total\", \"Daily\"]}\r\n              optionValues={[\"cumulative\", \"daily\"]}\r\n              onClick={(prop) => {\r\n                this.props.onSwitch(prop);\r\n              }}\r\n              showGlobalChartType={this.props.changeChart}\r\n            />\r\n            <SimpleLineChart\r\n              chart={\"AreaChart\"}\r\n              customTooltip={true}\r\n              grid={false}\r\n              data={\r\n                this.props.changeChart === \"daily\" ? totalDataDaily : totalData\r\n              }\r\n              labels={[\"Recovered\", \"Deaths\"]}\r\n              colors={[\"#006266\", \"#535c68\"]}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"col-sm-6 col-12\">\r\n          <div\r\n            style={{\r\n              minHeight: 390,\r\n              background: \"linear-gradient(to right, #d9a7c7, #fffcdc)\",\r\n              paddingBottom: 15,\r\n              paddingLeft: 15,\r\n              paddingTop: 30,\r\n              borderRadius: 15,\r\n              marginBottom: 15,\r\n            }}\r\n          >\r\n            <GradientCardTitle\r\n              title={\"Top 5 states timeline by confirmed cases\"}\r\n            />\r\n            <div>\r\n              <div className=\"timer\">\r\n                <div\r\n                  className=\"timer-button\"\r\n                  onClick={() => {\r\n                    this.setState({\r\n                      started: !this.state.started,\r\n                      seconds:\r\n                        this.state.seconds < a.length - 1\r\n                          ? this.state.seconds\r\n                          : 0,\r\n                    });\r\n                    this.state.seconds < a.length - 1\r\n                      ? (this.timer = setInterval(() => {\r\n                          return this.state.seconds < a.length - 1\r\n                            ? this.state.started\r\n                              ? this.setState({\r\n                                  seconds: this.state.seconds + 1,\r\n                                })\r\n                              : null\r\n                            : (clearInterval(this.timer),\r\n                              this.state.started === true\r\n                                ? this.setState({\r\n                                    started: false,\r\n                                  })\r\n                                : null);\r\n                        }, 1000))\r\n                      : clearInterval(this.timer);\r\n                  }}\r\n                >\r\n                  {this.state.started ? \"Stop\" : \"Start\"}\r\n                </div>\r\n              </div>\r\n              <div className=\"timer-date\">\r\n                {filteredByDailyConfirmed.length > 0\r\n                  ? filteredByDailyConfirmed[this.state.seconds].date\r\n                  : null}\r\n              </div>\r\n            </div>\r\n            <SimpleLineChart\r\n              layout=\"vertical\"\r\n              chart={\"BarChart\"}\r\n              customTooltip={true}\r\n              grid={false}\r\n              data={a[this.state.seconds]}\r\n              labels={[\"Cases\"]}\r\n              colors={[\"#192a56\"]}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"col-sm-6 col-12\">\r\n          <div\r\n            style={{\r\n              background: \"linear-gradient(to right, #d9a7c7, #fffcdc)\",\r\n              paddingBottom: 15,\r\n              minHeight: 390,\r\n              paddingLeft: 15,\r\n              paddingTop: 30,\r\n              borderRadius: 15,\r\n              marginBottom: 15,\r\n            }}\r\n          >\r\n            <GradientCardTitle title={\"Total cases in top 10 states\"} />\r\n            <SimpleLineChart\r\n              chart={\"AreaChart\"}\r\n              legend={false}\r\n              customTooltip={true}\r\n              grid={false}\r\n              data={multiLineChartData}\r\n              labels={sortedCountryName}\r\n              colors={[\r\n                \"#3c3568\",\r\n                \"#f6ba62\",\r\n                \"#bc443b\",\r\n                \"#185e4b\",\r\n                \"#150a47\",\r\n                \"#334553\",\r\n                \"#d82f5a\",\r\n                \"#000133\",\r\n                \"#11887b\",\r\n                \"#044a05\",\r\n              ]}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"col-sm-6 col-12\">\r\n          <div\r\n            style={{\r\n              minHeight: 368,\r\n              background: \"linear-gradient(to right, #d9a7c7, #fffcdc)\",\r\n              paddingBottom: 15,\r\n              paddingLeft: 15,\r\n              paddingTop: 30,\r\n              borderRadius: 15,\r\n              marginBottom: 15,\r\n            }}\r\n          >\r\n            <GradientCardTitle title={\"Top 10 states by cases\"} />\r\n            <div className=\"row\" style={{ justifyContent: \"center\" }}>\r\n              <div className=\"col-sm-4\">\r\n                <Select\r\n                  isClearable={false}\r\n                  isSearchable={false}\r\n                  onChange={(selectedOption) => {\r\n                    this.props.onSelectOption(selectedOption);\r\n                  }}\r\n                  styles={colourStyles}\r\n                  placeholder=\"Confirmed\"\r\n                  options={[\r\n                    { value: \"confirmed\", label: \"Confirmed\" },\r\n                    { value: \"active\", label: \"Active\" },\r\n                    { value: \"deaths\", label: \"Deaths\" },\r\n                    { value: \"recovered\", label: \"Recovered\" },\r\n                  ]}\r\n                />\r\n              </div>\r\n            </div>\r\n            <CustomChart\r\n              placeholder={false}\r\n              emptyClassName={\"m-t-40\"}\r\n              chartArea={{ left: 10, top: 15, right: 10, bottom: 15 }}\r\n              rows={pieChartData}\r\n              columns={Columns}\r\n              chartType={\"PieChart\"}\r\n              height={\"270px\"}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"col-sm-6 col-12\">\r\n          <div\r\n            style={{\r\n              minHeight: 410,\r\n              background: \"linear-gradient(to right, #d9a7c7, #fffcdc)\",\r\n              paddingBottom: 15,\r\n              paddingLeft: 15,\r\n              paddingTop: 30,\r\n              borderRadius: 15,\r\n              marginBottom: 15,\r\n            }}\r\n          >\r\n            <GradientCardTitle title={\"Patients count by age\"} />\r\n            <SimpleLineChart\r\n              chart={\"BarChart\"}\r\n              customTooltip={true}\r\n              grid={false}\r\n              data={ageGroup}\r\n              labels={[\"Cases\"]}\r\n              colors={[\"#192a56\"]}\r\n            />\r\n            <GradientCardFooter\r\n              content={`*Awaiting details for ${unknown} patients.`}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"col-sm-6 col-12\">\r\n          <div\r\n            style={{\r\n              minHeight: 368,\r\n              background: \"linear-gradient(to right, #d9a7c7, #fffcdc)\",\r\n              paddingBottom: 15,\r\n              paddingLeft: 15,\r\n              paddingTop: 30,\r\n              borderRadius: 15,\r\n              marginBottom: 15,\r\n            }}\r\n          >\r\n            <GradientCardTitle title={\"Patients count by gender\"} />\r\n            <div style={{ marginBottom: -24 }}>\r\n              <span style={{ color: \"#192a56\", fontWeight: \"bold\" }}>\r\n                Male{\" \"}\r\n                {genderGroup.length !== 0\r\n                  ? genderGroup.filter((stat) => stat.name === \"Male\")[0].value\r\n                  : 0}\r\n              </span>\r\n              <span\r\n                style={{\r\n                  marginLeft: 15,\r\n                  color: \"rgb(255, 82, 82)\",\r\n                  fontWeight: \"bold\",\r\n                }}\r\n              >\r\n                Female{\" \"}\r\n                {genderGroup.length !== 0\r\n                  ? genderGroup.filter((stat) => stat.name === \"Female\")[0]\r\n                      .value\r\n                  : 0}\r\n              </span>\r\n              <span\r\n                style={{\r\n                  marginLeft: 15,\r\n                  color: \"#404b69\",\r\n                  fontWeight: \"bold\",\r\n                }}\r\n              >\r\n                A. Details{\" \"}\r\n                {genderGroup.length !== 0\r\n                  ? genderGroup.filter(\r\n                      (stat) => stat.name === \"Awaiting Details\"\r\n                    )[0].value\r\n                  : 0}\r\n              </span>\r\n            </div>\r\n            <SimplePieChart data={genderGroup} />\r\n            <GradientCardFooter\r\n              content={`*Awaiting details for ${unknownGender} patients.`}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"col-sm-6 col-12\">\r\n          <div\r\n            style={{\r\n              minHeight: 368,\r\n              background: \"linear-gradient(to right, #d9a7c7, #fffcdc)\",\r\n              paddingBottom: 15,\r\n              paddingLeft: 15,\r\n              paddingTop: 30,\r\n              borderRadius: 15,\r\n              marginBottom: 15,\r\n            }}\r\n          >\r\n            <GradientCardTitle title={\"Patients count by nationality\"} />\r\n\r\n            <SimpleLineChart\r\n              chart={\"BarChart\"}\r\n              customTooltip={true}\r\n              grid={false}\r\n              data={nationalityGroup}\r\n              labels={[\"Patients\"]}\r\n              colors={[\"#192a56\"]}\r\n            />\r\n            <GradientCardFooter\r\n              content={`*Awaiting details for ${\r\n                typeof countries.filter(\r\n                  (country) => Object.keys(country)[0] === \"\"\r\n                )[0] !== \"undefined\"\r\n                  ? Object.values(\r\n                      countries.filter(\r\n                        (country) => Object.keys(country)[0] === \"\"\r\n                      )[0]\r\n                    )[0]\r\n                  : countries.filter(\r\n                      (country) => Object.keys(country)[0] === \"\"\r\n                    )[0]\r\n              } patients.`}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Analytics;\r\n","import React, { useState } from \"react\";\r\nimport { ComposableMap, Geographies, Geography } from \"react-simple-maps\";\r\nimport { scaleLog } from \"d3-scale\";\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport \"./indiaMap.css\";\r\nimport { useEffect } from \"react\";\r\nconst INDIA_TOPO_JSON = require(\"./india.topo.json\");\r\nconst andamannicobarislands = require(\"./states/andamannicobarislands.json\");\r\nconst arunachalpradesh = require(\"./states/arunachalpradesh.json\");\r\nconst andhrapradesh = require(\"./states/andhrapradesh.json\");\r\nconst assam = require(\"./states/assam.json\");\r\nconst bihar = require(\"./states/bihar.json\");\r\nconst chandigarh = require(\"./states/chandigarh.json\");\r\nconst chhattisgarh = require(\"./states/chhattisgarh.json\");\r\nconst dadranagarhaveli = require(\"./states/dadranagarhaveli.json\");\r\nconst delhi = require(\"./states/delhi.json\");\r\nconst karnataka = require(\"./states/karnataka.json\");\r\nconst kerala = require(\"./states/kerala.json\");\r\nconst goa = require(\"./states/goa.json\");\r\nconst gujarat = require(\"./states/gujarat.json\");\r\nconst haryana = require(\"./states/haryana.json\");\r\nconst himachalpradesh = require(\"./states/himachalpradesh.json\");\r\nconst jammukashmir = require(\"./states/jammukashmir.json\");\r\nconst jharkhand = require(\"./states/jharkhand.json\");\r\nconst ladakh = require(\"./states/ladakh.json\");\r\nconst lakshadweep = require(\"./states/lakshadweep.json\");\r\nconst madhyapradesh = require(\"./states/madhyapradesh.json\");\r\nconst maharashtra = require(\"./states/maharashtra.json\");\r\nconst manipur = require(\"./states/manipur.json\");\r\nconst meghalaya = require(\"./states/meghalaya.json\");\r\nconst mizoram = require(\"./states/mizoram.json\");\r\nconst nagaland = require(\"./states/nagaland.json\");\r\nconst odisha = require(\"./states/odisha.json\");\r\nconst puducherry = require(\"./states/puducherry.json\");\r\nconst punjab = require(\"./states/punjab.json\");\r\nconst rajasthan = require(\"./states/rajasthan.json\");\r\nconst sikkim = require(\"./states/sikkim.json\");\r\nconst nadu = require(\"./states/tamil-nadu.json\");\r\nconst telangana = require(\"./states/telangana.json\");\r\nconst tripura = require(\"./states/tripura.json\");\r\nconst uttarakhand = require(\"./states/uttarakhand.json\");\r\nconst uttarpradesh = require(\"./states/uttarpradesh.json\");\r\nconst westbengal = require(\"./states/westbengal.json\");\r\nconst STATE_TOPO_JSON = require(\"./states/andamannicobarislands.json\");\r\n\r\n// Red Variants\r\nconst COLOR_RANGE = [\"#ffedea\", \"#ffcec5\", \"#ffad9f\"];\r\n\r\nconst DEFAULT_COLOR = \"#EEE\";\r\n\r\nconst geographyStyle = {\r\n  default: {\r\n    outline: \"none\",\r\n  },\r\n  hover: {\r\n    fill: \"#F53\",\r\n    transition: \"all 250ms\",\r\n    outline: \"none\",\r\n  },\r\n  pressed: {\r\n    outline: \"none\",\r\n  },\r\n};\r\n\r\nfunction useWindowSize() {\r\n  const isClient = typeof window === \"object\";\r\n\r\n  function getSize() {\r\n    return {\r\n      width: isClient ? window.innerWidth : undefined,\r\n      height: isClient ? window.innerHeight : undefined,\r\n    };\r\n  }\r\n\r\n  const [windowSize, setWindowSize] = useState(getSize);\r\n\r\n  useEffect(() => {\r\n    if (!isClient) {\r\n      return false;\r\n    }\r\n\r\n    function handleResize() {\r\n      setWindowSize(getSize());\r\n    }\r\n\r\n    window.addEventListener(\"resize\", handleResize);\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return windowSize;\r\n}\r\n\r\nconst StateWiseMap = ({ data, stateName }) => {\r\n  const [tooltipContent, setTooltipContent] = useState(\"\");\r\n  const size = useWindowSize();\r\n\r\n  const colorScale = scaleLog().domain([1, 10]).range(COLOR_RANGE);\r\n\r\n  const onMouseEnter = (geo, current = { value: \"NA\" }) => {\r\n    return () => {\r\n      setTooltipContent({ ...current, geo });\r\n    };\r\n  };\r\n\r\n  const onMouseLeave = () => {\r\n    setTooltipContent(\"\");\r\n  };\r\n\r\n  const getGeoFile = (name) => {\r\n    switch (name) {\r\n      case \"andamannicobarislands\":\r\n        return andamannicobarislands;\r\n      case \"arunachalpradesh\":\r\n        return arunachalpradesh;\r\n      case \"andhrapradesh\":\r\n        return andhrapradesh;\r\n      case \"assam\":\r\n        return assam;\r\n      case \"bihar\":\r\n        return bihar;\r\n      case \"chandigarh\":\r\n        return chandigarh;\r\n      case \"chhattisgarh\":\r\n        return chhattisgarh;\r\n      case \"dadranagarhaveli\":\r\n        return dadranagarhaveli;\r\n      case \"delhi\":\r\n        return delhi;\r\n      case \"karnataka\":\r\n        return karnataka;\r\n      case \"kerala\":\r\n        return kerala;\r\n      case \"goa\":\r\n        return goa;\r\n      case \"gujarat\":\r\n        return gujarat;\r\n      case \"haryana\":\r\n        return haryana;\r\n      case \"himachalpradesh\":\r\n        return himachalpradesh;\r\n      case \"jammukashmir\":\r\n        return jammukashmir;\r\n      case \"jharkhand\":\r\n        return jharkhand;\r\n      case \"ladakh\":\r\n        return ladakh;\r\n      case \"lakshadweep\":\r\n        return lakshadweep;\r\n      case \"madhyapradesh\":\r\n        return madhyapradesh;\r\n      case \"maharashtra\":\r\n        return maharashtra;\r\n      case \"manipur\":\r\n        return manipur;\r\n      case \"meghalaya\":\r\n        return meghalaya;\r\n      case \"mizoram\":\r\n        return mizoram;\r\n      case \"nagaland\":\r\n        return nagaland;\r\n      case \"odisha\":\r\n        return odisha;\r\n      case \"puducherry\":\r\n        return puducherry;\r\n      case \"punjab\":\r\n        return punjab;\r\n      case \"rajasthan\":\r\n        return rajasthan;\r\n      case \"sikkim\":\r\n        return sikkim;\r\n      case \"nadu\":\r\n        return nadu;\r\n      case \"telangana\":\r\n        return telangana;\r\n      case \"tripura\":\r\n        return tripura;\r\n      case \"uttarakhand\":\r\n        return uttarakhand;\r\n      case \"uttarpradesh\":\r\n        return uttarpradesh;\r\n      case \"westbengal\":\r\n        return westbengal;\r\n      default:\r\n        return gujarat;\r\n    }\r\n  };\r\n\r\n  const getScale = (name) => {\r\n    switch (name) {\r\n      case \"andamannicobarislands\":\r\n        return 1000;\r\n      case \"arunachalpradesh\":\r\n        return 2200;\r\n      case \"andhrapradesh\":\r\n        return 1300;\r\n      case \"assam\":\r\n        return 2200;\r\n      case \"bihar\":\r\n        return 2700;\r\n      case \"chandigarh\":\r\n        return 3000;\r\n      case \"chhattisgarh\":\r\n        return 1600;\r\n      case \"dadranagarhaveli\":\r\n        return 10000;\r\n      case \"delhi\":\r\n        return 23000;\r\n      case \"karnataka\":\r\n        return 1600;\r\n      case \"kerala\":\r\n        return 2400;\r\n      case \"goa\":\r\n        return 12000;\r\n      case \"gujarat\":\r\n        return 2100;\r\n      case \"haryana\":\r\n        return 3300;\r\n      case \"himachalpradesh\":\r\n        return 3400;\r\n      case \"jammukashmir\":\r\n        return 3700;\r\n      case \"jharkhand\":\r\n        return 2800;\r\n      case \"ladakh\":\r\n        return 3300;\r\n      case \"lakshadweep\":\r\n        return 2000;\r\n      case \"madhyapradesh\":\r\n        return 1400;\r\n      case \"maharashtra\":\r\n        return 1500;\r\n      case \"manipur\":\r\n        return 5000;\r\n      case \"meghalaya\":\r\n        return 4300;\r\n      case \"mizoram\":\r\n        return 4400;\r\n      case \"nagaland\":\r\n        return 5500;\r\n      case \"odisha\":\r\n        return 2100;\r\n      case \"puducherry\":\r\n        return 2000;\r\n      case \"punjab\":\r\n        return 3500;\r\n      case \"rajasthan\":\r\n        return 1400;\r\n      case \"sikkim\":\r\n        return 6000;\r\n      case \"nadu\":\r\n        return 580;\r\n      case \"telangana\":\r\n        return 2600;\r\n      case \"tripura\":\r\n        return 6000;\r\n      case \"uttarakhand\":\r\n        return 3600;\r\n      case \"uttarpradesh\":\r\n        return 1500;\r\n      case \"westbengal\":\r\n        return 2000;\r\n      default:\r\n        return 2100;\r\n    }\r\n  };\r\n\r\n  const getCenter = (name) => {\r\n    switch (name) {\r\n      case \"andamannicobarislands\":\r\n        return [\r\n          getGeoFile(stateName)[\"transform\"][\"translate\"][0] + 3,\r\n          getGeoFile(stateName)[\"transform\"][\"translate\"][1] + 2,\r\n        ];\r\n      case \"arunachalpradesh\":\r\n        return [\r\n          getGeoFile(stateName)[\"transform\"][\"translate\"][0] + 3,\r\n          getGeoFile(stateName)[\"transform\"][\"translate\"][1] + 1.5,\r\n        ];\r\n      case \"andhrapradesh\":\r\n        return [\r\n          getGeoFile(stateName)[\"transform\"][\"translate\"][0] + 3,\r\n          getGeoFile(stateName)[\"transform\"][\"translate\"][1] + 4,\r\n        ];\r\n      case \"assam\":\r\n        return [\r\n          getGeoFile(stateName)[\"transform\"][\"translate\"][0] + 3,\r\n          getGeoFile(stateName)[\"transform\"][\"translate\"][1] + 2,\r\n        ];\r\n      case \"bihar\":\r\n        return [\r\n          getGeoFile(stateName)[\"transform\"][\"translate\"][0] + 2.5,\r\n          getGeoFile(stateName)[\"transform\"][\"translate\"][1] + 1.5,\r\n        ];\r\n      case \"chandigarh\":\r\n        return [\r\n          getGeoFile(stateName)[\"transform\"][\"translate\"][0] + 3,\r\n          getGeoFile(stateName)[\"transform\"][\"translate\"][1] + 2,\r\n        ];\r\n      case \"chhattisgarh\":\r\n        return [\r\n          getGeoFile(stateName)[\"transform\"][\"translate\"][0] + 3,\r\n          getGeoFile(stateName)[\"transform\"][\"translate\"][1] + 3.2,\r\n        ];\r\n      case \"dadranagarhaveli\":\r\n        return [\r\n          getGeoFile(stateName)[\"transform\"][\"translate\"][0] + 0.2,\r\n          getGeoFile(stateName)[\"transform\"][\"translate\"][1] + 0.8,\r\n        ];\r\n      case \"delhi\":\r\n        return [\r\n          getGeoFile(stateName)[\"transform\"][\"translate\"][0] + 0.2,\r\n          getGeoFile(stateName)[\"transform\"][\"translate\"][1] + 0.25,\r\n        ];\r\n      case \"karnataka\":\r\n        return [\r\n          getGeoFile(stateName)[\"transform\"][\"translate\"][0] + 3,\r\n          getGeoFile(stateName)[\"transform\"][\"translate\"][1] + 3.5,\r\n        ];\r\n      case \"kerala\":\r\n        return [\r\n          getGeoFile(stateName)[\"transform\"][\"translate\"][0] + 2,\r\n          getGeoFile(stateName)[\"transform\"][\"translate\"][1] + 2,\r\n        ];\r\n      case \"goa\":\r\n        return [\r\n          getGeoFile(stateName)[\"transform\"][\"translate\"][0] + 0.5,\r\n          getGeoFile(stateName)[\"transform\"][\"translate\"][1] + 0.5,\r\n        ];\r\n      case \"gujarat\":\r\n        return [\r\n          getGeoFile(stateName)[\"transform\"][\"translate\"][0] + 3,\r\n          getGeoFile(stateName)[\"transform\"][\"translate\"][1] + 2.5,\r\n        ];\r\n      case \"haryana\":\r\n        return [\r\n          getGeoFile(stateName)[\"transform\"][\"translate\"][0] + 1.5,\r\n          getGeoFile(stateName)[\"transform\"][\"translate\"][1] + 1.7,\r\n        ];\r\n      case \"himachalpradesh\":\r\n        return [\r\n          getGeoFile(stateName)[\"transform\"][\"translate\"][0] + 1.6,\r\n          getGeoFile(stateName)[\"transform\"][\"translate\"][1] + 1.5,\r\n        ];\r\n      case \"jammukashmir\":\r\n        return [\r\n          getGeoFile(stateName)[\"transform\"][\"translate\"][0] + 1.5,\r\n          getGeoFile(stateName)[\"transform\"][\"translate\"][1] + 1.5,\r\n        ];\r\n      case \"jharkhand\":\r\n        return [\r\n          getGeoFile(stateName)[\"transform\"][\"translate\"][0] + 2.2,\r\n          getGeoFile(stateName)[\"transform\"][\"translate\"][1] + 1.7,\r\n        ];\r\n      case \"ladakh\":\r\n        return [\r\n          getGeoFile(stateName)[\"transform\"][\"translate\"][0] + 3,\r\n          getGeoFile(stateName)[\"transform\"][\"translate\"][1] + 2,\r\n        ];\r\n      case \"lakshadweep\":\r\n        return [\r\n          getGeoFile(stateName)[\"transform\"][\"translate\"][0] - 2,\r\n          getGeoFile(stateName)[\"transform\"][\"translate\"][1] + 1,\r\n        ];\r\n      case \"madhyapradesh\":\r\n        return [\r\n          getGeoFile(stateName)[\"transform\"][\"translate\"][0] + 4,\r\n          getGeoFile(stateName)[\"transform\"][\"translate\"][1] + 3,\r\n        ];\r\n      case \"maharashtra\":\r\n        return [\r\n          getGeoFile(stateName)[\"transform\"][\"translate\"][0] + 3.7,\r\n          getGeoFile(stateName)[\"transform\"][\"translate\"][1] + 3.3,\r\n        ];\r\n      case \"manipur\":\r\n        return [\r\n          getGeoFile(stateName)[\"transform\"][\"translate\"][0] + 1,\r\n          getGeoFile(stateName)[\"transform\"][\"translate\"][1] + 1,\r\n        ];\r\n      case \"meghalaya\":\r\n        return [\r\n          getGeoFile(stateName)[\"transform\"][\"translate\"][0] + 1.5,\r\n          getGeoFile(stateName)[\"transform\"][\"translate\"][1] + 0.7,\r\n        ];\r\n      case \"mizoram\":\r\n        return [\r\n          getGeoFile(stateName)[\"transform\"][\"translate\"][0] + 1,\r\n          getGeoFile(stateName)[\"transform\"][\"translate\"][1] + 1.3,\r\n        ];\r\n      case \"nagaland\":\r\n        return [\r\n          getGeoFile(stateName)[\"transform\"][\"translate\"][0] + 1,\r\n          getGeoFile(stateName)[\"transform\"][\"translate\"][1] + 0.9,\r\n        ];\r\n      case \"odisha\":\r\n        return [\r\n          getGeoFile(stateName)[\"transform\"][\"translate\"][0] + 3,\r\n          getGeoFile(stateName)[\"transform\"][\"translate\"][1] + 2.5,\r\n        ];\r\n      case \"puducherry\":\r\n        return [\r\n          getGeoFile(stateName)[\"transform\"][\"translate\"][0] + 3,\r\n          getGeoFile(stateName)[\"transform\"][\"translate\"][1] + 2,\r\n        ];\r\n      case \"punjab\":\r\n        return [\r\n          getGeoFile(stateName)[\"transform\"][\"translate\"][0] + 1.4,\r\n          getGeoFile(stateName)[\"transform\"][\"translate\"][1] + 1.5,\r\n        ];\r\n      case \"rajasthan\":\r\n        return [\r\n          getGeoFile(stateName)[\"transform\"][\"translate\"][0] + 4,\r\n          getGeoFile(stateName)[\"transform\"][\"translate\"][1] + 3.5,\r\n        ];\r\n      case \"sikkim\":\r\n        return [\r\n          getGeoFile(stateName)[\"transform\"][\"translate\"][0] + 0.3,\r\n          getGeoFile(stateName)[\"transform\"][\"translate\"][1] + 0.5,\r\n        ];\r\n      case \"nadu\":\r\n        return [\r\n          getGeoFile(stateName)[\"transform\"][\"translate\"][0] + 5,\r\n          getGeoFile(stateName)[\"transform\"][\"translate\"][1] + 11,\r\n        ];\r\n      case \"telangana\":\r\n        return [\r\n          getGeoFile(stateName)[\"transform\"][\"translate\"][0] + 1.5,\r\n          getGeoFile(stateName)[\"transform\"][\"translate\"][1] + 2,\r\n        ];\r\n      case \"tripura\":\r\n        return [\r\n          getGeoFile(stateName)[\"transform\"][\"translate\"][0] + 0.6,\r\n          getGeoFile(stateName)[\"transform\"][\"translate\"][1] + 0.8,\r\n        ];\r\n      case \"uttarakhand\":\r\n        return [\r\n          getGeoFile(stateName)[\"transform\"][\"translate\"][0] + 1.6,\r\n          getGeoFile(stateName)[\"transform\"][\"translate\"][1] + 1.4,\r\n        ];\r\n      case \"uttarpradesh\":\r\n        return [\r\n          getGeoFile(stateName)[\"transform\"][\"translate\"][0] + 3,\r\n          getGeoFile(stateName)[\"transform\"][\"translate\"][1] + 3.4,\r\n        ];\r\n      case \"westbengal\":\r\n        return [\r\n          getGeoFile(stateName)[\"transform\"][\"translate\"][0] + 3,\r\n          getGeoFile(stateName)[\"transform\"][\"translate\"][1] + 3,\r\n        ];\r\n      default:\r\n        return [\r\n          getGeoFile(stateName)[\"transform\"][\"translate\"][0] + 3,\r\n          getGeoFile(stateName)[\"transform\"][\"translate\"][1] + 2.5,\r\n        ];\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"indiamap\">\r\n      {tooltipContent !== \"\" ? (\r\n        <ReactTooltip>\r\n          <div>\r\n            <span\r\n              style={{\r\n                fontWeight: \"bold\",\r\n                fontSize: 16,\r\n                color: \"rgb(64, 75, 105)\",\r\n              }}\r\n            >\r\n              {tooltipContent.geo.properties.district}\r\n            </span>\r\n            <br />\r\n            <span\r\n              style={{\r\n                fontWeight: \"bold\",\r\n                fontSize: 16,\r\n                color: \"rgb(228, 51, 57)\",\r\n              }}\r\n            >\r\n              {typeof tooltipContent.confirmed !== \"undefined\"\r\n                ? \"Confirmed: \"\r\n                : \"Confirmed: 0\"}\r\n\r\n              {typeof tooltipContent.confirmed !== \"undefined\"\r\n                ? tooltipContent.confirmed\r\n                : null}\r\n              {typeof tooltipContent.confirmed !== \"undefined\" ? (\r\n                Number(tooltipContent.delta.confirmed) !== 0 ? (\r\n                  <span style={{ fontSize: 17, fontWeight: \"bold\" }}>\r\n                    &#9650; {tooltipContent.delta.confirmed}\r\n                  </span>\r\n                ) : null\r\n              ) : null}\r\n            </span>\r\n          </div>\r\n        </ReactTooltip>\r\n      ) : null}\r\n      <ComposableMap\r\n        projectionConfig={{\r\n          scale: getScale(stateName),\r\n          center: getCenter(stateName),\r\n        }}\r\n        projection=\"geoMercator\"\r\n        height={\r\n          size.width < 1500 && size.width > 768\r\n            ? 500\r\n            : size.width <= 768 && size.width > 400\r\n            ? 400\r\n            : size.width <= 400\r\n            ? 120\r\n            : Math.floor(size.width / 10)\r\n        }\r\n        width={\r\n          size.width < 1500 && size.width > 768\r\n            ? 900\r\n            : size.width <= 768 && size.width > 400\r\n            ? 600\r\n            : size.width <= 400\r\n            ? 220\r\n            : Math.floor(size.width / 5)\r\n        }\r\n        data-tip=\"\"\r\n      >\r\n        <Geographies geography={getGeoFile(stateName)}>\r\n          {({ geographies }) =>\r\n            geographies.map((geo) => {\r\n              const current = Object.keys(data).find(\r\n                (s) => s === geo.properties.district\r\n              );\r\n\r\n              return (\r\n                <Geography\r\n                  key={geo.rsmKey}\r\n                  geography={geo}\r\n                  fill={\r\n                    data[current]\r\n                      ? colorScale(data[current].confirmed)\r\n                      : DEFAULT_COLOR\r\n                  }\r\n                  style={geographyStyle}\r\n                  onMouseEnter={onMouseEnter(geo, data[current])}\r\n                  onMouseLeave={onMouseLeave}\r\n                />\r\n              );\r\n            })\r\n          }\r\n        </Geographies>\r\n      </ComposableMap>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StateWiseMap;\r\n","import React, { Component } from \"react\";\r\nimport \"../../Backup/App.css\";\r\nimport \"react-table-6/react-table.css\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport ErrorBoundary from \"../../ui/ErrorBoundry/ErrorBoundry\";\r\nimport IndiaMap from \"../../charts/IndiaMap/IndiaMap\";\r\nimport Footer from \"../../ui/Footer/Footer\";\r\nimport Table from \"../../container/India/SubComponents/Table\";\r\nimport Cards from \"../../container/India/SubComponents/Cards\";\r\nimport \"./India.css\";\r\nimport Header from \"../../ui/Header/Header\";\r\nimport GradientCardTitle from \"../../ui/GradientCardTitle/GradientCardTitle\";\r\nimport NumbersCard from \"../../container/India/SubComponents/NumbersCard\";\r\nimport NavigationBar from \"../../ui/NavigationBar/NavigationBar\";\r\nimport Analytics from \"../India/SubComponents/Analytics\";\r\nimport StateWiseMap from \"../../charts/IndiaMap/StateWiseMap\";\r\n\r\nclass India extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      searchString: \"\",\r\n      currentPage: 0,\r\n      ui: \"/\",\r\n      width: 0,\r\n      height: 0,\r\n      selectedCity: \"\",\r\n      confirmedOpen: false,\r\n      activeOpen: false,\r\n      filterByCases: \"confirmed\",\r\n      changeChart: \"cumulative\",\r\n      tooltipContent: \"\",\r\n      displayBySort: \"All\",\r\n      deathsOpen: false,\r\n      totalPages: 0,\r\n      activePage: 0,\r\n      selectedCountry: false,\r\n      locationLoader: false,\r\n      data: [],\r\n      stateWiseCity: [],\r\n      rawData: [],\r\n      dailyStatus: [],\r\n      india: [],\r\n      timelines: [],\r\n      labels: [\"January\", \"February\", \"March\", \"April\", \"May\"],\r\n      isTable: 0,\r\n      datasets: [\r\n        {\r\n          label: \"Rainfall\",\r\n          backgroundColor: \"rgba(75,192,192,1)\",\r\n          borderColor: \"rgba(0,0,0,1)\",\r\n          borderWidth: 2,\r\n          data: [65, 59, 80, 81, 56],\r\n          data1: [65, 59, 80, 81, 56],\r\n          data2: [65, 59, 80, 81, 56],\r\n          data3: [65, 59, 80, 81, 56],\r\n        },\r\n      ],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.addEventListener(\"resize\", this.updateDimensions);\r\n\r\n    window.addEventListener(\"focus\", () => {\r\n      this.getData();\r\n      this.getStateData();\r\n    });\r\n\r\n    this.setState({\r\n      locationLoader: true,\r\n    });\r\n    this.getRawData();\r\n    this.getDailyStatus();\r\n    this.getData();\r\n    this.getStateData();\r\n  }\r\n\r\n  getStateData() {\r\n    fetch(\"https://api.covid19india.org/state_district_wise.json\", {\r\n      method: \"GET\",\r\n    })\r\n      .then((res) => res.json())\r\n      .then((response) => {\r\n        this.setState({\r\n          stateWiseCity: response,\r\n        });\r\n      })\r\n      .catch((error) => {});\r\n  }\r\n\r\n  getRawData() {\r\n    fetch(`https://api.covid19india.org/raw_data.json`, {\r\n      method: \"GET\",\r\n    })\r\n      .then((res) => res.json())\r\n      .then((response) => {\r\n        this.setState({\r\n          rawData: response.raw_data,\r\n          locationLoader: false,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        this.setState({\r\n          locationLoader: false,\r\n        });\r\n      });\r\n  }\r\n\r\n  getDailyStatus() {\r\n    fetch(`https://api.covid19india.org/states_daily.json`, {\r\n      method: \"GET\",\r\n    })\r\n      .then((res) => res.json())\r\n      .then((response) => {\r\n        this.setState({\r\n          dailyStatus: response.states_daily,\r\n          locationLoader: false,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        this.setState({\r\n          locationLoader: false,\r\n        });\r\n      });\r\n  }\r\n\r\n  getData() {\r\n    fetch(`https://api.covid19india.org/data.json`, {\r\n      method: \"GET\",\r\n    })\r\n      .then((res) => res.json())\r\n      .then((response) => {\r\n        this.setState({\r\n          india: response,\r\n          locationLoader: false,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        this.setState({\r\n          locationLoader: false,\r\n        });\r\n      });\r\n  }\r\n\r\n  chunkArray = (array, size) => {\r\n    let result = [];\r\n    let arrayCopy = [...array];\r\n    while (arrayCopy.length > 0) {\r\n      result.push(arrayCopy.splice(0, size));\r\n    }\r\n    return result;\r\n  };\r\n\r\n  updateDimensions = () => {\r\n    this.setState({ width: window.innerWidth, height: window.innerHeight });\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"resize\", this.updateDimensions);\r\n  }\r\n\r\n  filterStateName = (name) => {\r\n    switch (name) {\r\n      case \"Andaman and Nicobar Islands\":\r\n        return \"andamannicobarislands\";\r\n      case \"Arunachal Pradesh\":\r\n        return \"arunachalpradesh\";\r\n      case \"Andhra Pradesh\":\r\n        return \"andhrapradesh\";\r\n      case \"Assam\":\r\n        return \"assam\";\r\n      case \"Bihar\":\r\n        return \"bihar\";\r\n      case \"Chandigarh\":\r\n        return \"chandigarh\";\r\n      case \"Chhattisgarh\":\r\n        return \"chhattisgarh\";\r\n      case \"Dadra and Nagar Haveli\":\r\n        return \"dadranagarhaveli\";\r\n      case \"Delhi\":\r\n        return \"delhi\";\r\n      case \"Karnataka\":\r\n        return \"karnataka\";\r\n      case \"Kerala\":\r\n        return \"kerala\";\r\n      case \"Goa\":\r\n        return \"goa\";\r\n      case \"Gujarat\":\r\n        return \"gujarat\";\r\n      case \"Haryana\":\r\n        return \"haryana\";\r\n      case \"Himachal Pradesh\":\r\n        return \"himachalpradesh\";\r\n      case \"Jammu and Kashmir\":\r\n        return \"jammukashmir\";\r\n      case \"Jharkhand\":\r\n        return \"jharkhand\";\r\n      case \"Ladakh\":\r\n        return \"ladakh\";\r\n      case \"Lakshadweep\":\r\n        return \"lakshadweep\";\r\n      case \"Madhya Pradesh\":\r\n        return \"madhyapradesh\";\r\n      case \"Maharashtra\":\r\n        return \"maharashtra\";\r\n      case \"Manipur\":\r\n        return \"manipur\";\r\n      case \"Meghalaya\":\r\n        return \"meghalaya\";\r\n      case \"Mizoram\":\r\n        return \"mizoram\";\r\n      case \"Nagaland\":\r\n        return \"nagaland\";\r\n      case \"Odisha\":\r\n        return \"odisha\";\r\n      case \"Puducherry\":\r\n        return \"puducherry\";\r\n      case \"Punjab\":\r\n        return \"punjab\";\r\n      case \"Rajasthan\":\r\n        return \"rajasthan\";\r\n      case \"Sikkim\":\r\n        return \"sikkim\";\r\n      case \"Tamil Nadu\":\r\n        return \"nadu\";\r\n      case \"Telangana\":\r\n        return \"telangana\";\r\n      case \"Tripura\":\r\n        return \"tripura\";\r\n      case \"Uttarakhand\":\r\n        return \"uttarakhand\";\r\n      case \"Uttar Pradesh\":\r\n        return \"uttarpradesh\";\r\n      case \"West Bengal\":\r\n        return \"westbengal\";\r\n      default:\r\n        return \"gujarat\";\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <ErrorBoundary>\r\n        <div className=\"App India\">\r\n          <div className=\"container\">\r\n            <div>\r\n              <Header\r\n                dashboard={\"India\"}\r\n                history={this.props.history}\r\n                width={this.state.width}\r\n              />\r\n            </div>\r\n            <div style={{ minHeight: \"90vh\" }}>\r\n              <NumbersCard india={this.state.india} />\r\n              <NavigationBar\r\n                type=\"India\"\r\n                ui={this.state.ui}\r\n                options={[\"Analytics\", \"Card\", \"Table\", \"Map\"]}\r\n                optionRoutes={[\"/\", \"/card\", \"/table\", \"/map\"]}\r\n                onClick={(route) => {\r\n                  this.setState({\r\n                    ui: route,\r\n                  });\r\n                }}\r\n              />\r\n              {this.state.ui === \"/\" ? (\r\n                <Analytics\r\n                  stateWiseCity={this.state.stateWiseCity}\r\n                  dailyStatus={this.state.dailyStatus}\r\n                  rawData={this.state.rawData}\r\n                  filterByCases={this.state.filterByCases}\r\n                  displayBySort={this.state.displayBySort}\r\n                  india={this.state.india}\r\n                  onSelectOption={(selectedOption) => {\r\n                    this.setState({\r\n                      filterByCases:\r\n                        selectedOption === null\r\n                          ? \"confirmed\"\r\n                          : selectedOption.value,\r\n                    });\r\n                  }}\r\n                  onSwitch={(prop) =>\r\n                    this.setState({\r\n                      changeChart: prop,\r\n                    })\r\n                  }\r\n                  changeChart={this.state.changeChart}\r\n                />\r\n              ) : null}\r\n              {this.state.ui === \"/map\" ? (\r\n                <div>\r\n                  {this.state.showState === true ? (\r\n                    <div>\r\n                      <div\r\n                        style={{\r\n                          background:\r\n                            \"linear-gradient(to right, #d9a7c7, #fffcdc)\",\r\n                          paddingBottom: 25,\r\n                          paddingTop: 30,\r\n                          borderRadius: 15,\r\n                          marginBottom: 15,\r\n                        }}\r\n                      >\r\n                        <GradientCardTitle\r\n                          style={{ textAlign: \"center\" }}\r\n                          title={this.state.originalStateName}\r\n                        />\r\n                        <div\r\n                          style={{\r\n                            display: \"flex\",\r\n                            justifyContent: \"space-around\",\r\n                          }}\r\n                        >\r\n                          <div\r\n                            style={{\r\n                              fontWeight: \"bold\",\r\n                              fontSize: 16,\r\n                              color: \"rgb(228, 51, 57)\",\r\n                            }}\r\n                          >\r\n                            <span>Confirmed</span>\r\n                            <br />\r\n                            <span>{this.state.toolTipContent.confirmed}</span>\r\n                            <br />\r\n\r\n                            {this.state.toolTipContent.deltaconfirmed !==\r\n                            \"0\" ? (\r\n                              <span\r\n                                style={{ fontSize: 17, fontWeight: \"bold\" }}\r\n                              >\r\n                                &#9650;{\" \"}\r\n                                {this.state.toolTipContent.deltaconfirmed}\r\n                              </span>\r\n                            ) : null}\r\n                          </div>\r\n\r\n                          <div\r\n                            style={{\r\n                              fontWeight: \"bold\",\r\n                              fontSize: 16,\r\n                              color: \"rgb(25, 42, 86)\",\r\n                            }}\r\n                          >\r\n                            <span>Active</span>\r\n                            <br />\r\n                            <span>{this.state.toolTipContent.active}</span>\r\n                          </div>\r\n                          <div\r\n                            style={{\r\n                              fontWeight: \"bold\",\r\n                              fontSize: 16,\r\n                              color: \"rgb(0, 98, 102)\",\r\n                            }}\r\n                          >\r\n                            <span>Recovered</span>\r\n                            <br />\r\n                            <span>{this.state.toolTipContent.recovered}</span>\r\n                            <br />\r\n                            {this.state.toolTipContent.deltaconfirmed !==\r\n                            \"0\" ? (\r\n                              <span\r\n                                style={{ fontSize: 17, fontWeight: \"bold\" }}\r\n                              >\r\n                                &#9650;{\" \"}\r\n                                {this.state.toolTipContent.deltarecovered}\r\n                              </span>\r\n                            ) : null}\r\n                          </div>\r\n                          <div\r\n                            style={{\r\n                              fontWeight: \"bold\",\r\n                              fontSize: 16,\r\n                              color: \"rgb(83, 92, 104)\",\r\n                            }}\r\n                          >\r\n                            <span>Deaths</span>\r\n                            <br />\r\n                            <span>{this.state.toolTipContent.deaths}</span>\r\n                            <br />\r\n                            {this.state.toolTipContent.deltaconfirmed !==\r\n                            \"0\" ? (\r\n                              <span\r\n                                style={{ fontSize: 17, fontWeight: \"bold\" }}\r\n                              >\r\n                                &#9650; {this.state.toolTipContent.deltadeaths}\r\n                              </span>\r\n                            ) : null}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"d-flex justify-content-center\">\r\n                        <div\r\n                          style={{\r\n                            background: \"#404b69\",\r\n                            cursor: \"pointer\",\r\n                            fontWeight: \"bold\",\r\n                            padding: \"6px 20px\",\r\n                            borderRadius: 5,\r\n                          }}\r\n                          onClick={() =>\r\n                            this.setState({\r\n                              showState: false,\r\n                            })\r\n                          }\r\n                        >\r\n                          Back\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  ) : null}\r\n                  <div\r\n                    className=\"row india-map\"\r\n                    style={{\r\n                      border: \"2px solid rgb(255, 252, 220)\",\r\n                      marginRight: 0,\r\n                      marginTop: 15,\r\n                      marginLeft: 0,\r\n                      borderRadius: 10,\r\n                    }}\r\n                  >\r\n                    <div\r\n                      className=\"col-sm-12\"\r\n                      style={{ marginTop: 60, marginBottom: 80 }}\r\n                    >\r\n                      {this.state.showState === true ? (\r\n                        <div>\r\n                          <StateWiseMap\r\n                            stateName={this.state.stateName}\r\n                            data={\r\n                              this.state.stateWiseCity.length !== 0\r\n                                ? typeof this.state.stateWiseCity[\r\n                                    this.state.originalStateName\r\n                                  ] !== \"undefined\"\r\n                                  ? this.state.stateWiseCity[\r\n                                      this.state.originalStateName\r\n                                    ][\"districtData\"]\r\n                                  : []\r\n                                : []\r\n                            }\r\n                          />\r\n                        </div>\r\n                      ) : (\r\n                        <IndiaMap\r\n                          onStateClick={(state) => {\r\n                            this.setState({\r\n                              showState: true,\r\n                              stateName: this.filterStateName(state.state),\r\n                              originalStateName: state.state,\r\n                              toolTipContent: state,\r\n                            });\r\n                          }}\r\n                          data={\r\n                            this.state.india.length !== 0\r\n                              ? this.state.india.statewise.filter(\r\n                                  (state) => state.state !== \"Total\"\r\n                                )\r\n                              : []\r\n                          }\r\n                        />\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ) : null}\r\n              {this.state.ui === \"/card\" ? (\r\n                <>\r\n                  <div style={{ paddingTop: 5 }}>\r\n                    <input\r\n                      type=\"text\"\r\n                      placeholder=\"Search\"\r\n                      onChange={(e) =>\r\n                        this.setState({\r\n                          searchString: e.target.value,\r\n                        })\r\n                      }\r\n                    />\r\n                  </div>\r\n                  <Cards\r\n                    dailyStatus={this.state.dailyStatus}\r\n                    locationLoader={this.state.locationLoader}\r\n                    india={this.state.india}\r\n                    searchString={this.state.searchString}\r\n                  />\r\n                </>\r\n              ) : null}{\" \"}\r\n              {this.state.ui === \"/table\" ? (\r\n                <Table\r\n                  india={this.state.india}\r\n                  stateWiseCity={this.state.stateWiseCity}\r\n                />\r\n              ) : null}\r\n            </div>\r\n            <Footer />\r\n          </div>\r\n        </div>\r\n      </ErrorBoundary>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(India);\r\n","import React, { Component } from \"react\";\r\nimport ReactTable from \"react-table-6\";\r\nimport \"react-table-6/react-table.css\";\r\n\r\nclass Table extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    const data =\r\n      this.props.globalData.length !== 0\r\n        ? this.props.globalData\r\n            .filter((country) => country.title !== \"World\")\r\n            .map((country) => {\r\n              return {\r\n                country: country.title,\r\n                confirmed: Number(country.confirmed),\r\n                active: Number(country.active),\r\n                recovered: Number(country.recovered),\r\n                deaths: Number(country.deaths),\r\n                deltaConfirmed: Number(country.confirmed_today),\r\n                deltaDeaths: Number(country.deaths_today),\r\n                tests: Number(country.totaltests),\r\n              };\r\n            })\r\n        : [];\r\n\r\n    const columns =\r\n      this.props.globalData.length !== 0\r\n        ? [\r\n            {\r\n              Header: \"Country\",\r\n              accessor: \"country\",\r\n            },\r\n            {\r\n              Header: \"Confirmed\",\r\n              accessor: \"confirmed\",\r\n              Cell: (props) => {\r\n                return (\r\n                  <>\r\n                    {props.original.deltaConfirmed === 0 ? null : (\r\n                      <span\r\n                        style={{\r\n                          fontSize: 15,\r\n                          fontWeight: \"bold\",\r\n                          color: \"#e43339\",\r\n                        }}\r\n                      >\r\n                        <span style={{ fontSize: 15, fontWeight: \"bold\" }}>\r\n                          &#9650;\r\n                        </span>\r\n                        {props.original.deltaConfirmed}\r\n                      </span>\r\n                    )}{\" \"}\r\n                    <span className=\"number\">{props.value}</span>\r\n                  </>\r\n                );\r\n              },\r\n            },\r\n            {\r\n              Header: \"Active\",\r\n              accessor: \"active\",\r\n              Cell: (props) => {\r\n                return (\r\n                  <>\r\n                    <span className=\"number\">{props.value}</span>\r\n                  </>\r\n                );\r\n              },\r\n            },\r\n            {\r\n              Header: \"Recovered\",\r\n              accessor: \"recovered\",\r\n              Cell: (props) => {\r\n                return (\r\n                  <>\r\n                    <span className=\"number\">{props.value}</span>\r\n                  </>\r\n                );\r\n              },\r\n            },\r\n            {\r\n              Header: \"Deaths\",\r\n              accessor: \"deaths\",\r\n              Cell: (props) => {\r\n                return (\r\n                  <>\r\n                    {props.original.deltaDeaths === 0 ? null : (\r\n                      <span\r\n                        style={{\r\n                          fontSize: 15,\r\n                          fontWeight: \"bold\",\r\n                          color: \"#535c68\",\r\n                        }}\r\n                      >\r\n                        <span style={{ fontSize: 15, fontWeight: \"bold\" }}>\r\n                          &#9650;\r\n                        </span>\r\n                        {props.original.deltaDeaths}\r\n                      </span>\r\n                    )}{\" \"}\r\n                    <span className=\"number\">{props.value}</span>\r\n                  </>\r\n                );\r\n              },\r\n            },\r\n            {\r\n              Header: \"Tests\",\r\n              accessor: \"tests\",\r\n              Cell: (props) => {\r\n                return (\r\n                  <>\r\n                    <span className=\"number\">{props.value}</span>\r\n                  </>\r\n                );\r\n              },\r\n            },\r\n          ]\r\n        : [];\r\n    return (\r\n      <div className=\"row global-table\">\r\n        <div className=\"col-sm-12\">\r\n          <div className=\"global-table-card\">\r\n            <ReactTable\r\n              style={{ minHeight: 500 }}\r\n              data={data}\r\n              columns={columns}\r\n              defaultPageSize={10}\r\n              className=\"-striped -highlight\"\r\n              noDataText={<b>No data found</b>}\r\n              getTheadProps={(state, rowInfo, column) => {\r\n                return {\r\n                  style: {\r\n                    fontWeight: \"bold\",\r\n                  },\r\n                };\r\n              }}\r\n              filterable\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Table;\r\n","import React, { Component } from \"react\";\r\nimport ReactGA from \"react-ga\";\r\nimport \"./NumericCard.css\";\r\nimport Popover from \"react-popover\";\r\n\r\nclass NumericCard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    const colors = {\r\n      Confirmed: \"#448AFF\",\r\n      Active: \"#F9A825\",\r\n      Recovered: \"#4CAF50\",\r\n      Deaths: \"#FF5252\",\r\n    };\r\n\r\n    return (\r\n      <div className=\"row NumericCard\">\r\n        {this.props.data.map((card, index) => {\r\n          let dataToday = this.props.dataToday.filter(\r\n            (data) => Object.keys(data)[0] === Object.keys(card)[0]\r\n          );\r\n          let showPopover = this.props.showPopover.filter(\r\n            (data) => Object.keys(data)[0] === Object.keys(card)[0]\r\n          );\r\n          let popoverData = this.props.popoverData.filter(\r\n            (data) => Object.keys(data)[0] === Object.keys(card)[0]\r\n          );\r\n          return (\r\n            <div\r\n              key={index}\r\n              style={{ marginBottom: 15, marginTop: 15 }}\r\n              className={this.props.className}\r\n            >\r\n              <div\r\n                className=\"card\"\r\n                style={{\r\n                  background: colors[Object.keys(card)[0]],\r\n                }}\r\n              >\r\n                <div\r\n                  className=\"mainNumbers\"\r\n                  style={dataToday.length !== 0 ? {} : { marginBottom: 42 }}\r\n                >\r\n                  {Object.values(card)[0]}\r\n                </div>\r\n                {dataToday.length !== 0 ? (\r\n                  <div className=\"deltaNumbers\">\r\n                    <span className=\"deltaarrow\">&#9650;</span>{\" \"}\r\n                    {dataToday[0][Object.keys(card)[0]]}\r\n                    {showPopover[0][Object.keys(card)[0]] ? (\r\n                      <Popover\r\n                        body={\r\n                          <div\r\n                            style={{\r\n                              maxHeight: 400,\r\n                              overflowY: \"scroll\",\r\n                              borderRight: 10,\r\n                              background: \"white\",\r\n                              borderRadius: 10,\r\n                              padding: 15,\r\n                              color: \"#192a56\",\r\n                              fontWeight: \"bold\",\r\n                            }}\r\n                          >\r\n                            {popoverData[0][Object.keys(card)[0]]}\r\n                          </div>\r\n                        }\r\n                        preferPlace={\"below\"}\r\n                        isOpen={this.state[Object.keys(card)[0]]}\r\n                        onOuterAction={() =>\r\n                          this.setState({\r\n                            [Object.keys(card)[0]]: !this.state[\r\n                              Object.keys(card)[0]\r\n                            ],\r\n                          })\r\n                        }\r\n                      >\r\n                        <div\r\n                          onClick={() => {\r\n                            ReactGA.event({\r\n                              category: this.props.type + \" Info\",\r\n                              action:\r\n                                this.props.type +\r\n                                Object.keys(card)[0] +\r\n                                \" Info Clicked\",\r\n                              label:\r\n                                this.props.type +\r\n                                Object.keys(card)[0] +\r\n                                \" Info\",\r\n                            });\r\n                            this.setState({\r\n                              [Object.keys(card)[0]]: !this.state[\r\n                                Object.keys(card)[0]\r\n                              ],\r\n                            });\r\n                          }}\r\n                          className=\"report-tile delta-info\"\r\n                        >\r\n                          ?\r\n                        </div>\r\n                      </Popover>\r\n                    ) : null}\r\n                  </div>\r\n                ) : null}\r\n                <div style={{ fontSize: 18 }}>{Object.keys(card)[0]}</div>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NumericCard;\r\n","import React, { Component } from \"react\";\r\nimport NumericCard from \"../../../ui/NumericCard/NumericCard\";\r\n\r\nclass NumberCard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <NumericCard\r\n        type=\"Global\"\r\n        className=\"col-sm-3 col-6\"\r\n        data={[\r\n          {\r\n            Confirmed:\r\n              this.props.globalData.length !== 0\r\n                ? this.props.globalData.filter(\r\n                    (state) => state.title === \"World\"\r\n                  )[0].confirmed\r\n                : 0,\r\n          },\r\n          {\r\n            Active:\r\n              this.props.globalData.length !== 0\r\n                ? this.props.globalData.filter(\r\n                    (state) => state.title === \"World\"\r\n                  )[0].active\r\n                : 0,\r\n          },\r\n          {\r\n            Recovered:\r\n              this.props.globalData.length !== 0\r\n                ? this.props.globalData.filter(\r\n                    (state) => state.title === \"World\"\r\n                  )[0].recovered\r\n                : 0,\r\n          },\r\n          {\r\n            Deaths:\r\n              this.props.globalData.length !== 0\r\n                ? this.props.globalData.filter(\r\n                    (state) => state.title === \"World\"\r\n                  )[0].deaths\r\n                : 0,\r\n          },\r\n        ]}\r\n        showPopover={[\r\n          {\r\n            Confirmed:\r\n              this.props.globalData.length !== 0 &&\r\n              Number(\r\n                this.props.globalData.filter(\r\n                  (state) => state.title === \"World\"\r\n                )[0].confirmed_today\r\n              ) !== 0\r\n                ? true\r\n                : false,\r\n          },\r\n          {\r\n            Deaths:\r\n              this.props.globalData.length !== 0 &&\r\n              Number(\r\n                this.props.globalData.filter(\r\n                  (state) => state.title === \"World\"\r\n                )[0].deaths_today\r\n              ) !== 0\r\n                ? true\r\n                : false,\r\n          },\r\n        ]}\r\n        dataToday={[\r\n          {\r\n            Confirmed:\r\n              this.props.globalData.length !== 0\r\n                ? this.props.globalData.filter(\r\n                    (state) => state.title === \"World\"\r\n                  )[0].confirmed_today\r\n                : 0,\r\n          },\r\n          {\r\n            Deaths:\r\n              this.props.globalData.length !== 0\r\n                ? this.props.globalData.filter(\r\n                    (state) => state.title === \"World\"\r\n                  )[0].deaths_today\r\n                : 0,\r\n          },\r\n        ]}\r\n        popoverData={[\r\n          {\r\n            Confirmed: this.props.globalData\r\n              .filter(\r\n                (state) =>\r\n                  state.title !== \"World\" && state.confirmed_today !== \"\"\r\n              )\r\n              .map((state, index) => {\r\n                return (\r\n                  <div key={index}>\r\n                    {state.title}: {state.confirmed_today}\r\n                  </div>\r\n                );\r\n              }),\r\n          },\r\n          {\r\n            Deaths: this.props.globalData\r\n              .filter(\r\n                (state) => state.title !== \"World\" && state.deaths_today !== \"\"\r\n              )\r\n              .map((state, index) => {\r\n                return (\r\n                  <div key={index}>\r\n                    {state.title}: {state.deaths_today}\r\n                  </div>\r\n                );\r\n              }),\r\n          },\r\n        ]}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default NumberCard;\r\n","import React, { Component } from \"react\";\r\nimport GradientCardTitle from \"../../../ui/GradientCardTitle/GradientCardTitle\"\r\nimport SwitchBar from \"../../../ui/SwitchBar/SwitchBar\";\r\nimport SimpleLineChart from \"../../../charts/SimpleLineChart/SimpleLineChart\";\r\nimport CustomChart from \"../../../charts/PieChart/CustomChart\";\r\nimport GradientCardFooter from \"../../../ui/GradientCardFooter/GradientCardFooter\";\r\nimport SimplePieChart from \"../../../charts/SimplePieChart/SimplePieChart\";\r\nimport Select from \"react-select\";\r\n\r\nclass Analytics extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    const colourStyles = {\r\n      control: (styles) => ({\r\n        ...styles,\r\n        backgroundColor: \"white\",\r\n        marginRight: 15,\r\n        marginBottom: 15,\r\n      }),\r\n      option: (styles, { data, isDisabled, isFocused, isSelected }) => {\r\n        return {\r\n          ...styles,\r\n          backgroundColor: isDisabled\r\n            ? null\r\n            : isSelected\r\n            ? \"#404b69\"\r\n            : isFocused\r\n            ? \"white\"\r\n            : null,\r\n          color: isDisabled ? \"#ccc\" : isSelected ? \"white\" : \"#404b69\",\r\n          cursor: isDisabled ? \"not-allowed\" : \"default\",\r\n\r\n          \":active\": {\r\n            ...styles[\":active\"],\r\n            backgroundColor: !isDisabled && (isSelected ? \"#404b69\" : \"white\"),\r\n          },\r\n        };\r\n      },\r\n    };\r\n\r\n    let totalData =\r\n      this.props.globalTimelines.length !== 0\r\n        ? this.props.globalTimelines.map((cases, index) => {\r\n            return {\r\n              name: cases.reportDate,\r\n              Confirmed: Number(cases.totalConfirmed),\r\n              Active:\r\n                Number(cases.totalConfirmed) -\r\n                Number(cases.totalRecovered) -\r\n                Number(cases.deaths.total),\r\n              Recovered: Number(cases.totalRecovered),\r\n              Deaths: Number(cases.deaths.total),\r\n              dailyConfirmed: Number(cases.deltaConfirmed),\r\n              dailyActive:\r\n                index === 0\r\n                  ? Number(cases.totalConfirmed) -\r\n                    Number(cases.totalRecovered) -\r\n                    Number(cases.deaths.total)\r\n                  : Number(cases.totalConfirmed) -\r\n                    Number(cases.totalRecovered) -\r\n                    Number(cases.deaths.total) -\r\n                    (Number(\r\n                      this.props.globalTimelines[index - 1].totalConfirmed\r\n                    ) -\r\n                      Number(\r\n                        this.props.globalTimelines[index - 1].totalRecovered\r\n                      ) -\r\n                      Number(\r\n                        this.props.globalTimelines[index - 1].deaths.total\r\n                      )),\r\n              dailyRecovered: Number(cases.deltaRecovered),\r\n              dailyDeaths:\r\n                index === 0\r\n                  ? Number(cases.deaths.total)\r\n                  : Number(cases.deaths.total) -\r\n                    Number(this.props.globalTimelines[index - 1].deaths.total),\r\n            };\r\n          })\r\n        : [];\r\n\r\n    let totalDeathsByAge =\r\n      this.props.deathsRate.length !== 0\r\n        ? Object.values(\r\n            this.props.deathsRate.filter(\r\n              (type) => Object.keys(type)[0] === \"deathsRateByAge\"\r\n            )[0]\r\n          )[0].map((cases, index) => {\r\n            return {\r\n              name: cases.age,\r\n              [\"Rate (%)\"]: cases.all_cases.replace(/[^0-9.]/g, \"\"),\r\n              [\"Rate in confirmed cases(%)\"]: cases.confirmed_cases.replace(\r\n                /[^0-9.]/g,\r\n                \"\"\r\n              ),\r\n            };\r\n          })\r\n        : null;\r\n\r\n    let totalDeathsByCom =\r\n      this.props.deathsRate.length !== 0\r\n        ? Object.values(\r\n            this.props.deathsRate.filter(\r\n              (type) => Object.keys(type)[0] === \"deathsRateBycomorbidity\"\r\n            )[0]\r\n          )[0].map((cases, index) => {\r\n            return {\r\n              name: cases.age,\r\n              [\"Rate (%)\"]: cases.all_cases.replace(/[^0-9.]/g, \"\"),\r\n              [\"Rate in confirmed cases(%)\"]:\r\n                cases.confirmed_cases.replace(/[^0-9.]/g, \"\") === 0\r\n                  ? 0\r\n                  : cases.confirmed_cases.replace(/[^0-9.]/g, \"\"),\r\n            };\r\n          })\r\n        : null;\r\n\r\n    const Comparator = (a, b) => {\r\n      if (Number(a[1]) > Number(b[1])) return -1;\r\n      if (Number(a[1]) < Number(b[1])) return 1;\r\n      return 0;\r\n    };\r\n\r\n    var pieChartData =\r\n      this.props.globalData.length !== 0\r\n        ? this.props.globalData\r\n            .filter((country) => country.title !== \"World\")\r\n            .map((state) => {\r\n              return [state.title, Number(state[this.props.filterByCases])];\r\n            })\r\n        : [];\r\n\r\n    var deathsBySex =\r\n      this.props.deathsRate.length !== 0\r\n        ? Object.values(\r\n            this.props.deathsRate.filter(\r\n              (type) => Object.keys(type)[0] === \"deathsRateBySex\"\r\n            )[0]\r\n          )[0].map((cases, index) => {\r\n            return {\r\n              name: cases.sex,\r\n              value: Number(cases.confirmed_cases.replace(/[^0-9.]/g, \"\")),\r\n            };\r\n          })\r\n        : [];\r\n\r\n    pieChartData = pieChartData.sort(Comparator).slice(0, 10);\r\n\r\n    let Columns = [\r\n      { type: \"string\", label: \"name\" },\r\n      { type: \"number\", label: \"value\" },\r\n    ];\r\n\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-sm-4 col-12\">\r\n          <div className=\"gradient-card\">\r\n            <GradientCardTitle title={\"Total Confirmed cases daily\"} />\r\n            <SwitchBar\r\n              options={[\"Area\", \"Bar\"]}\r\n              optionValues={[\"AreaChart\", \"BarChart\"]}\r\n              onClick={(prop) => {\r\n                this.props.onSwitchBar(prop);\r\n              }}\r\n              showGlobalChartType={this.props.showGlobalChartType}\r\n            />\r\n            <SimpleLineChart\r\n              chart={this.props.showGlobalChartType}\r\n              customTooltip={true}\r\n              grid={false}\r\n              data={totalData}\r\n              labels={[\"Confirmed\"]}\r\n              colors={[\"#e43339\"]}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"col-sm-4 col-12\">\r\n          <div className=\"gradient-card\">\r\n            <GradientCardTitle title={\"Total Active cases daily\"} />\r\n            <SwitchBar\r\n              options={[\"Area\", \"Bar\"]}\r\n              optionValues={[\"AreaChart\", \"BarChart\"]}\r\n              onClick={(prop) => {\r\n                this.props.onSwitchBar(prop);\r\n              }}\r\n              showGlobalChartType={this.props.showGlobalChartType}\r\n            />\r\n            <SimpleLineChart\r\n              chart={this.props.showGlobalChartType}\r\n              customTooltip={true}\r\n              grid={false}\r\n              data={totalData}\r\n              labels={[\"Active\"]}\r\n              colors={[\"#192a56\"]}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"col-sm-4 col-12\">\r\n          <div className=\"gradient-card\">\r\n            <GradientCardTitle title={\"Total deaths daily\"} />\r\n            <SwitchBar\r\n              options={[\"Area\", \"Bar\"]}\r\n              optionValues={[\"AreaChart\", \"BarChart\"]}\r\n              onClick={(prop) => {\r\n                this.props.onSwitchBar(prop);\r\n              }}\r\n              showGlobalChartType={this.props.showGlobalChartType}\r\n            />\r\n            <SimpleLineChart\r\n              chart={this.props.showGlobalChartType}\r\n              customTooltip={true}\r\n              grid={false}\r\n              data={totalData}\r\n              labels={[\"Deaths\"]}\r\n              colors={[\"#535c68\"]}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"col-sm-6 col-12\">\r\n          <div className=\"gradient-card\">\r\n            <GradientCardTitle title={\"Top 10 countries by cases\"} />\r\n            <div className=\"row\" style={{ justifyContent: \"center\" }}>\r\n              <div className=\"col-sm-6\">\r\n                <Select\r\n                  isClearable={false}\r\n                  isSearchable={false}\r\n                  onChange={(selectedOption) => {\r\n                    this.props.onChange(selectedOption);\r\n                  }}\r\n                  styles={colourStyles}\r\n                  placeholder=\"Top 10 Confirmed\"\r\n                  options={[\r\n                    { value: \"confirmed\", label: \"Top 10 Confirmed\" },\r\n                    { value: \"active\", label: \"Top 10 Active\" },\r\n                    { value: \"deaths\", label: \"Top 10 Deaths\" },\r\n                    { value: \"recovered\", label: \"Top 10 Recovered\" },\r\n                  ]}\r\n                />\r\n              </div>\r\n            </div>\r\n            <CustomChart\r\n              placeholder={false}\r\n              emptyClassName={\"m-t-40\"}\r\n              chartArea={{ left: 10, top: 15, right: 10, bottom: 15 }}\r\n              rows={pieChartData}\r\n              columns={Columns}\r\n              chartType={\"PieChart\"}\r\n              height={\"270px\"}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"col-sm-6 col-12\">\r\n          <div className=\"gradient-card\">\r\n            <GradientCardTitle title={\"Fatality Rate By Age\"} />\r\n            <SimpleLineChart\r\n              chart={\"BarChart\"}\r\n              customTooltip={true}\r\n              grid={false}\r\n              data={totalDeathsByAge}\r\n              labels={[\"Rate (%)\"]}\r\n              colors={[\"#192a56\"]}\r\n            />\r\n            <GradientCardFooter\r\n              content={\r\n                \"The percentages do not have to add up to 100%, as they do NOT represent share of deaths by age group.\"\r\n              }\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"col-sm-6 col-12\">\r\n          <div className=\"gradient-card\">\r\n            <GradientCardTitle title={\"Fatality Rate By Gender\"} />\r\n            <div style={{ marginBottom: -24 }}>\r\n              <span style={{ color: \"#192a56\", fontWeight: \"bold\" }}>\r\n                Male{\" \"}\r\n                {deathsBySex.length !== 0\r\n                  ? deathsBySex.filter((stat) => stat.name === \"Male\")[0].value\r\n                  : 0}\r\n              </span>\r\n              <span\r\n                style={{\r\n                  marginLeft: 15,\r\n                  color: \"rgb(255, 82, 82)\",\r\n                  fontWeight: \"bold\",\r\n                }}\r\n              >\r\n                Female{\" \"}\r\n                {deathsBySex.length !== 0\r\n                  ? deathsBySex.filter((stat) => stat.name === \"Female\")[0]\r\n                      .value\r\n                  : 0}\r\n              </span>\r\n            </div>\r\n            <SimplePieChart data={deathsBySex} />\r\n            <GradientCardFooter\r\n              content={\r\n                \"The percentages do not have to add up to 100%, as they do NOT represent share of deaths by age group.\"\r\n              }\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"col-sm-6 col-12\">\r\n          <div className=\"gradient-card\">\r\n            <GradientCardTitle title={\"Fatality Rate By Comorbility\"} />\r\n            <SimpleLineChart\r\n              chart={\"BarChart\"}\r\n              customTooltip={true}\r\n              grid={false}\r\n              data={totalDeathsByCom}\r\n              labels={[\"Rate (%)\", \"Rate in confirmed cases(%)\"]}\r\n              colors={[\"#192a56\", \"#192a56\"]}\r\n            />\r\n            <GradientCardFooter\r\n              content={\r\n                \"The percentages do not have to add up to 100%, as they do NOT represent share of deaths by age group.\"\r\n              }\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Analytics;\r\n","import React from \"react\";\r\nimport \"./MapSwitchBar.css\";\r\n\r\nconst MapSwitchBar = (props) => {\r\n  return (\r\n    <div className=\"MapSwitchBar\">\r\n      {props.options.map((option, index) => {\r\n        return (\r\n          <div\r\n            key={index}\r\n            className={\r\n              props.mapFilter === props.optionValues[index]\r\n                ? \"mapswitch-active\"\r\n                : \"mapswitch\"\r\n            }\r\n            style={\r\n              props.mapFilter === props.optionValues[index]\r\n                ? {\r\n                    background: props.colors[index],\r\n                    color: \"white\",\r\n                  }\r\n                : {\r\n                    border: \"2px solid \" + props.colors[index],\r\n                    color: props.colors[index],\r\n                  }\r\n            }\r\n            onClick={() => props.onClick(props.optionValues[index])}\r\n          >\r\n            {option}\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MapSwitchBar;\r\n","import React from \"react\";\r\nimport { scaleLog } from \"d3-scale\";\r\nimport { ComposableMap, Geographies, Geography } from \"react-simple-maps\";\r\nimport Countrys from \"./ISO2.json\";\r\n\r\nconst geoUrl =\r\n  \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";\r\n\r\nconst colorScale = scaleLog()\r\n  .domain([1, 10])\r\n  .range([\r\n    \"#ffedea\",\r\n    \"#ffcec5\",\r\n    \"#ffad9f\",\r\n    \"#ff8a75\",\r\n    \"#ff5533\",\r\n    \"#e2492d\",\r\n    \"#be3d26\",\r\n    \"#9a311f\",\r\n    \"#782618\",\r\n  ]);\r\n\r\nconst MapChart = ({ setTooltipContent, data, mapFilter }) => {\r\n  return (\r\n    <ComposableMap\r\n      height={550}\r\n      width={700}\r\n      data-tip=\"\"\r\n      projectionConfig={{\r\n        rotate: [-10, 0, 0],\r\n        scale: 147,\r\n      }}\r\n    >\r\n      {data.length > 0 && (\r\n        <Geographies geography={geoUrl}>\r\n          {({ geographies }) =>\r\n            geographies.map((geo) => {\r\n              const d = data.find(\r\n                (s) => Countrys[s.title] === geo.properties.ISO_A2\r\n              );\r\n              //VirusTracker\r\n              // const d = data.find((s) => s.code === geo.properties.ISO_A2);\r\n              //Covid19Info\r\n              // const d = data.find(\r\n              //   (s) => Object.keys(s)[0] === geo.properties.ISO_A3\r\n              // );\r\n              return (\r\n                <Geography\r\n                  key={geo.rsmKey}\r\n                  geography={geo}\r\n                  onMouseEnter={() => {\r\n                    if (typeof d !== \"undefined\") {\r\n                      setTooltipContent([\r\n                        { title: geo.properties.NAME_LONG },\r\n                        { Confirmed: d.confirmed === \"\" ? 0 : d.confirmed },\r\n                        { Deaths: d.deaths === \"\" ? 0 : d.deaths },\r\n                        { Recovered: d.recovered === \"\" ? 0 : d.recovered },\r\n                        {\r\n                          DeathsToday:\r\n                            d.deaths_today === \"\" ? 0 : d.deaths_today,\r\n                        },\r\n                        {\r\n                          ConfirmedToday:\r\n                            d.confirmed_today === \"\" ? 0 : d.confirmed_today,\r\n                        },\r\n                      ]);\r\n                      // VirusTracker\r\n                      // setTooltipContent([\r\n                      //   { title: d.title },\r\n                      //   { Confirmed: d.total_cases },\r\n                      //   { Deaths: d.total_deaths },\r\n                      //   { Recovered: d.total_recovered },\r\n                      // ]);\r\n                      // //Covid19Info\r\n                      // setTooltipContent([\r\n                      //   { title: Object.keys(d)[0] },\r\n                      //   { Confirmed: Object.values(d)[0].confirmed },\r\n                      //   { Deaths: Object.values(d)[0].deaths },\r\n                      //   { Recovered: Object.values(d)[0].recovered },\r\n                      // ]);\r\n                    } else {\r\n                      setTooltipContent([\r\n                        { title: geo.properties.NAME },\r\n                        { Confirmed: 0 },\r\n                        { Deaths: 0 },\r\n                        { Recovered: 0 },\r\n                        { DeathsToday: 0 },\r\n                        { ConfirmedToday: 0 },\r\n                      ]);\r\n                    }\r\n                  }}\r\n                  onMouseLeave={() => {\r\n                    setTooltipContent(\"\");\r\n                  }}\r\n                  style={{\r\n                    hover: {\r\n                      fill: \"#F53\",\r\n                      outline: \"none\",\r\n                    },\r\n                    pressed: {\r\n                      fill: \"#E42\",\r\n                      outline: \"none\",\r\n                    },\r\n                  }}\r\n                  fill={\r\n                    d\r\n                      ? colorScale(Number(d[mapFilter]))\r\n                      : // ? colorScale(Number(Object.values(d)[0][mapFilter])) // covid19Info\r\n                        \"#F5F4F6\"\r\n                  }\r\n                />\r\n              );\r\n            })\r\n          }\r\n        </Geographies>\r\n      )}\r\n    </ComposableMap>\r\n  );\r\n};\r\n\r\nexport default MapChart;\r\n","import React, { Component } from \"react\";\r\nimport MapSwitchBar from \"../../../ui/MapSwitchBar/MapSwitchBar\";\r\nimport DataMap from \"../../../charts/DataMap/DataMap\";\r\nimport ReactTooltip from \"react-tooltip\";\r\n\r\nclass GlobalMap extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  renderTooltipLabelColor(caseType) {\r\n    switch (caseType[0]) {\r\n      case \"Confirmed\":\r\n        return \"rgb(64, 75, 105)\";\r\n\r\n      case \"Deaths\":\r\n        return \"rgb(255, 82, 82)\";\r\n\r\n      case \"Recovered\":\r\n        return \"rgb(76, 175, 80)\";\r\n\r\n      default:\r\n        return \"rgb(64, 75, 105)\";\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"row\" style={{ marginTop: 20 }}>\r\n        <div className=\"col-sm-12 col-12\" style={{ minHeight: \"368px\" }}>\r\n          <div className=\"global-map\">\r\n            <MapSwitchBar\r\n              mapFilter={this.props.mapFilter}\r\n              options={[\"Confirmed\", \"Recovered\", \"Deaths\"]}\r\n              optionValues={[\"confirmed\", \"recovered\", \"deaths\"]}\r\n              colors={[\r\n                \"rgb(68, 138, 255)\",\r\n                \"rgb(76, 175, 80)\",\r\n                \"rgb(255, 82, 82)\",\r\n              ]}\r\n              onClick={(prop) => this.props.onMapSwitch(prop)}\r\n            />\r\n            <DataMap\r\n              mapFilter={this.props.mapFilter}\r\n              data={\r\n                this.props.globalData.length !== 0\r\n                  ? this.props.globalData.filter(\r\n                      (location) => location.title !== \"World\"\r\n                    )\r\n                  : []\r\n              }\r\n              setTooltipContent={(content) =>\r\n                this.props.onSetTooltipContent(content)\r\n              }\r\n            />\r\n            <ReactTooltip>\r\n              {this.props.setTooltipContent.length !== 0 ? (\r\n                <div>\r\n                  <span\r\n                    style={{\r\n                      color: this.renderTooltipLabelColor(\r\n                        Object.keys(this.props.setTooltipContent[0])\r\n                      ),\r\n                      fontWeight: \"bold\",\r\n                      fontSize: 16,\r\n                    }}\r\n                  >\r\n                    {Object.values(this.props.setTooltipContent[0])}\r\n                  </span>\r\n                  <br />\r\n                  <span\r\n                    style={{\r\n                      color: this.renderTooltipLabelColor(\r\n                        Object.keys(this.props.setTooltipContent[0])\r\n                      ),\r\n                      fontWeight: \"bold\",\r\n                      fontSize: 16,\r\n                    }}\r\n                  >\r\n                    {Object.keys(this.props.setTooltipContent[1])} {\": \"}\r\n                    {Object.values(this.props.setTooltipContent[1])}{\" \"}\r\n                    <span style={{ fontSize: 20, fontWeight: \"bold\" }}>\r\n                      &#9650;\r\n                    </span>\r\n                    {Object.values(this.props.setTooltipContent[5])}\r\n                  </span>\r\n                  <br />\r\n                  <span\r\n                    style={{\r\n                      color: this.renderTooltipLabelColor(\r\n                        Object.keys(this.props.setTooltipContent[2])\r\n                      ),\r\n                      fontWeight: \"bold\",\r\n                      fontSize: 16,\r\n                    }}\r\n                  >\r\n                    {Object.keys(this.props.setTooltipContent[2])} {\": \"}\r\n                    {Object.values(this.props.setTooltipContent[2])}{\" \"}\r\n                    <span style={{ fontSize: 20, fontWeight: \"bold\" }}>\r\n                      &#9650;\r\n                    </span>\r\n                    {Object.values(this.props.setTooltipContent[4])}\r\n                  </span>\r\n                  <br />\r\n                  <span\r\n                    style={{\r\n                      color: this.renderTooltipLabelColor(\r\n                        Object.keys(this.props.setTooltipContent[3])\r\n                      ),\r\n                      fontWeight: \"bold\",\r\n                      fontSize: 16,\r\n                    }}\r\n                  >\r\n                    {Object.keys(this.props.setTooltipContent[3])} {\": \"}\r\n                    {Object.values(this.props.setTooltipContent[3])}\r\n                  </span>\r\n                  <br />\r\n                </div>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n            </ReactTooltip>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GlobalMap;\r\n","import React from \"react\";\r\nimport \"./DataCard.css\";\r\n\r\nconst colors = {\r\n  Confirmed: \"#e43339\",\r\n  Deaths: \"#404b69\",\r\n};\r\n\r\nconst DataCard = (props) => {\r\n  return (\r\n    <div key={props.index} className=\"col-sm-4 DataCard\">\r\n      <div className=\"data-card\">\r\n        <label className=\"data-card-title\">{props.title}</label>\r\n        <br />\r\n        <div className=\"row justify-content-center\">\r\n          {props.data.map((data, index) => {\r\n            let showIcon = props.showIcon.filter(\r\n              (content) => Object.keys(content)[0] === Object.keys(data)[0]\r\n            );\r\n            let showData = props.dataToday.filter(\r\n              (content) => Object.keys(content)[0] === Object.keys(data)[0]\r\n            );\r\n\r\n            return (\r\n              <div className=\"data-card-label\">\r\n                <div>\r\n                  {Object.values(data)}\r\n                  {showIcon.length !== 0 && showIcon[0] ? (\r\n                    <span\r\n                      className=\"data-card-span-label\"\r\n                      style={{\r\n                        color: colors[Object.keys(data)],\r\n                      }}\r\n                    >\r\n                      {\"  \"}\r\n                      <span className=\"data-card-span-value\">&#9650;</span>\r\n                      {showIcon.length !== 0 && showIcon[0]\r\n                        ? Object.values(showData[0])[0]\r\n                        : null}\r\n                    </span>\r\n                  ) : null}\r\n                </div>\r\n                <div>{Object.keys(data)}</div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DataCard;\r\n","import React, { Component } from \"react\";\r\nimport DataCard from \"../../../ui/DataCard/DataCard\";\r\nimport Virus from \"../../../../assets/virus.gif\"\r\n\r\nclass Cards extends Component {\r\n  render() {\r\n    return this.props.locationLoader === true ? (\r\n      <div>\r\n        <img src={Virus} alt=\"Loader\" />\r\n      </div>\r\n    ) : (\r\n      <>\r\n        <div style={{ marginBottom: 20 }}>\r\n          <input\r\n            defaultValue={this.props.searchString}\r\n            type=\"text\"\r\n            placeholder=\"Search\"\r\n            onChange={(e) => this.props.onSearch(e)}\r\n          />\r\n        </div>\r\n        <div className=\"row\">\r\n          {this.props.globalData.length !== 0\r\n            ? this.props.globalData\r\n                .filter(\r\n                  (location) =>\r\n                    location.title !== \"World\" &&\r\n                    location.title\r\n                      .toLowerCase()\r\n                      .includes(this.props.searchString)\r\n                )\r\n                .map((location, index) => {\r\n                  return (\r\n                    <DataCard\r\n                      key={index}\r\n                      title={location.title}\r\n                      location={location}\r\n                      index={index}\r\n                      data={[\r\n                        {\r\n                          Confirmed: location.confirmed,\r\n                        },\r\n                        {\r\n                          Active: location.active,\r\n                        },\r\n                        {\r\n                          Deaths: location.deaths,\r\n                        },\r\n                        {\r\n                          Recovered: location.recovered,\r\n                        },\r\n                        { Serious: location.critical },\r\n                        { Tests: location.totaltests },\r\n                      ]}\r\n                      showIcon={[\r\n                        {\r\n                          Confirmed:\r\n                            location.confirmed_today !== \"\" ? true : false,\r\n                        },\r\n                        {\r\n                          Deaths: location.deaths_today !== \"\" ? true : false,\r\n                        },\r\n                      ]}\r\n                      dataToday={[\r\n                        {\r\n                          Confirmed: location.confirmed_today,\r\n                        },\r\n                        {\r\n                          Deaths: location.deaths_today,\r\n                        },\r\n                      ]}\r\n                    />\r\n                  );\r\n                })\r\n            : null}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Cards;\r\n","import React, { Component, Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport \"../../../index.css\"\r\n\r\nconst LEFT_PAGE = 'LEFT';\r\nconst RIGHT_PAGE = 'RIGHT';\r\n\r\n/**\r\n * Helper method for creating a range of numbers\r\n * range(1, 5) => [1, 2, 3, 4, 5]\r\n */\r\nconst range = (from, to, step = 1) => {\r\n  let i = from;\r\n  const range = [];\r\n\r\n  while (i <= to) {\r\n    range.push(i);\r\n    i += step;\r\n  }\r\n\r\n  return range;\r\n}\r\n\r\nclass Pagination extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    const { totalRecords = null, pageLimit = 30, pageNeighbours = 0 } = props;\r\n\r\n    this.pageLimit = typeof pageLimit === 'number' ? pageLimit : 30;\r\n    this.totalRecords = typeof totalRecords === 'number' ? totalRecords : 0;\r\n\r\n    // pageNeighbours can be: 0, 1 or 2\r\n    this.pageNeighbours = typeof pageNeighbours === 'number'\r\n      ? Math.max(0, Math.min(pageNeighbours, 2))\r\n      : 0;\r\n\r\n    this.totalPages = Math.ceil(this.totalRecords / this.pageLimit);\r\n\r\n    this.state = { currentPage: 1 };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.gotoPage(1);\r\n  }\r\n\r\n  gotoPage = page => {\r\n    const { onPageChanged = f => f } = this.props;\r\n\r\n    const currentPage = Math.max(0, Math.min(page, this.totalPages));\r\n\r\n    const paginationData = {\r\n      currentPage,\r\n      totalPages: this.totalPages,\r\n      pageLimit: this.pageLimit,\r\n      totalRecords: this.totalRecords\r\n    };\r\n\r\n    this.setState({ currentPage }, () => onPageChanged(paginationData));\r\n  }\r\n\r\n  handleClick = page => evt => {\r\n    evt.preventDefault();\r\n    this.gotoPage(page);\r\n  }\r\n\r\n  handleMoveLeft = evt => {\r\n    evt.preventDefault();\r\n    this.gotoPage(this.state.currentPage - (this.pageNeighbours * 2) - 1);\r\n  }\r\n\r\n  handleMoveRight = evt => {\r\n    evt.preventDefault();\r\n    this.gotoPage(this.state.currentPage + (this.pageNeighbours * 2) + 1);\r\n  }\r\n\r\n  /**\r\n   * Let's say we have 10 pages and we set pageNeighbours to 2\r\n   * Given that the current page is 6\r\n   * The pagination control will look like the following:\r\n   *\r\n   * (1) < {4 5} [6] {7 8} > (10)\r\n   *\r\n   * (x) => terminal pages: first and last page(always visible)\r\n   * [x] => represents current page\r\n   * {...x} => represents page neighbours\r\n   */\r\n  fetchPageNumbers = () => {\r\n\r\n    const totalPages = this.totalPages;\r\n    const currentPage = this.state.currentPage;\r\n    const pageNeighbours = this.pageNeighbours;\r\n\r\n    /**\r\n     * totalNumbers: the total page numbers to show on the control\r\n     * totalBlocks: totalNumbers + 2 to cover for the left(<) and right(>) controls\r\n     */\r\n    const totalNumbers = (this.pageNeighbours * 2) + 3;\r\n    const totalBlocks = totalNumbers + 2;\r\n\r\n    if (totalPages > totalBlocks) {\r\n\r\n      const startPage = Math.max(2, currentPage - pageNeighbours);\r\n      const endPage = Math.min(totalPages - 1, currentPage + pageNeighbours);\r\n\r\n      let pages = range(startPage, endPage);\r\n\r\n      /**\r\n       * hasLeftSpill: has hidden pages to the left\r\n       * hasRightSpill: has hidden pages to the right\r\n       * spillOffset: number of hidden pages either to the left or to the right\r\n       */\r\n      const hasLeftSpill = startPage > 2;\r\n      const hasRightSpill = (totalPages - endPage) > 1;\r\n      const spillOffset = totalNumbers - (pages.length + 1);\r\n\r\n      switch (true) {\r\n        // handle: (1) < {5 6} [7] {8 9} (10)\r\n        case (hasLeftSpill && !hasRightSpill): {\r\n          const extraPages = range(startPage - spillOffset, startPage - 1);\r\n          pages = [LEFT_PAGE, ...extraPages, ...pages];\r\n          break;\r\n        }\r\n\r\n        // handle: (1) {2 3} [4] {5 6} > (10)\r\n        case (!hasLeftSpill && hasRightSpill): {\r\n          const extraPages = range(endPage + 1, endPage + spillOffset);\r\n          pages = [...pages, ...extraPages, RIGHT_PAGE];\r\n          break;\r\n        }\r\n\r\n        // handle: (1) < {4 5} [6] {7 8} > (10)\r\n        case (hasLeftSpill && hasRightSpill):\r\n        default: {\r\n          pages = [LEFT_PAGE, ...pages, RIGHT_PAGE];\r\n          break;\r\n        }\r\n      }\r\n\r\n      return [1, ...pages, totalPages];\r\n\r\n    }\r\n\r\n    return range(1, totalPages);\r\n\r\n  }\r\n\r\n  render() {\r\n\r\n    if (!this.totalRecords || this.totalPages === 1) return null;\r\n\r\n    const { currentPage } = this.state;\r\n    const pages = this.fetchPageNumbers();\r\n\r\n    return (\r\n      <Fragment>\r\n        <nav aria-label=\"Countries Pagination\">\r\n          <ul className=\"pagination\">\r\n            { pages.map((page, index) => {\r\n\r\n              if (page === LEFT_PAGE) return (\r\n                <li key={index} className=\"page-item\">\r\n                  <a className=\"page-link\" href=\"#\" aria-label=\"Previous\" onClick={this.handleMoveLeft}>\r\n                    <span aria-hidden=\"true\">&laquo;</span>\r\n                    <span className=\"sr-only\">Previous</span>\r\n                  </a>\r\n                </li>\r\n              );\r\n\r\n              if (page === RIGHT_PAGE) return (\r\n                <li key={index} className=\"page-item\">\r\n                  <a className=\"page-link\" href=\"#\" aria-label=\"Next\" onClick={this.handleMoveRight}>\r\n                    <span aria-hidden=\"true\">&raquo;</span>\r\n                    <span className=\"sr-only\">Next</span>\r\n                  </a>\r\n                </li>\r\n              );\r\n\r\n              return (\r\n                <li key={index} className={`page-item${ currentPage === page ? ' active' : ''}`}>\r\n                  <a className=\"page-link\" href=\"#\" onClick={ this.handleClick(page) }>{ page }</a>\r\n                </li>\r\n              );\r\n\r\n            }) }\r\n\r\n          </ul>\r\n        </nav>\r\n      </Fragment>\r\n    );\r\n\r\n  }\r\n}\r\n\r\nPagination.propTypes = {\r\n  totalRecords: PropTypes.number.isRequired,\r\n  pageLimit: PropTypes.number,\r\n  pageNeighbours: PropTypes.number,\r\n  onPageChanged: PropTypes.func\r\n};\r\n\r\nexport default Pagination;","import React, { Component } from \"react\";\r\nimport Virus from \"../../../../assets/virus.gif\";\r\nimport Countrys from \"../../../../utils/CountryList.json\";\r\nimport Select from \"react-select\";\r\nimport SimpleLineChart from \"../../../charts/SimpleLineChart/SimpleLineChart\";\r\nimport Pagination from \"../../../ui/Pagination/Pagination\";\r\nimport _ from \"lodash\";\r\n\r\nclass ChartsCard extends Component {\r\n  render() {\r\n    const colourStyles = {\r\n      control: (styles) => ({\r\n        ...styles,\r\n        backgroundColor: \"white\",\r\n        marginRight: 15,\r\n        marginBottom: 15,\r\n      }),\r\n      option: (styles, { data, isDisabled, isFocused, isSelected }) => {\r\n        return {\r\n          ...styles,\r\n          backgroundColor: isDisabled\r\n            ? null\r\n            : isSelected\r\n            ? \"#404b69\"\r\n            : isFocused\r\n            ? \"white\"\r\n            : null,\r\n          color: isDisabled ? \"#ccc\" : isSelected ? \"white\" : \"#404b69\",\r\n          cursor: isDisabled ? \"not-allowed\" : \"default\",\r\n\r\n          \":active\": {\r\n            ...styles[\":active\"],\r\n            backgroundColor: !isDisabled && (isSelected ? \"#404b69\" : \"white\"),\r\n          },\r\n        };\r\n      },\r\n    };\r\n\r\n    const options = Object.keys(Countrys).map((location) => {\r\n      return {\r\n        value: location,\r\n        label: Countrys[location],\r\n      };\r\n    });\r\n\r\n    let date = new Date();\r\n    let todayDate =\r\n      date.getMonth() + 1 + \"/\" + date.getDate() + \"/\" + date.getFullYear();\r\n\r\n    return (\r\n      <>\r\n        <div>\r\n          <Select\r\n            isClearable={true}\r\n            onChange={(selectedOption) => {\r\n              this.setState({\r\n                timelines: [],\r\n                selectedCountry: true,\r\n              });\r\n              this.getChartsData(\r\n                selectedOption === null\r\n                  ? _.chunk(Object.keys(Countrys), 9)[0]\r\n                  : [selectedOption.value.toUpperCase()]\r\n              );\r\n            }}\r\n            styles={colourStyles}\r\n            options={options}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          {this.props.locationLoader === true ? (\r\n            <div style={{ width: \"100%\" }}>\r\n              <img src={Virus} alt=\"Loader\" />\r\n            </div>\r\n          ) : this.props.timelines.length !== 0 ? (\r\n            this.props.timelines.map((timeline, index1) => {\r\n              let data = Object.keys(timeline.timelineitems[0])\r\n                .filter((data) => data !== \"stat\" && data !== todayDate)\r\n                .map((dataKey, index) => {\r\n                  return {\r\n                    name: dataKey,\r\n                    Confirmed: timeline.timelineitems[0][dataKey].total_cases,\r\n                    Deaths: timeline.timelineitems[0][dataKey].total_deaths,\r\n                    Recovered:\r\n                      timeline.timelineitems[0][dataKey].total_recoveries,\r\n                    [\"New Conf.\"]:\r\n                      timeline.timelineitems[0][dataKey].new_daily_cases,\r\n                    [\"New Deaths\"]:\r\n                      timeline.timelineitems[0][dataKey].new_daily_deaths,\r\n                  };\r\n                });\r\n              let cardValue =\r\n                this.props.cards.length !== 0 &&\r\n                typeof Object.values(\r\n                  this.props.cards[0].countryitems[0]\r\n                ).filter(\r\n                  (country) =>\r\n                    country !== \"ok\" &&\r\n                    country.title === timeline.countrytimelinedata[0].info.title\r\n                )[0];\r\n              let filteredTitle = Object.values(\r\n                this.props.cards[0].countryitems[0]\r\n              ).filter(\r\n                (country) =>\r\n                  country !== \"ok\" &&\r\n                  country.title === timeline.countrytimelinedata[0].info.title\r\n              )[0];\r\n              let totalCases = Object.values(timeline.timelineitems[0])[\r\n                Object.values(timeline.timelineitems[0]).length - 2\r\n              ];\r\n              let confirmed =\r\n                cardValue !== \"undefined\"\r\n                  ? filteredTitle.total_cases\r\n                  : totalCases.total_cases;\r\n              let deaths =\r\n                cardValue !== \"undefined\"\r\n                  ? filteredTitle.total_deaths\r\n                  : totalCases.total_deaths;\r\n              let recovered =\r\n                cardValue !== \"undefined\"\r\n                  ? filteredTitle.total_recovered\r\n                  : totalCases.total_recoveries;\r\n              let NewConfirmed =\r\n                cardValue !== \"undefined\"\r\n                  ? filteredTitle.total_new_cases_today\r\n                  : totalCases.new_daily_cases;\r\n              let NewDeaths =\r\n                cardValue !== \"undefined\"\r\n                  ? filteredTitle.total_new_deaths_today\r\n                  : totalCases.new_daily_deaths;\r\n              let countryItemsFiltered = Object.values(\r\n                this.props.cards[0].countryitems[0]\r\n              ).filter(\r\n                (country) =>\r\n                  country.title === timeline.countrytimelinedata[0].info.title\r\n              )[0];\r\n              if (cardValue !== \"undefined\") {\r\n                data.push({\r\n                  name: todayDate,\r\n                  Confirmed: countryItemsFiltered.total_cases,\r\n                  Deaths: countryItemsFiltered.total_deaths,\r\n                  Recovered: countryItemsFiltered.total_recovered,\r\n                  [\"New Conf.\"]: countryItemsFiltered.total_new_cases_today,\r\n                  [\"New Deaths\"]: countryItemsFiltered.total_new_deaths_today,\r\n                });\r\n              }\r\n              return (\r\n                <div key={index1} className=\"col-sm-4 Chart-Card\">\r\n                  <div className=\"chart-card-style\">\r\n                    <label className=\"chart-card-title\">\r\n                      {timeline.countrytimelinedata[0].info.title}\r\n                    </label>\r\n                    <br />\r\n                    <div className=\"row justify-content-center\">\r\n                      <div className=\"chart-card-label-confirmed\">\r\n                        <div>\r\n                          {confirmed}\r\n                          {NewConfirmed === 0 ? null : (\r\n                            <span style={{ fontSize: 13 }}>\r\n                              {\"  \"}\r\n                              <span\r\n                                style={{\r\n                                  fontSize: 17,\r\n                                  fontWeight: \"bold\",\r\n                                }}\r\n                              >\r\n                                &#9650;\r\n                              </span>\r\n                              {NewConfirmed}\r\n                            </span>\r\n                          )}\r\n                        </div>\r\n                        <div>Confirmed</div>\r\n                      </div>\r\n                      <div className=\"chart-card-label-deaths\">\r\n                        <div>\r\n                          {deaths}\r\n                          {NewDeaths === 0 ? null : (\r\n                            <span style={{ fontSize: 13 }}>\r\n                              {\"  \"}\r\n                              <span\r\n                                style={{\r\n                                  fontSize: 17,\r\n                                  fontWeight: \"bold\",\r\n                                }}\r\n                              >\r\n                                &#9650;\r\n                              </span>\r\n                              {NewDeaths}\r\n                            </span>\r\n                          )}\r\n                        </div>\r\n                        <div>Deaths</div>\r\n                      </div>\r\n                      <div className=\"chart-card-label-recovered\">\r\n                        <div>{recovered}</div>\r\n                        <div>Recovered</div>\r\n                      </div>\r\n                    </div>\r\n                    <SimpleLineChart\r\n                      chart={\"AreaChart\"}\r\n                      labels={[\r\n                        \"Confirmed\",\r\n                        \"Recovered\",\r\n                        \"Deaths\",\r\n                        \"New Conf.\",\r\n                        \"New Deaths\",\r\n                      ]}\r\n                      colors={[\r\n                        \"#e43339\",\r\n                        \"#006266\",\r\n                        \"#535c68\",\r\n                        \"#192a56\",\r\n                        \"#192a56\",\r\n                      ]}\r\n                      data={data}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              );\r\n            })\r\n          ) : null}\r\n          <br />\r\n          {!this.props.selectedCountry ? (\r\n            <div className=\"row\" style={{ width: \"100%\", padding: 30 }}>\r\n              <Pagination\r\n                totalRecords={Object.keys(Countrys).length}\r\n                pageLimit={9}\r\n                pageNeighbours={1}\r\n                onPageChanged={this.props.onPageChanged}\r\n              />\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ChartsCard;\r\n","import React, { Component } from \"react\";\r\nimport \"../../../../src/components/Backup/App.css\";\r\nimport \"react-table-6/react-table.css\";\r\nimport ErrorBoundary from \"../../../components/ui/ErrorBoundry/ErrorBoundry\";\r\nimport Countrys from \"../../../utils/CountryList.json\";\r\nimport _ from \"lodash\";\r\nimport \"../../container/Global/Global.css\";\r\nimport Header from \"../../../components/ui/Header/Header\";\r\nimport NavigationBar from \"../../../components/ui/NavigationBar/NavigationBar\";\r\nimport Footer from \"../../../components/ui/Footer/Footer\";\r\nimport Table from \"./SubComponents/Table\";\r\nimport NumberCard from \"./SubComponents/NumberCard\";\r\nimport Analytics from \"./SubComponents/Analytics\";\r\nimport GlobalMap from \"./SubComponents/GlobalMap\";\r\nimport Cards from \"./SubComponents/Cards\";\r\nimport ChartsCard from \"./SubComponents/ChartsCard\";\r\n\r\nclass Global extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showGlobalChartType: \"AreaChart\",\r\n      searchString: \"\",\r\n      cards: [],\r\n      ui: \"/\",\r\n      width: 0,\r\n      height: 0,\r\n      globalTimelines: [],\r\n      setTooltipContent: \"\",\r\n      mapFilter: \"confirmed\",\r\n      filterByCases: \"confirmed\",\r\n      displayBySort: \"All\",\r\n      currentPage: 0,\r\n      currentCardPage: 0,\r\n      totalCardPages: 0,\r\n      totalPages: 0,\r\n      globalData: [],\r\n      deathsRate: [],\r\n      locationLoader: false,\r\n      selectedCountry: false,\r\n      data: [],\r\n      timelines: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.addEventListener(\"resize\", this.updateDimensions);\r\n\r\n    this.setState({\r\n      locationLoader: true,\r\n    });\r\n    window.addEventListener(\"focus\", () => {\r\n      this.getGlobalData();\r\n      this.getDailyData();\r\n      this.getDeathRates();\r\n      this.getCardsData([1]);\r\n    });\r\n\r\n    this.getGlobalData();\r\n    this.getDailyData();\r\n    this.getDeathRates();\r\n    this.getCardsData([1]);\r\n  }\r\n\r\n  getDeathRates() {\r\n    fetch(`https://covid19-global-api1.herokuapp.com/deaths-rate.json`, {\r\n      method: \"GET\",\r\n    })\r\n      .then((res) => res.json())\r\n      .then((response) => {\r\n        this.setState({\r\n          deathsRate: response,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        this.setState({\r\n          locationLoader: false,\r\n        });\r\n      });\r\n  }\r\n\r\n  getGlobalData() {\r\n    fetch(`https://covid19-global-api1.herokuapp.com/global.json`, {\r\n      header: { \"Access-Control-Allow-Origin\": \"*\" },\r\n      method: \"GET\",\r\n    })\r\n      .then((res) => res.json())\r\n      .then((response) => {\r\n        this.setState({\r\n          globalData: response,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        this.setState({\r\n          locationLoader: false,\r\n        });\r\n      });\r\n  }\r\n\r\n  getDailyData() {\r\n    fetch(`https://covid19.mathdro.id/api/daily`, {\r\n      method: \"GET\",\r\n    })\r\n      .then((res) => res.json())\r\n      .then((response) => {\r\n        this.setState({\r\n          globalTimelines: response,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        this.setState({\r\n          locationLoader: false,\r\n        });\r\n      });\r\n  }\r\n\r\n  getCardsData(cardId) {\r\n    let cards = [];\r\n    this.setState({\r\n      cards: [],\r\n      locationLoader: true,\r\n    });\r\n    cardId.map((location) => {\r\n      fetch(\r\n        `https://cors-proxy-pass.herokuapp.com/https://thevirustracker.com/free-api?countryTotals=ALL`,\r\n        {\r\n          method: \"GET\",\r\n        }\r\n      )\r\n        .then((res) => res.json())\r\n        .then((response) => {\r\n          this.setState({\r\n            locationLoader: false,\r\n            cards: cards.concat(response),\r\n          });\r\n        })\r\n        .catch((error) => {\r\n          this.setState({\r\n            locationLoader: false,\r\n          });\r\n        });\r\n    });\r\n  }\r\n\r\n  getChartsData(data) {\r\n    data.map((location) => {\r\n      fetch(\r\n        `https://cors-proxy-pass.herokuapp.com/https://thevirustracker.com/free-api?countryTimeline=${location}`,\r\n        {\r\n          method: \"GET\",\r\n        }\r\n      )\r\n        .then((res) => res.json())\r\n        .then((response) => {\r\n          this.setState((state) => {\r\n            const timelines = state.timelines.concat(response);\r\n            const locationLoader = false;\r\n            return {\r\n              timelines,\r\n              locationLoader,\r\n            };\r\n          });\r\n        })\r\n        .catch((error) => {\r\n          this.setState({\r\n            locationLoader: false,\r\n          });\r\n        });\r\n    });\r\n  }\r\n\r\n  onPageChanged = (data1) => {\r\n    const { currentPage, totalPages } = data1;\r\n\r\n    this.setState({\r\n      timelines: [],\r\n      locationLoader: true,\r\n    });\r\n    if (!this.state.selectedCountry) {\r\n      this.getChartsData(_.chunk(Object.keys(Countrys), 9)[currentPage - 1]);\r\n    }\r\n\r\n    this.setState({\r\n      currentPage: currentPage - 1,\r\n      totalPages: totalPages,\r\n    });\r\n  };\r\n\r\n  updateDimensions = () => {\r\n    this.setState({ width: window.innerWidth, height: window.innerHeight });\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"resize\", this.updateDimensions);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <ErrorBoundary>\r\n        <div className=\"Global\">\r\n          <div className=\"container\">\r\n            <div>\r\n              <Header\r\n                dashboard={\"Global\"}\r\n                history={this.props.history}\r\n                width={this.state.width}\r\n              />\r\n            </div>\r\n            <div style={{ minHeight: \"90vh\" }}>\r\n              <NumberCard globalData={this.state.globalData} />\r\n              <NavigationBar\r\n                type=\"Global\"\r\n                ui={this.state.ui}\r\n                options={[\"Analytics\", \"Card\", \"Table\", \"Map\"]}\r\n                optionRoutes={[\"/\", \"/card\", \"/table\", \"/map\"]}\r\n                onClick={(route) => {\r\n                  this.setState({\r\n                    ui: route,\r\n                  });\r\n                }}\r\n              />\r\n              {this.state.ui === \"/\" ? (\r\n                <Analytics\r\n                  globalTimelines={this.state.globalTimelines}\r\n                  deathsRate={this.state.deathsRate}\r\n                  globalData={this.state.globalData}\r\n                  showGlobalChartType={this.state.showGlobalChartType}\r\n                  filterByCases={this.state.filterByCases}\r\n                  onSwitchBar={(prop) => {\r\n                    this.setState({\r\n                      showGlobalChartType: prop,\r\n                    });\r\n                  }}\r\n                  onChange={(selectedOption) => {\r\n                    this.setState({\r\n                      filterByCases:\r\n                        selectedOption === null\r\n                          ? \"confirmed\"\r\n                          : selectedOption.value,\r\n                    });\r\n                  }}\r\n                />\r\n              ) : null}\r\n              {this.state.ui === \"/map\" ? (\r\n                <GlobalMap\r\n                  mapFilter={this.state.mapFilter}\r\n                  globalData={this.state.globalData}\r\n                  setTooltipContent={this.state.setTooltipContent}\r\n                  onSetTooltipContent={(content) => {\r\n                    this.setState({ setTooltipContent: content });\r\n                  }}\r\n                  onMapSwitch={(prop) => {\r\n                    this.setState({\r\n                      mapFilter: prop,\r\n                    });\r\n                  }}\r\n                />\r\n              ) : null}\r\n              {this.state.ui === \"/table\" ? (\r\n                <Table globalData={this.state.globalData} />\r\n              ) : null}\r\n              {this.state.ui === \"/card\" ? (\r\n                <Cards\r\n                  locationLoader={this.state.locationLoader}\r\n                  searchString={this.state.searchString}\r\n                  globalData={this.state.globalData}\r\n                  onSearch={(e) => {\r\n                    this.setState({\r\n                      searchString: e.target.value.toLowerCase(),\r\n                      selectedCountry: false,\r\n                    });\r\n                  }}\r\n                />\r\n              ) : null}\r\n              {this.state.ui === \"/chart\" ? (\r\n                <ChartsCard\r\n                  locationLoader={this.state.locationLoader}\r\n                  cards={this.state.cards}\r\n                  timelines={this.state.timelines}\r\n                  selectedCountry={this.state.selectedCountry}\r\n                  onPageChanged={this.onPageChanged}\r\n                />\r\n              ) : null}\r\n            </div>\r\n            <Footer />\r\n          </div>\r\n        </div>\r\n      </ErrorBoundary>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Global;\r\n","import React, { Component } from \"react\";\r\nimport { Switch, Route, withRouter } from \"react-router-dom\";\r\nimport India from \"./components/container/India/India\";\r\nimport ReactGA from \"react-ga\";\r\nimport { createBrowserHistory } from \"history\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport { fas } from \"@fortawesome/free-solid-svg-icons\";\r\nimport brands from \"@fortawesome/fontawesome-free-brands\";\r\nimport Global from \"./components/container/Global/Global\";\r\nlibrary.add(fas, brands);\r\nconst history = createBrowserHistory();\r\n\r\nReactGA.initialize(\"UA-162840601-1\", { debug: true });\r\nReactGA.set({\r\n  page:\r\n    window.location.origin + window.location.pathname + window.location.hash,\r\n}); // Update the user's current page\r\nReactGA.pageview(\r\n  window.location.origin + window.location.pathname + window.location.hash\r\n);\r\n\r\nhistory.listen((location) => {\r\n  ReactGA.set({ page: location.origin + location.pathname + location.hash }); // Update the user's current page\r\n  ReactGA.pageview(location.origin + location.pathname + location.hash); // Record a pageview for the given page\r\n});\r\n\r\nexport class Index extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <React.Fragment>\r\n          <Switch>\r\n            <Route path=\"/india\" component={India} />\r\n            <Route path=\"/\" component={Global} />\r\n          </Switch>\r\n        </React.Fragment>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Index);","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport { HashRouter } from \"react-router-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport ErrorBoundry from \"./components/ui/ErrorBoundry/ErrorBoundry\";\r\nimport { Index } from \"./Routes\";\r\n\r\nconst routing = (\r\n  <HashRouter>\r\n    <ErrorBoundry>\r\n      <Index />\r\n    </ErrorBoundry>\r\n  </HashRouter>\r\n);\r\n\r\nReactDOM.render(routing, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}