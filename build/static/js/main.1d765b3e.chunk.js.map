{"version":3,"sources":["assets/github1.png","assets/india.png","assets/world.png","serviceWorker.js","components/ui/ErrorBoundry/ErrorBoundry.jsx","components/charts/IndiaMap/IndiaMap.jsx","components/ui/Footer/Footer.jsx","components/container/India/SubComponents/Table.jsx","components/charts/SimpleLineChart/SimpleLineChart.jsx","components/ui/SwitchBar/SwitchBar.jsx","components/container/India/SubComponents/Cards.jsx","components/ui/Header/Header.jsx","components/ui/GradientCardTitle/GradientCardTitle.jsx","components/charts/TinyChart.jsx","components/container/India/SubComponents/NumbersCard.jsx","components/ui/NavigationBar/NavigationBar.jsx","components/charts/PieChart/CustomChart.jsx","components/ui/GradientCardFooter/GradientCardFooter.jsx","components/charts/SimplePieChart/SimplePieChart.jsx","components/container/India/SubComponents/Analytics.jsx","components/charts/IndiaMap/StateWiseMap.jsx","components/container/India/India.jsx","components/container/Global/SubComponents/Table.jsx","components/ui/NumericCard/NumericCard.jsx","components/container/Global/SubComponents/NumberCard.jsx","components/container/Global/SubComponents/Analytics.jsx","components/ui/MapSwitchBar/MapSwitchBar.jsx","components/charts/DataMap/DataMap.jsx","components/container/Global/SubComponents/GlobalMap.jsx","components/ui/DataCard/DataCard.jsx","components/container/Global/SubComponents/Cards.jsx","components/ui/Pagination/Pagination.jsx","components/container/Global/SubComponents/ChartsCard.jsx","components/container/Global/Global.jsx","Routes.jsx","index.js","assets/virus.gif"],"names":["module","exports","Boolean","window","location","hostname","match","ErrorBoundry","props","state","hasError","error","errorInfo","console","this","className","style","display","justifyContent","href","children","React","Component","INDIA_TOPO_JSON","require","PROJECTION_CONFIG","scale","center","COLOR_RANGE","geographyStyle","default","outline","hover","fill","transition","pressed","IndiaMap","data","onStateClick","useState","tooltipContent","setTooltipContent","size","isClient","getSize","width","innerWidth","undefined","height","innerHeight","windowSize","setWindowSize","useEffect","handleResize","addEventListener","removeEventListener","useWindowSize","colorScale","scaleLog","domain","range","onMouseEnter","geo","current","value","onMouseLeave","fontWeight","fontSize","color","confirmed","deltaconfirmed","active","recovered","deltarecovered","deaths","deltadeaths","projectionConfig","projection","Math","floor","data-tip","geography","geographies","map","find","s","statecode","id","key","rsmKey","onClick","Footer","padding","paddingBottom","border","borderRadius","background","cursor","textDecoration","target","rel","marginRight","icon","Table","india","length","statewise","filter","Number","deltaConfirmed","deltaActive","deltaRecovered","deltaDeaths","columns","Header","accessor","Cell","original","cityData","stateWiseCity","Object","keys","city","districtData","deceased","deltaDeceased","cityColumns","marginTop","defaultPageSize","noDataText","getTheadProps","rowInfo","column","getTdProps","instance","e","handleOriginal","filterable","SubComponent","row","values","showPagination","SimpleLineChart","name","uv","pv","amt","CustomTooltip","payload","label","textAlign","item","index","Chart","chart","Line","Bar","Area","selectChart","Type","LineChart","BarChart","AreaChart","ChartName","layout","margin","left","strokeDasharray","type","hide","dataKey","axis","customTooltip","content","legend","legendLayout","top","right","bottom","verticalAlign","labels","stackId","stroke","colors","activeDot","r","dot","SwitchBar","options","option","showGlobalChartType","optionValues","borderTopLeftRadius","borderBottomLeftRadius","borderTopRightRadius","borderBottomRightRadius","Cards","changeChart","Confirmed","Recovered","Deaths","dailyConfirmedStatus","dailyStatus","status","dailyRecoveredStatus","dailyDeathsStatus","count","code","i","locationLoader","src","Virus","alt","toLowerCase","includes","searchString","f","data1","paddingTop","marginBottom","prop","setState","grid","dashboard","Github","history","push","IndiaIcon","World","GradientCardTitle","title","TinyChart","updateDimensions","strokeWidth","PureComponent","NumbersCard","confirmedTinyChartData","cases_time_series","cases","totalconfirmed","date","activeTinyChartData","totaldeceased","totalrecovered","deathTinyChartData","recoveredTinyChartData","totalConformedToday","record","totalRecoveredToday","totalDeathsToday","confirmedPopover","recoveredPopover","deathsPopover","body","preferPlace","isOpen","confirmedOpen","onOuterAction","ReactGA","event","category","action","marginLeft","activeOpen","deathsOpen","icons","Analytics","Card","Map","uiClass","windowWidth","ui","optionRoutes","CustomChart","chartEvents","eventName","callback","chartWrapper","chartType","selectedItem","getChart","getSelection","onPlotClick","rows","setSelection","sliceVisibilityThreshold","headerHeight","backgroundColor","minColor","midColor","maxColor","chartArea","isStacked","position","legendPosition","alignment","hAxis","textPosition","textColor","titleTextStyle","vAxis","minValue","generateTooltip","rootProps","onplot","GradientCardFooter","COLORS","SimplePieChart","outerRadius","entry","seconds","started","toptenCities","assign","sort","a","b","slice","totalDataDaily","dailyrecovered","dailyconfirmed","Active","dailydeceased","totalData","dailyConfirmed","dailyActive","dailyRecovered","dailyDeaths","sortable","pieChartData","filterByCases","sortedCuntryName","multiLineChartData","sortedCountryCode","sortedCountryName","dailyConfirmedFiltered","arr","toUpperCase","subArray","d","x","d1","ob","fromEntries","entries","filteredByDailyConfirmed","colourStyles","control","styles","isDisabled","isFocused","isSelected","countries","nationalityGroup","rawData","nationality","Set","country","ageGroup","genderGroup","unknown","unknownGender","range1","range2","range3","range4","range5","range6","range7","range8","range9","range10","male","female","agebracket","gender","minHeight","paddingLeft","onSwitch","timer","setInterval","clearInterval","isClearable","isSearchable","onChange","selectedOption","onSelectOption","placeholder","emptyClassName","stat","andamannicobarislands","arunachalpradesh","andhrapradesh","assam","bihar","chandigarh","chhattisgarh","dadranagarhaveli","delhi","karnataka","kerala","goa","gujarat","haryana","himachalpradesh","jammukashmir","jharkhand","ladakh","lakshadweep","madhyapradesh","maharashtra","manipur","meghalaya","mizoram","nagaland","odisha","puducherry","punjab","rajasthan","sikkim","nadu","telangana","tripura","uttarakhand","uttarpradesh","westbengal","StateWiseMap","stateName","getGeoFile","properties","district","delta","getScale","getCenter","India","chunkArray","array","result","arrayCopy","splice","filterStateName","currentPage","selectedCity","displayBySort","totalPages","activePage","selectedCountry","timelines","isTable","datasets","borderColor","borderWidth","data2","data3","getData","getStateData","getRawData","getDailyStatus","fetch","method","then","res","json","response","catch","raw_data","states_daily","route","showState","originalStateName","toolTipContent","withRouter","globalData","confirmed_today","deaths_today","tests","totaltests","NumericCard","card","dataToday","showPopover","popoverData","maxHeight","overflowY","borderRight","NumberCard","globalTimelines","reportDate","totalConfirmed","totalRecovered","total","totalDeathsByAge","deathsRate","age","all_cases","replace","confirmed_cases","totalDeathsByCom","deathsBySex","sex","onSwitchBar","MapSwitchBar","mapFilter","MapChart","rotate","Countrys","ISO_A2","NAME_LONG","DeathsToday","ConfirmedToday","NAME","GlobalMap","caseType","onMapSwitch","DataMap","onSetTooltipContent","renderTooltipLabelColor","DataCard","showIcon","showData","defaultValue","onSearch","Serious","critical","Tests","LEFT_PAGE","from","to","step","Pagination","gotoPage","page","onPageChanged","max","min","paginationData","pageLimit","totalRecords","handleClick","evt","preventDefault","handleMoveLeft","pageNeighbours","handleMoveRight","fetchPageNumbers","totalNumbers","startPage","endPage","pages","hasLeftSpill","hasRightSpill","spillOffset","extraPages","ceil","aria-label","aria-hidden","ChartsCard","Date","todayDate","getMonth","getDate","getFullYear","getChartsData","_","chunk","timeline","index1","timelineitems","total_cases","total_deaths","total_recoveries","new_daily_cases","new_daily_deaths","cardValue","cards","countryitems","countrytimelinedata","info","filteredTitle","totalCases","total_recovered","NewConfirmed","total_new_cases_today","NewDeaths","total_new_deaths_today","countryItemsFiltered","Global","currentCardPage","totalCardPages","getGlobalData","getDailyData","getDeathRates","getCardsData","header","cardId","concat","library","add","fas","brands","createBrowserHistory","initialize","debug","set","origin","pathname","hash","pageview","listen","Index","Fragment","path","component","routing","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.1d765b3e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/github1.0ba2aa20.png\";","module.exports = __webpack_public_path__ + \"static/media/india.b9bb7cd7.png\";","module.exports = __webpack_public_path__ + \"static/media/world.37c09ef3.png\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport \"./ErrorBoundry.css\";\n\nclass ErrorBoundry extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError(error) {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    // You can also log the error to an error reporting service\n    console.error(error, errorInfo);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      // You can render any custom fallback UI\n      return (\n        <div>\n          <section className=\"page_404\">\n            <div className=\"container\">\n              <div className=\"row\">\n                <div\n                  className=\"col-sm-12\"\n                  style={{ display: \"flex\", justifyContent: \"center\" }}\n                >\n                  <div className=\"col-sm-10 col-sm-offset-1  text-center\">\n                    <div className=\"four_zero_four_bg\"></div>\n\n                    <div className=\"contant_box_404\">\n                      <h3 className=\"h2\">Look like you're lost</h3>\n\n                      <p>the page you are looking for not available!</p>\n\n                      <a\n                        href=\"https://miteshtagadiya.github.io/Covid-19-Global-Dashboard\"\n                        className=\"link_404\"\n                      >\n                        Go to Home\n                      </a>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </section>\n        </div>\n      );\n    }\n\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundry;\n","import React, { useState } from \"react\";\nimport { ComposableMap, Geographies, Geography } from \"react-simple-maps\";\nimport { scaleLog } from \"d3-scale\";\nimport ReactTooltip from \"react-tooltip\";\nimport \"./indiaMap.css\";\nimport { useEffect } from \"react\";\n\nconst INDIA_TOPO_JSON = require(\"./india.topo.json\");\n\nconst PROJECTION_CONFIG = {\n  scale: 350,\n  center: [78.9629, 22.5937], // always in [East Latitude, North Longitude]\n};\n\n// Red Variants\nconst COLOR_RANGE = [\"#ffedea\", \"#ffcec5\", \"#ffad9f\"];\n\nconst DEFAULT_COLOR = \"#EEE\";\n\nconst geographyStyle = {\n  default: {\n    outline: \"none\",\n  },\n  hover: {\n    fill: \"#F53\",\n    transition: \"all 250ms\",\n    outline: \"none\",\n  },\n  pressed: {\n    outline: \"none\",\n  },\n};\n\nfunction useWindowSize() {\n  const isClient = typeof window === \"object\";\n\n  function getSize() {\n    return {\n      width: isClient ? window.innerWidth : undefined,\n      height: isClient ? window.innerHeight : undefined,\n    };\n  }\n\n  const [windowSize, setWindowSize] = useState(getSize);\n\n  useEffect(() => {\n    if (!isClient) {\n      return false;\n    }\n\n    function handleResize() {\n      setWindowSize(getSize());\n    }\n\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return windowSize;\n}\n\nconst IndiaMap = ({ data, onStateClick }) => {\n  const [tooltipContent, setTooltipContent] = useState(\"\");\n  const size = useWindowSize();\n\n  const colorScale = scaleLog().domain([1, 10]).range(COLOR_RANGE);\n\n  const onMouseEnter = (geo, current = { value: \"NA\" }) => {\n    return () => {\n      setTooltipContent(current);\n    };\n  };\n\n  const onMouseLeave = () => {\n    setTooltipContent(\"\");\n  };\n\n  return (\n    <div className=\"indiamap\">\n      {tooltipContent !== \"\" ? (\n        <ReactTooltip>\n          <div>\n            <span\n              style={{\n                fontWeight: \"bold\",\n                fontSize: 16,\n                color: \"rgb(64, 75, 105)\",\n              }}\n            >\n              {tooltipContent.state}\n            </span>\n            <br />\n            <span\n              style={{\n                fontWeight: \"bold\",\n                fontSize: 16,\n                color: \"rgb(228, 51, 57)\",\n              }}\n            >\n              {\"Confirmed: \"}\n              {tooltipContent.confirmed}{\" \"}\n              {tooltipContent.deltaconfirmed !== \"0\" ? (\n                <span style={{ fontSize: 17, fontWeight: \"bold\" }}>\n                  &#9650; {tooltipContent.deltaconfirmed}\n                </span>\n              ) : null}\n            </span>\n            <br />\n            <span\n              style={{\n                fontWeight: \"bold\",\n                fontSize: 16,\n                color: \"rgb(25, 42, 86)\",\n              }}\n            >\n              {\"Active: \"}\n              {tooltipContent.active}\n            </span>\n            <br />\n            <span\n              style={{\n                fontWeight: \"bold\",\n                fontSize: 16,\n                color: \"rgb(0, 98, 102)\",\n              }}\n            >\n              {\"Recovered: \"}\n              {tooltipContent.recovered}\n              {tooltipContent.deltaconfirmed !== \"0\" ? (\n                <span style={{ fontSize: 17, fontWeight: \"bold\" }}>\n                  &#9650; {tooltipContent.deltarecovered}\n                </span>\n              ) : null}\n            </span>\n            <br />\n            <span\n              style={{\n                fontWeight: \"bold\",\n                fontSize: 16,\n                color: \"rgb(83, 92, 104)\",\n              }}\n            >\n              {\"Deaths: \"}\n              {tooltipContent.deaths}\n              {tooltipContent.deltaconfirmed !== \"0\" ? (\n                <span style={{ fontSize: 17, fontWeight: \"bold\" }}>\n                  &#9650; {tooltipContent.deltadeaths}\n                </span>\n              ) : null}\n            </span>\n            <br />\n          </div>\n        </ReactTooltip>\n      ) : null}\n      <ComposableMap\n        projectionConfig={PROJECTION_CONFIG}\n        projection=\"geoMercator\"\n        height={\n          size.width < 1500 && size.width > 768\n            ? 200\n            : size.width <= 768 && size.width > 400\n            ? 150\n            : size.width <= 400\n            ? 120\n            : Math.floor(size.width / 10)\n        }\n        width={\n          size.width < 1500 && size.width > 768\n            ? 500\n            : size.width <= 768 && size.width > 400\n            ? 300\n            : size.width <= 400\n            ? 220\n            : Math.floor(size.width / 5)\n        }\n        data-tip=\"\"\n      >\n        <Geographies geography={INDIA_TOPO_JSON}>\n          {({ geographies }) =>\n            geographies.map((geo) => {\n              const current = data.find((s) => s.statecode === geo.id);\n              return (\n                <Geography\n                  key={geo.rsmKey}\n                  geography={geo}\n                  fill={current ? colorScale(current.active) : DEFAULT_COLOR}\n                  style={geographyStyle}\n                  onClick={() => onStateClick(current)}\n                  onMouseEnter={onMouseEnter(geo, current)}\n                  onMouseLeave={onMouseLeave}\n                />\n              );\n            })\n          }\n        </Geographies>\n      </ComposableMap>\n    </div>\n  );\n};\n\nexport default IndiaMap;\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nconst Footer = (props) => {\n  return (\n    <div style={{ padding: 15 }}>\n      <div\n        style={{\n          fontWeight: \"bold\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          fontSize: 22,\n          paddingBottom: 15,\n        }}\n      >\n        <div\n          style={{\n            border: \"3px solid white\",\n            padding: \"5px 25px\",\n            borderRadius: 5,\n            background: \"white\",\n            color: \"#404b69\",\n            cursor: \"pointer\",\n          }}\n        >\n          <a\n            style={{ textDecoration: \"none\", color: \"#404b69\" }}\n            href=\"https://github.com/miteshtagadiya/Covid-19-Global-Dashboard\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <span style={{ marginRight: 10 }}>\n              <FontAwesomeIcon icon={[\"fab\", \"github\"]} className=\"github\" />\n            </span>\n            Github\n          </a>\n        </div>\n      </div>\n      <div>\n        Designed and Developed by{\"  \"}\n        <a\n          style={{\n            color: \"#f6565b\",\n            fontWeight: \"bold\",\n            textDecoration: \"none\",\n          }}\n          href=\"https://miteshtagadiya.js.org\"\n          rel=\"noopener noreferrer\"\n          target=\"_blank\"\n        >\n          Mitesh Tagadiya\n        </a>\n      </div>\n    </div>\n  );\n};\n\nexport default Footer;\n","import React, { Component } from \"react\";\nimport ReactTable from \"react-table-6\";\nimport \"react-table-6/react-table.css\";\n\nclass Table extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    const data =\n      this.props.india.length !== 0\n        ? this.props.india.statewise\n            .filter((state) => state.state !== \"Total\")\n            .map((state) => {\n              return {\n                state: state.state,\n                confirmed: Number(state.confirmed),\n                active: Number(state.active),\n                recovered: Number(state.recovered),\n                deaths: Number(state.deaths),\n                deltaConfirmed: Number(state.deltaconfirmed),\n                deltaActive: Number(\n                  state.deltaconfirmed -\n                    state.deltarecovered -\n                    state.deltadeaths\n                ),\n                deltaRecovered: Number(state.deltarecovered),\n                deltaDeaths: Number(state.deltadeaths),\n              };\n            })\n        : [];\n\n    const columns =\n      this.props.india.length !== 0\n        ? [\n            {\n              Header: \"State/UT\",\n              accessor: \"state\", // String-based value accessors!\n            },\n            {\n              Header: \"Confirmed\",\n              accessor: \"confirmed\",\n              Cell: (props) => {\n                return (\n                  <>\n                    {props.original.deltaConfirmed === 0 ? null : (\n                      <span\n                        style={{\n                          fontSize: 15,\n                          fontWeight: \"bold\",\n                          color: \"#e43339\",\n                        }}\n                      >\n                        <span style={{ fontSize: 15, fontWeight: \"bold\" }}>\n                          &#9650;\n                        </span>\n                        {props.original.deltaConfirmed}\n                      </span>\n                    )}{\" \"}\n                    <span className=\"number\">{props.value}</span>\n                  </>\n                );\n              },\n            },\n            {\n              Header: \"Active\",\n              accessor: \"active\",\n              Cell: (props) => {\n                return (\n                  <>\n                    {props.original.deltaActive === 0 ? null : (\n                      <span\n                        style={{\n                          fontSize: 15,\n                          fontWeight: \"bold\",\n                          color: \"#192a56\",\n                        }}\n                      >\n                        <span style={{ fontSize: 15, fontWeight: \"bold\" }}>\n                          &#9650;\n                        </span>\n                        {props.original.deltaActive}\n                      </span>\n                    )}{\" \"}\n                    <span className=\"number\">{props.value}</span>\n                  </>\n                );\n              },\n            },\n            {\n              Header: \"Recovered\",\n              accessor: \"recovered\",\n              Cell: (props) => {\n                return (\n                  <>\n                    {props.original.deltaRecovered === 0 ? null : (\n                      <span\n                        style={{\n                          fontSize: 15,\n                          fontWeight: \"bold\",\n                          color: \"#006266\",\n                        }}\n                      >\n                        <span style={{ fontSize: 15, fontWeight: \"bold\" }}>\n                          &#9650;\n                        </span>\n                        {props.original.deltaRecovered}\n                      </span>\n                    )}{\" \"}\n                    <span className=\"number\">{props.value}</span>\n                  </>\n                );\n              },\n            },\n            {\n              Header: \"Deaths\",\n              accessor: \"deaths\",\n              Cell: (props) => {\n                return (\n                  <>\n                    {props.original.deltaDeaths === 0 ? null : (\n                      <span\n                        style={{\n                          fontSize: 15,\n                          fontWeight: \"bold\",\n                          color: \"#535c68\",\n                        }}\n                      >\n                        <span style={{ fontSize: 15, fontWeight: \"bold\" }}>\n                          &#9650;\n                        </span>\n                        {props.original.deltaDeaths}\n                      </span>\n                    )}{\" \"}\n                    <span className=\"number\">{props.value}</span>\n                  </>\n                );\n              },\n            },\n          ]\n        : [];\n\n    const cityData =\n      this.props.stateWiseCity.length !== 0\n        ? Object.keys(this.props.stateWiseCity).map((city) => {\n            return {\n              [city]: Object.keys(\n                this.props.stateWiseCity[city].districtData\n              ).map((key) => {\n                return {\n                  city: key,\n                  confirmed: this.props.stateWiseCity[city].districtData[key]\n                    .confirmed,\n                  deltaConfirmed: this.props.stateWiseCity[city].districtData[\n                    key\n                  ][\"delta\"][\"confirmed\"],\n                  deceased: this.props.stateWiseCity[city].districtData[key]\n                    .deceased,\n                  active: this.props.stateWiseCity[city].districtData[key]\n                    .active,\n                  deltaDeceased: this.props.stateWiseCity[city].districtData[\n                    key\n                  ][\"delta\"][\"deceased\"],\n                  recovered: this.props.stateWiseCity[city].districtData[key]\n                    .recovered,\n                  deltaRecovered: this.props.stateWiseCity[city].districtData[\n                    key\n                  ][\"delta\"][\"recovered\"],\n                };\n              }),\n            };\n          })\n        : [];\n\n    const cityColumns =\n      this.props.india.length !== 0\n        ? [\n            {\n              Header: \"District\",\n              accessor: \"city\",\n            },\n            {\n              Header: \"Confirmed\",\n              accessor: \"confirmed\",\n              Cell: (props) => {\n                return (\n                  <>\n                    {props.original.deltaConfirmed === 0 ? null : (\n                      <span\n                        style={{\n                          fontSize: 15,\n                          fontWeight: \"bold\",\n                          color: \"#e43339\",\n                        }}\n                      >\n                        <span style={{ fontSize: 15, fontWeight: \"bold\" }}>\n                          &#9650;\n                        </span>\n                        {props.original.deltaConfirmed}\n                      </span>\n                    )}{\" \"}\n                    <span className=\"number\">{props.value}</span>\n                  </>\n                );\n              },\n            },\n            {\n              Header: \"Active\",\n              accessor: \"active\",\n              Cell: (props) => {\n                return (\n                  <>\n                    <span className=\"number\">{props.value}</span>\n                  </>\n                );\n              },\n            },\n            {\n              Header: \"Recovered\",\n              accessor: \"recovered\",\n              Cell: (props) => {\n                return (\n                  <>\n                    {props.original.deltaRecovered === 0 ? null : (\n                      <span\n                        style={{\n                          fontSize: 15,\n                          fontWeight: \"bold\",\n                          color: \"#006266\",\n                        }}\n                      >\n                        <span style={{ fontSize: 15, fontWeight: \"bold\" }}>\n                          &#9650;\n                        </span>\n                        {props.original.deltaRecovered}\n                      </span>\n                    )}{\" \"}\n                    <span className=\"number\">{props.value}</span>\n                  </>\n                );\n              },\n            },\n            {\n              Header: \"Deaths\",\n              accessor: \"deceased\",\n              Cell: (props) => {\n                return (\n                  <>\n                    {props.original.deltaDeceased === 0 ? null : (\n                      <span\n                        style={{\n                          fontSize: 15,\n                          fontWeight: \"bold\",\n                          color: \"#535c68\",\n                        }}\n                      >\n                        <span style={{ fontSize: 15, fontWeight: \"bold\" }}>\n                          &#9650;\n                        </span>\n                        {props.original.deltaDeceased}\n                      </span>\n                    )}{\" \"}\n                    <span className=\"number\">{props.value}</span>\n                  </>\n                );\n              },\n            },\n          ]\n        : [];\n    return (\n      <div className=\"row\" style={{ marginTop: 15 }}>\n        <div className=\"col-sm-12\">\n          <div\n            style={{\n              background: \"white\",\n              color: \"#404b69\",\n              borderRadius: 10,\n            }}\n          >\n            <ReactTable\n              data={data}\n              columns={columns}\n              defaultPageSize={10}\n              className=\"-striped -highlight\"\n              noDataText={<b>No data found</b>}\n              getTheadProps={(state, rowInfo, column) => {\n                return {\n                  style: {\n                    fontWeight: \"bold\",\n                  },\n                };\n              }}\n              getTdProps={(state, rowInfo, column, instance) => {\n                return {\n                  onClick: (e, handleOriginal) => {\n                    if (handleOriginal) {\n                      handleOriginal();\n                    }\n                  },\n                };\n              }}\n              filterable\n              SubComponent={(row) => {\n                return row.original.confirmed === 0 ? null : (\n                  <div style={{ padding: \"20px\" }}>\n                    <div style={{ borderRadius: 10 }}>\n                      <ReactTable\n                        data={\n                          Object.values(\n                            cityData.filter(\n                              (state) =>\n                                Object.keys(state)[0] === row.original.state\n                            )[0]\n                          )[0]\n                        }\n                        columns={cityColumns}\n                        defaultPageSize={5}\n                        showPagination={true}\n                      />\n                    </div>\n                  </div>\n                );\n              }}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Table;\n","import React from \"react\";\nimport {\n  LineChart,\n  BarChart,\n  AreaChart,\n  Area,\n  Line,\n  Bar,\n  XAxis,\n  YAxis,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n  CartesianGrid,\n} from \"recharts\";\nimport \"./SimpleLineChart.css\";\n\nconst SimpleLineChart = (props) => {\n  const data =\n    props.data === undefined\n      ? [\n          { name: \"Jan\", uv: 4000, pv: 2400, amt: 2400 },\n          { name: \"Feb\", uv: 3000, pv: 1398, amt: 2210 },\n          { name: \"March\", uv: 2000, pv: 9800, amt: 2290 },\n          { name: \"April\", uv: 2780, pv: 3908, amt: 2000 },\n          { name: \"May\", uv: 1890, pv: 4800, amt: 2181 },\n          { name: \"June\", uv: 2390, pv: 3800, amt: 2500 },\n          { name: \"July\", uv: 3490, pv: 4300, amt: 2100 },\n        ]\n      : props.data;\n\n  const CustomTooltip = ({ active, payload, label }) => {\n    if (active) {\n      return (\n        <div\n          className=\"custom-tooltip\"\n          style={{ background: \"white\", padding: 15, borderRadius: 10 }}\n        >\n          <p\n            style={{\n              textAlign: \"center\",\n              fontWeight: \"bold\",\n              color: \"#404b69\",\n            }}\n          >\n            {label}\n          </p>\n          {typeof payload !== \"undefined\" &&\n            payload !== null &&\n            payload.map((item, index) => {\n              return (\n                <div key={index}>\n                  <span style={{ color: item.color, fontWeight: \"bold\" }}>\n                    {item.name}:{\" \"}\n                  </span>\n                  <span style={{ color: item.color, fontWeight: \"bold\" }}>\n                    {item.value}\n                    {typeof props.data.filter(\n                      (data) => data?.name === item.payload.name\n                    )[0][`daily${item.name}`] === \"undefined\"\n                      ? null\n                      : \" [+\"}\n                    {\n                      props.data.filter(\n                        (data) => data?.name === item.payload.name\n                      )[0][`daily${item.name}`]\n                    }\n                    {/* {props.data[payload.payload.name][`daily${payload.name}`]} */}\n                    {typeof props.data.filter(\n                      (data) => data?.name === item.payload.name\n                    )[0][`daily${item.name}`] === \"undefined\"\n                      ? null\n                      : \"]\"}\n                  </span>\n                  <br />\n                </div>\n              );\n            })}\n        </div>\n      );\n    }\n\n    return null;\n  };\n\n  let ChartName = (chart) => {\n    switch (chart) {\n      case \"LineChart\":\n        return LineChart;\n      case \"BarChart\":\n        return BarChart;\n      case \"AreaChart\":\n        return AreaChart;\n      default:\n        return LineChart;\n    }\n  };\n\n  let selectChart = (chart) => {\n    switch (chart) {\n      case \"LineChart\":\n        return Line;\n      case \"BarChart\":\n        return Bar;\n      case \"AreaChart\":\n        return Area;\n      default:\n        return Line;\n    }\n  };\n\n  let Chart = selectChart(props.chart);\n  let Type = ChartName(props.chart);\n  return (\n    <div\n      className=\"container-Linechart\"\n      style={props.height ? { height: props.height } : { height: 270 }}\n    >\n      <ResponsiveContainer>\n        <Type\n          layout={props.layout ? props.layout : \"horizontal\"}\n          width={500}\n          height={100}\n          data={data}\n          margin={\n            props.layout && props.layout === \"vertical\"\n              ? {\n                  left: 20,\n                }\n              : {}\n          }\n        >\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          {props.layout && props.layout === \"vertical\" ? (\n            <XAxis type=\"number\" />\n          ) : (\n            <XAxis hide={false} dataKey={props.axis ? props.axis : \"name\"} />\n          )}\n          {props.layout && props.layout === \"vertical\" ? (\n            <YAxis\n              type=\"category\"\n              hide={false}\n              dataKey={props.axis ? props.axis : \"name\"}\n            />\n          ) : (\n            <YAxis />\n          )}\n          {props.customTooltip ? (\n            <Tooltip content={<CustomTooltip />} />\n          ) : (\n            <Tooltip />\n          )}\n          {typeof props.legend === \"undefined\" || props.legend === true ? (\n            <Legend\n              layout={props.legendLayout ? props.legendLayout : \"horizontal\"}\n              margin={{ top: 0, left: 0, right: 0, bottom: 10 }}\n              verticalAlign={\n                props.verticalAlign ? props.verticalAlign : \"bottom\"\n              }\n            />\n          ) : null}\n          {props.labels.map((label, index) =>\n            props.chart === \"BarChart\" ? (\n              <Chart\n                key={index}\n                stackId={\"a\"}\n                type=\"monotone\"\n                dataKey={label}\n                stroke={props.colors[index]}\n                fill={props.colors[index]}\n              />\n            ) : (\n              <Chart\n                key={index}\n                stackId={\"a\"}\n                type=\"monotone\"\n                dataKey={label}\n                stroke={props.colors[index]}\n                activeDot={{ r: 8 }}\n                fill={props.colors[index]}\n                dot={false}\n              />\n            )\n          )}\n        </Type>\n      </ResponsiveContainer>\n    </div>\n  );\n};\n\nexport default SimpleLineChart;\n","import React from \"react\";\nimport \"./SwitchBar.sass\";\n\nconst SwitchBar = (props) => {\n  return (\n    <div className=\"SwitchBar\">\n      {props.options.map((option, index) => {\n        return (\n          <div\n            key={index}\n            className={\n              props.showGlobalChartType === props.optionValues[index]\n                ? \"switch-active\"\n                : \"switch\"\n            }\n            style={\n              index === 0\n                ? {\n                    borderTopLeftRadius: 10,\n                    borderBottomLeftRadius: 10,\n                  }\n                : index === props.options.length - 1\n                ? {\n                    borderTopRightRadius: 10,\n                    borderBottomRightRadius: 10,\n                  }\n                : {}\n            }\n            onClick={() => props.onClick(props.optionValues[index])}\n          >\n            {option}\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default SwitchBar;\n","import React, { Component } from \"react\";\nimport SimpleLineChart from \"components/charts/SimpleLineChart/SimpleLineChart\";\nimport SwitchBar from \"components/ui/SwitchBar/SwitchBar\";\nimport Virus from \"assets/virus.gif\";\n\nclass Cards extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      changeChart: \"Confirmed\",\n    };\n  }\n\n  render() {\n    let colors = {\n      Confirmed: \"#e43339\",\n      Recovered: \"#006266\",\n      Deaths: \"#535c68\",\n    };\n\n    let dailyConfirmedStatus = this.props.dailyStatus.filter(\n      (data) => data.status === \"Confirmed\"\n    );\n    let dailyRecoveredStatus = this.props.dailyStatus.filter(\n      (data) => data.status === \"Recovered\"\n    );\n    let dailyDeathsStatus = this.props.dailyStatus.filter(\n      (data) => data.status === \"Deceased\"\n    );\n\n    let count = (code, data, index) => {\n      let confirmed = 0;\n      for (var i = 0; i <= index; i++) {\n        confirmed += Number(data[i][code]);\n      }\n      return confirmed;\n    };\n\n    return (\n      <div className=\"row india-state-card\">\n        {this.props.locationLoader === true ? (\n          <div>\n            <img src={Virus} alt=\"Loader\" />\n          </div>\n        ) : this.props.india.length !== 0 ? (\n          this.props.india.statewise\n            .filter((location) =>\n              location.state\n                .toLowerCase()\n                .includes(this.props.searchString.toLowerCase())\n            )\n            .map((location, index) => {\n              let f = dailyConfirmedStatus.map((data1, index) => {\n                return {\n                  name: data1[\"date\"],\n                  Confirmed: count(\n                    location.statecode.toLowerCase(),\n                    dailyConfirmedStatus,\n                    index\n                  ),\n                  Recovered: count(\n                    location.statecode.toLowerCase(),\n                    dailyRecoveredStatus,\n                    index\n                  ),\n                  Deaths: count(\n                    location.statecode.toLowerCase(),\n                    dailyDeathsStatus,\n                    index\n                  ),\n                };\n              });\n\n              return location.state !== \"Total\" ? (\n                <div key={index} className=\"col-sm-4\" style={{ padding: 15 }}>\n                  <div className=\"state-card\">\n                    <label className=\"state-card-label\">{location.state}</label>\n                    <br />\n                    <div\n                      className=\"row justify-content-center\"\n                      style={{ paddingTop: 15, paddingBottom: 15 }}\n                    >\n                      <div className=\"state-card-style\">\n                        <div>{location.confirmed}</div>\n                        <div\n                          className=\"state-card-info\"\n                          style={{\n                            color: \"#e43339\",\n                          }}\n                        >\n                          <span style={{ fontSize: 15, fontWeight: \"bold\" }}>\n                            &#9650;\n                          </span>\n                          {location.deltaconfirmed}\n                        </div>\n                        <div>Confirmed</div>\n                      </div>\n                      <div className=\"state-card-style\">\n                        <div style={{ marginBottom: 22 }}>\n                          {location.active}\n                        </div>\n                        <div>Active</div>\n                      </div>\n                      <div className=\"state-card-style\">\n                        <div>{location.recovered}</div>\n                        <div\n                          className=\"state-card-info\"\n                          style={{\n                            color: \"#006266\",\n                          }}\n                        >\n                          <span style={{ fontSize: 15, fontWeight: \"bold\" }}>\n                            &#9650;\n                          </span>\n                          {location.deltarecovered}\n                        </div>\n\n                        <div>Recovered</div>\n                      </div>\n                      <div className=\"state-card-style\">\n                        <div>{location.deaths}</div>\n                        <div\n                          className=\"state-card-info\"\n                          style={{\n                            color: \"#535c68\",\n                          }}\n                        >\n                          <span style={{ fontSize: 15, fontWeight: \"bold\" }}>\n                            &#9650;\n                          </span>\n                          {location.deltadeaths}\n                        </div>\n                        <div>Deaths</div>\n                      </div>\n                    </div>\n                    <div>\n                      <SwitchBar\n                        options={[\"Conf.\", \"Recv.\", \"Deaths\"]}\n                        optionValues={[\"Confirmed\", \"Recovered\", \"Deaths\"]}\n                        onClick={(prop) => {\n                          this.setState({\n                            changeChart: prop,\n                          });\n                        }}\n                        showGlobalChartType={this.state.changeChart}\n                      />\n                      <SimpleLineChart\n                        chart={\"AreaChart\"}\n                        customTooltip={true}\n                        grid={false}\n                        data={f}\n                        labels={[this.state.changeChart]}\n                        colors={[colors[this.state.changeChart]]}\n                      />\n                    </div>\n                  </div>\n                </div>\n              ) : null;\n            })\n        ) : null}\n      </div>\n    );\n  }\n}\n\nexport default Cards;\n","import React from \"react\";\nimport Github from \"../../../assets/github1.png\";\nimport IndiaIcon from \"../../../assets/india.png\";\nimport World from \"../../../assets/world.png\";\nimport \"./Header.sass\";\n\nconst Header = (props) => {\n  return (\n    <div>\n      <div className=\"Header\">\n        Covid-19 {props.dashboard} {props.width < 1024 ? \"\" : \" Dashboard\"}\n        <a\n          href=\"https://github.com/miteshtagadiya/Covid-19-Global-Dashboard\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <img src={Github} alt=\"github\" className=\"github-icon\" />\n        </a>\n      </div>\n      <div className=\"Switch-dashboard\">\n        <img\n          onClick={() => props.history.push(\"/india\")}\n          src={IndiaIcon}\n          alt=\"India\"\n          className=\"india-icon\"\n        />\n        <span style={{ fontWeight: \"bold\" }}>Switch</span>\n        <img\n          onClick={() => props.history.push(\"/\")}\n          src={World}\n          alt=\"World\"\n          className=\"global-icon\"\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport \"./GradientCardTitle.sass\";\n\nconst GradientCardTitle = (props) => {\n  return (\n    <div style={props.style ? props.style : {}} className=\"GradientCardTitle\">\n      {props.title}\n    </div>\n  );\n};\n\nexport default GradientCardTitle;\n","import React, { PureComponent } from \"react\";\nimport {\n  LineChart,\n  Line,\n} from \"recharts\";\n\nexport default class TinyChart extends PureComponent {\n  state = { width: 0, height: 0 };\n\n  updateDimensions = () => {\n    this.setState({ width: window.innerWidth, height: window.innerHeight });\n  };\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.updateDimensions);\n  }\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateDimensions);\n  }\n\n  render() {\n    return (\n      <LineChart\n        width={this.state.width < 1439 ? 100 : 250}\n        height={this.state.width < 250 ? 30 : 50}\n        data={this.props.data}\n      >\n        <Line\n          type=\"monotone\"\n          dataKey={this.props.label}\n          stroke={this.props.color}\n          strokeWidth={2}\n          dot={false}\n        />\n      </LineChart>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport TinyChart from \"components/charts/TinyChart\";\nimport Popover from \"react-popover\";\nimport ReactGA from \"react-ga\";\n\nclass NumbersCard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    let confirmedTinyChartData =\n      this.props.india.length !== 0\n        ? this.props.india.cases_time_series.map((cases) => {\n            return cases.totalconfirmed !== \"\"\n              ? {\n                  name: cases.date,\n                  confirmed: Number(cases.totalconfirmed),\n                }\n              : null;\n          })\n        : null;\n\n    let activeTinyChartData =\n      this.props.india.length !== 0\n        ? this.props.india.cases_time_series.map((cases) => {\n            return cases.totalconfirmed !== \"\"\n              ? {\n                  name: cases.date,\n                  confirmed:\n                    Number(cases.totalconfirmed) -\n                    Number(cases.totaldeceased) -\n                    Number(cases.totalrecovered),\n                }\n              : null;\n          })\n        : null;\n    let deathTinyChartData =\n      this.props.india.length !== 0\n        ? this.props.india.cases_time_series.map((cases) => {\n            return cases.totaldeceased !== \"\"\n              ? {\n                  name: cases.date,\n                  confirmed: Number(cases.totaldeceased),\n                }\n              : null;\n          })\n        : null;\n    let recoveredTinyChartData =\n      this.props.india.length !== 0\n        ? this.props.india.cases_time_series.map((cases) => {\n            return cases.totalrecovered !== \"\"\n              ? {\n                  name: cases.date,\n                  confirmed: Number(cases.totalrecovered),\n                }\n              : null;\n          })\n        : null;\n\n    const totalConformedToday =\n      this.props.india.length !== 0\n        ? this.props.india.statewise.filter(\n            (record) => record.state === \"Total\"\n          )[0].deltaconfirmed\n        : 0;\n\n    const totalRecoveredToday =\n      this.props.india.length !== 0\n        ? this.props.india.statewise.filter(\n            (record) => record.state === \"Total\"\n          )[0].deltarecovered\n        : 0;\n\n    const totalDeathsToday =\n      this.props.india.length !== 0\n        ? this.props.india.statewise.filter(\n            (record) => record.state === \"Total\"\n          )[0].deltadeaths\n        : 0;\n\n    const confirmedPopover =\n      this.props.india.length !== 0\n        ? this.props.india.statewise\n            .filter((record) => record.state !== \"Total\")\n            .filter((state) => Number(state.deltaconfirmed) !== 0)\n            .map((state) => {\n              return { [state.state]: state.deltaconfirmed };\n            })\n        : [];\n\n    const recoveredPopover =\n      this.props.india.length !== 0\n        ? this.props.india.statewise\n            .filter((record) => record.state !== \"Total\")\n            .filter((state) => Number(state.deltarecovered) !== 0)\n            .map((state) => {\n              return { [state.state]: Number(state.deltarecovered) };\n            })\n        : [];\n    const deathsPopover =\n      this.props.india.length !== 0\n        ? this.props.india.statewise\n            .filter((record) => record.state !== \"Total\")\n            .filter((state) => Number(state.deltadeaths) !== 0)\n            .map((state) => {\n              return { [state.state]: Number(state.deltadeaths) };\n            })\n        : [];\n\n    return (\n      <div\n        className=\"row numeric-card\"\n        style={{ padding: \"50px 0px 30px 0px\" }}\n      >\n        <div className=\"col-sm-3 col-6\" style={{ padding: 15 }}>\n          <div\n            className=\"numeric-card-body\"\n            style={{\n              background: \"#448AFF\",\n            }}\n          >\n            <div style={{ fontSize: 30 }}>\n              {this.props.india.length !== 0\n                ? this.props.india.statewise.filter(\n                    (record) => record.state === \"Total\"\n                  )[0].confirmed\n                : 0}\n            </div>\n            <div className=\"numeric-card-info-icon\">\n              <span style={{ fontSize: 17, fontWeight: \"bold\" }}>&#9650;</span>\n              {this.props.india.length !== 0\n                ? typeof this.props.india.statewise.filter(\n                    (record) => record.state === \"Total\"\n                  )[0].deltaconfirmed !== \"undefined\" &&\n                  this.props.india.statewise.filter(\n                    (record) => record.state === \"Total\"\n                  )[0].deltaconfirmed !== null\n                  ? this.props.india.statewise.filter(\n                      (record) => record.state === \"Total\"\n                    )[0].deltaconfirmed\n                  : 0\n                : 0}\n              {Number(totalConformedToday) !== 0 ? (\n                <Popover\n                  body={\n                    <div\n                      style={{\n                        background: \"white\",\n                        borderRadius: 10,\n                        padding: 15,\n                        color: \"#192a56\",\n                        fontWeight: \"bold\",\n                      }}\n                    >\n                      {confirmedPopover.map((state, index) => {\n                        return (\n                          <div key={index}>\n                            {Object.keys(state)[0]}: {Object.values(state)[0]}\n                          </div>\n                        );\n                      })}\n                    </div>\n                  }\n                  preferPlace={\"below\"}\n                  isOpen={this.state.confirmedOpen}\n                  onOuterAction={() =>\n                    this.setState({\n                      confirmedOpen: !this.state.confirmedOpen,\n                    })\n                  }\n                >\n                  <div\n                    onClick={() => {\n                      ReactGA.event({\n                        category: \"India Info\",\n                        action: \"Confirmed Info Clicked\",\n                        label: \"Confirm Info\",\n                      });\n                      this.setState({\n                        confirmedOpen: !this.state.confirmedOpen,\n                      });\n                    }}\n                    className=\"report-tile\"\n                    style={{ marginLeft: 5, cursor: \"pointer\" }}\n                  >\n                    ?\n                  </div>\n                </Popover>\n              ) : null}\n            </div>\n            <div style={{ fontSize: 18 }}>Confirmed</div>\n            {this.props.india.length !== 0 ? (\n              <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n                <TinyChart\n                  data={confirmedTinyChartData}\n                  label=\"confirmed\"\n                  color=\"#ffffff\"\n                />\n              </div>\n            ) : null}\n          </div>\n        </div>\n        <div className=\"col-sm-3 col-6\" style={{ padding: 15 }}>\n          <div\n            className=\"numeric-card-body\"\n            style={{\n              background: \"#F9A825\",\n            }}\n          >\n            <div style={{ fontSize: 30, marginBottom: 35 }}>\n              {this.props.india.length !== 0\n                ? this.props.india.statewise.filter(\n                    (record) => record.state === \"Total\"\n                  )[0].active\n                : 0}\n            </div>\n\n            <div style={{ fontSize: 18 }}>Active</div>\n            {this.props.india.length !== 0 ? (\n              <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n                <TinyChart\n                  data={activeTinyChartData}\n                  label=\"confirmed\"\n                  color=\"#ffffff\"\n                />\n              </div>\n            ) : null}\n          </div>\n        </div>\n        <div className=\"col-sm-3 col-6\" style={{ padding: 15 }}>\n          <div\n            className=\"numeric-card-body\"\n            style={{\n              background: \"#4CAF50\",\n            }}\n          >\n            <div style={{ fontSize: 30 }}>\n              {this.props.india.length !== 0\n                ? this.props.india.statewise.filter(\n                    (record) => record.state === \"Total\"\n                  )[0].recovered\n                : 0}\n            </div>\n            <div className=\"numeric-card-info-icon\">\n              <span style={{ fontSize: 17, fontWeight: \"bold\" }}>&#9650;</span>\n              {this.props.india.length !== 0\n                ? typeof this.props.india.statewise.filter(\n                    (record) => record.state === \"Total\"\n                  )[0].deltarecovered !== \"undefined\" &&\n                  this.props.india.statewise.filter(\n                    (record) => record.state === \"Total\"\n                  )[0].deltarecovered !== null\n                  ? this.props.india.statewise.filter(\n                      (record) => record.state === \"Total\"\n                    )[0].deltarecovered\n                  : 0\n                : 0}\n              {Number(totalRecoveredToday) !== 0 ? (\n                <Popover\n                  body={\n                    <div\n                      style={{\n                        background: \"white\",\n                        borderRadius: 10,\n                        padding: 15,\n                        color: \"#192a56\",\n                        fontWeight: \"bold\",\n                      }}\n                    >\n                      {recoveredPopover.map((state, index) => {\n                        return (\n                          <div key={index}>\n                            {Object.keys(state)[0]}: {Object.values(state)[0]}\n                          </div>\n                        );\n                      })}\n                    </div>\n                  }\n                  preferPlace={\"below\"}\n                  isOpen={this.state.activeOpen}\n                  onOuterAction={() =>\n                    this.setState({\n                      activeOpen: !this.state.activeOpen,\n                    })\n                  }\n                >\n                  <div\n                    onClick={() => {\n                      ReactGA.event({\n                        category: \"India Info\",\n                        action: \"Active Info Clicked\",\n                        label: \"Active Info\",\n                      });\n                      this.setState({\n                        activeOpen: !this.state.activeOpen,\n                      });\n                    }}\n                    className=\"report-tile\"\n                    style={{ marginLeft: 5, cursor: \"pointer\" }}\n                  >\n                    ?\n                  </div>\n                </Popover>\n              ) : null}\n            </div>\n            <div style={{ fontSize: 18 }}>Recovered</div>\n            {this.props.india.length !== 0 ? (\n              <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n                <TinyChart\n                  data={recoveredTinyChartData}\n                  label=\"confirmed\"\n                  color=\"#ffffff\"\n                />\n              </div>\n            ) : null}\n          </div>\n        </div>\n        <div className=\"col-sm-3 col-6\" style={{ padding: 15 }}>\n          <div\n            className=\"numeric-card-body\"\n            style={{\n              background: \"#FF5252\",\n            }}\n          >\n            <div style={{ fontSize: 30 }}>\n              {this.props.india.length !== 0\n                ? this.props.india.statewise.filter(\n                    (record) => record.state === \"Total\"\n                  )[0].deaths\n                : 0}\n            </div>\n            <div className=\"numeric-card-info-icon\">\n              <span style={{ fontSize: 17, fontWeight: \"bold\" }}>&#9650;</span>\n              {this.props.india.length !== 0\n                ? typeof this.props.india.statewise.filter(\n                    (record) => record.state === \"Total\"\n                  )[0].deltadeaths !== \"undefined\" &&\n                  this.props.india.statewise.filter(\n                    (record) => record.state === \"Total\"\n                  )[0].deltadeaths !== null\n                  ? this.props.india.statewise.filter(\n                      (record) => record.state === \"Total\"\n                    )[0].deltadeaths\n                  : 0\n                : 0}\n              {Number(totalDeathsToday) !== 0 ? (\n                <Popover\n                  body={\n                    <div\n                      style={{\n                        background: \"white\",\n                        borderRadius: 10,\n                        padding: 15,\n                        color: \"#192a56\",\n                        fontWeight: \"bold\",\n                      }}\n                    >\n                      {deathsPopover.map((state, index) => {\n                        return (\n                          <div key={index}>\n                            {Object.keys(state)[0]}: {Object.values(state)[0]}\n                          </div>\n                        );\n                      })}\n                    </div>\n                  }\n                  preferPlace={\"below\"}\n                  isOpen={this.state.deathsOpen}\n                  onOuterAction={() =>\n                    this.setState({\n                      deathsOpen: !this.state.deathsOpen,\n                    })\n                  }\n                >\n                  <div\n                    onClick={() => {\n                      ReactGA.event({\n                        category: \"India Info\",\n                        action: \"Deaths Info Clicked\",\n                        label: \"Deaths Info\",\n                      });\n                      this.setState({\n                        deathsOpen: !this.state.deathsOpen,\n                      });\n                    }}\n                    className=\"report-tile\"\n                    style={{ marginLeft: 5, cursor: \"pointer\" }}\n                  >\n                    ?\n                  </div>\n                </Popover>\n              ) : null}\n            </div>\n            <div style={{ fontSize: 18 }}>Deaths</div>\n            {this.props.india.length !== 0 ? (\n              <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n                <TinyChart\n                  data={deathTinyChartData}\n                  label=\"confirmed\"\n                  color=\"#ffffff\"\n                />\n              </div>\n            ) : null}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default NumbersCard;\n","import React from \"react\";\nimport ReactGA from \"react-ga\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport windowSize from \"react-window-size\";\n\nimport \"./NavigationBar.sass\";\n\nconst NavigationBar = (props) => {\n  const icons = {\n    Analytics: \"chart-area\",\n    Card: \"tablet-alt\",\n    Map: \"globe\",\n    Table: \"table\",\n    Chart: \"chart-bar\",\n  };\n  let uiClass = \"nav-item nav-link\";\n\n  return props.windowWidth > 900 ? (\n    <nav>\n      <div className=\"nav nav-tabs nav-fill\">\n        {props.options.map((option, index) => {\n          return (\n            <label\n              key={index}\n              className={\n                props.ui === props.optionRoutes[index]\n                  ? uiClass + \" active\"\n                  : uiClass\n              }\n              onClick={() => {\n                props.onClick(props.optionRoutes[index]);\n                ReactGA.event({\n                  category: props.type,\n                  action: option + \" selected\",\n                  label: props.type + \" \" + option,\n                });\n              }}\n            >\n              <FontAwesomeIcon\n                icon={[\"fas\", icons[option]]}\n                className=\"navbar-icon\"\n              />\n              {option}\n            </label>\n          );\n        })}\n      </div>\n    </nav>\n  ) : (\n    <nav>\n      <div className=\"nav nav-tabs nav-fill\">\n        {props.options.map((option, index) => {\n          return (\n            <label\n              key={index}\n              className={\n                props.ui === props.optionRoutes[index]\n                  ? uiClass + \" active\"\n                  : uiClass\n              }\n              onClick={() => {\n                props.onClick(props.optionRoutes[index]);\n                ReactGA.event({\n                  category: props.type,\n                  action: option + \" selected\",\n                  label: props.type + \" \" + option,\n                });\n              }}\n            >\n              <FontAwesomeIcon\n                icon={[\"fas\", icons[option]]}\n                className=\"navbar-icon\"\n              />\n            </label>\n          );\n        })}\n      </div>\n    </nav>\n  );\n};\n\nexport default windowSize(NavigationBar);\n","import * as React from \"react\";\nimport { Chart } from \"react-google-charts\";\nimport \"./CustomChart.css\";\n\nconst CustomChart = (props) => {\n  const chartEvents = [\n    {\n      eventName: \"select\",\n      callback({ chartWrapper }) {\n        if (props.chartType === \"TreeMap\") {\n          let selectedItem = chartWrapper.getChart().getSelection()[0];\n          props.onPlotClick(props.rows[selectedItem.row]);\n          chartWrapper.getChart().setSelection([]);\n        } else {\n          var selectedItem = chartWrapper.getChart().getSelection()[0];\n          if (selectedItem) {\n            props.onPlotClick(props.rows[Object.values(selectedItem)[0]][0]);\n          }\n        }\n      },\n    },\n  ];\n  return (\n    <Chart\n      className=\"custom-charts\"\n      height={props.height ? props.height : \"300px\"}\n      width={props.width ? props.width : \"auto\"}\n      chartType={props.chartType ? props.chartType : \"Bar\"}\n      rows={props.rows}\n      columns={props.columns}\n      options={{\n        sliceVisibilityThreshold: 0,\n        headerHeight: 0,\n        backgroundColor: \"transparent\",\n        colors: [\n          \"#3c3568\",\n          \"#f6ba62\",\n          \"#bc443b\",\n          \"#185e4b\",\n          \"#150a47\",\n          \"#334553\",\n          \"#d82f5a\",\n          \"#000133\",\n          \"#11887b\",\n          \"#044a05\",\n          \"#004953\",\n          \"#062e03\",\n          \"#7f4330\",\n          \"#420303\",\n          \"#980036\",\n          \"#9c004a\",\n          \"#490648\",\n          \"#76424e\",\n          \"#36013f\",\n          \"#36013f\",\n          \"#333333\",\n          \"#25342b\",\n          \"#171717\",\n        ],\n        minColor: \"#A7A0B3\",\n        midColor: \"#88E3CA\",\n        maxColor: \"#E0AEF6\",\n        chartArea: props.chartArea\n          ? props.chartArea\n          : { left: 0, top: 10, right: 0 },\n        //height: props.height ? props.height : 300,\n\n        //width: props.width ? props.width : \"100%\",\n        // title: \"Company Performance\",\n        isStacked: props.isStacked === true ? true : false,\n        legend: props.legend\n          ? { position: \"none\" }\n          : props.legendPosition\n          ? props.legendPosition\n          : {\n              position: \"right\",\n              alignment: \"center\",\n            },\n        hAxis: props.hAxis\n          ? {\n              title: \"\",\n              textPosition: \"none\",\n              textColor: \"#ffffff\",\n            }\n          : { title: props.title, titleTextStyle: { color: \"#333\" } },\n        vAxis: props.vAxis\n          ? {\n              textPosition: \"none\",\n            }\n          : { minValue: 0 },\n        generateTooltip:\n          props.generateTooltip === true\n            ? (row, size, value) => {\n                return (\n                  '<div style=\"background:#fff; padding:5px 10px 5px 10px; border:1px solid grey\"><b>' +\n                  props.rows[row][0] +\n                  \"</b> : \" +\n                  size +\n                  \"</div>\"\n                );\n              }\n            : null,\n        // For the legend to fit, we make the chart area smaller\n        //chartArea: { width: \"50%\", height: \"70%\" }\n        // lineWidth: 25\n      }}\n      // For tests\n      rootProps={{ \"data-testid\": \"2\" }}\n      chartEvents={props.onplot === true ? chartEvents : null}\n    />\n  );\n};\nexport default CustomChart;\n","import React from \"react\";\nimport \"./GradientCardFooter.sass\";\n\nconst GradientCardFooter = (props) => {\n  return <div className=\"GradientCardFooter\">{props.content}</div>;\n};\n\nexport default GradientCardFooter;\n","import React from \"react\";\nimport { Tooltip, ResponsiveContainer, PieChart, Pie, Cell } from \"recharts\";\nimport \"../SimpleLineChart/SimpleLineChart.css\";\n\nconst COLORS = [\"#192a56\", \"rgb(255, 82, 82)\", \"#404b69\"];\n\nconst SimplePieChart = (props) => {\n  return (\n    <div\n      className=\"container-Linechart\"\n      style={props.height ? { height: props.height } : { height: 270 }}\n    >\n      <ResponsiveContainer>\n        <PieChart>\n          <Pie\n            dataKey=\"value\"\n            data={props.data}\n            outerRadius={100}\n            fill=\"#8884d8\"\n            label={false}\n          >\n            {props.data.map((entry, index) => (\n              <Cell\n                key={`cell-${index}`}\n                fill={COLORS[index % COLORS.length]}\n              />\n            ))}\n          </Pie>\n\n          <Tooltip />\n        </PieChart>\n      </ResponsiveContainer>\n    </div>\n  );\n};\n\nexport default SimplePieChart;\n","import React, { Component } from \"react\";\nimport SwitchBar from \"components/ui/SwitchBar/SwitchBar\";\nimport SimpleLineChart from \"components/charts/SimpleLineChart/SimpleLineChart\";\nimport Select from \"react-select\";\nimport CustomChart from \"components/charts/PieChart/CustomChart\";\nimport GradientCardTitle from \"components/ui/GradientCardTitle/GradientCardTitle\";\nimport GradientCardFooter from \"components/ui/GradientCardFooter/GradientCardFooter\";\nimport SimplePieChart from \"components/charts/SimplePieChart/SimplePieChart\";\n\nclass Analytics extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { status: false, seconds: 0, started: false };\n  }\n\n  render() {\n    let toptenCities = [];\n\n    if (this.props.stateWiseCity.length !== 0) {\n      let data = {};\n      Object.values(this.props.stateWiseCity).map((city) => {\n        return Object.assign(data, city.districtData);\n      });\n\n      let sorted = Object.keys(data).sort((a, b) => {\n        return data[b][\"confirmed\"] - data[a][\"confirmed\"];\n      });\n      let filtered = sorted\n        .filter((data) => data !== \"Unassigned\")\n        .slice(0, 10);\n\n      toptenCities = filtered.map((city) => {\n        return { name: city, [\"Cases\"]: data[city].confirmed };\n      });\n    }\n\n    let totalDataDaily =\n      this.props.india.length !== 0\n        ? this.props.india.cases_time_series.map((cases) => {\n            return cases.dailyrecovered !== \"\"\n              ? {\n                  name: cases.date,\n                  Confirmed: Number(cases.dailyconfirmed),\n                  Active:\n                    Number(cases.dailyconfirmed) -\n                    Number(cases.dailyrecovered) -\n                    Number(cases.dailydeceased),\n                  Recovered: Number(cases.dailyrecovered),\n                  Deaths: Number(cases.dailydeceased),\n                }\n              : null;\n          })\n        : null;\n\n    let totalData =\n      this.props.india.length !== 0\n        ? this.props.india.cases_time_series.map((cases) => {\n            return cases.totalrecovered !== \"\"\n              ? {\n                  name: cases.date,\n                  Confirmed: Number(cases.totalconfirmed),\n                  Active:\n                    Number(cases.totalconfirmed) -\n                    Number(cases.totalrecovered) -\n                    Number(cases.totaldeceased),\n                  Recovered: Number(cases.totalrecovered),\n                  Deaths: Number(cases.totaldeceased),\n                  dailyConfirmed: Number(cases.dailyconfirmed),\n                  dailyActive:\n                    Number(cases.dailyconfirmed) -\n                    Number(cases.dailyrecovered) -\n                    Number(cases.dailydeceased),\n                  dailyRecovered: Number(cases.dailyrecovered),\n                  dailyDeaths: Number(cases.dailydeceased),\n                }\n              : null;\n          })\n        : null;\n\n    var sortable =\n      this.props.india.length !== 0 ? this.props.india.statewise : [];\n\n    const Comparator = (a, b) => {\n      if (Number(a[1]) > Number(b[1])) return -1;\n      if (Number(a[1]) < Number(b[1])) return 1;\n      return 0;\n    };\n\n    var pieChartData =\n      this.props.india.length !== 0\n        ? sortable\n            .filter(\n              (record) =>\n                record.state !== \"Total\" && record.state !== \"State Unassigned\"\n            )\n            .map((state) => {\n              return [state.state, Number(state[this.props.filterByCases])];\n            })\n        : [];\n\n    pieChartData = pieChartData.sort(Comparator).slice(0, 10);\n\n    let sortedCuntryName = [];\n    if (pieChartData.length !== 0) {\n      pieChartData.map((data) => {\n        sortedCuntryName.push(data[0]);\n      });\n    }\n\n    let sortedCountryCode =\n      this.props.india.length !== 0\n        ? sortable\n            .filter(\n              (record) =>\n                record.state !== \"Total\" &&\n                sortedCuntryName.includes(record.state)\n            )\n            .map((code) => {\n              return code.statecode.toLowerCase();\n            })\n        : [];\n\n    let sortedCountryName =\n      this.props.india.length !== 0\n        ? sortable\n            .filter(\n              (record) =>\n                record.state !== \"Total\" &&\n                sortedCuntryName.includes(record.state)\n            )\n            .map((code) => {\n              return code.state;\n            })\n        : [];\n\n    let dailyConfirmedStatus = this.props.dailyStatus.filter(\n      (data) => data.status === \"Confirmed\"\n    );\n    let dailyRecoveredStatus = this.props.dailyStatus.filter(\n      (data) => data.status === \"Recovered\"\n    );\n    let dailyDeathsStatus = this.props.dailyStatus.filter(\n      (data) => data.status === \"Deceased\"\n    );\n\n    let count = (code, data, index) => {\n      let confirmed = 0;\n      for (var i = 0; i <= index; i++) {\n        confirmed += Number(dailyConfirmedStatus[i][code]);\n      }\n      return confirmed;\n    };\n\n    let dailyConfirmedFiltered = dailyConfirmedStatus.map((data, index) => {\n      let arr = [];\n\n      sortedCountryCode.map((code) => {\n        arr.push({\n          [code.toUpperCase()]: count(code, dailyConfirmedStatus, index),\n        });\n      });\n      return { [data.date]: arr };\n    });\n\n    let dailyRecoveredFiltered = dailyRecoveredStatus.map((data) => {\n      let arr = [];\n      sortedCountryCode.map((code) => {\n        arr.push({ [code.toUpperCase()]: data[code] });\n      });\n      return { [data.date]: arr };\n    });\n\n    let dailyDeathsFiltered = dailyDeathsStatus.map((data) => {\n      let arr = [];\n      sortedCountryCode.map((code) => {\n        arr.push({ [code.toUpperCase()]: data[code] });\n      });\n      return { [data.date]: arr };\n    });\n\n    let multiLineChartData = [];\n\n    multiLineChartData =\n      this.props.dailyStatus.length !== 0\n        ? dailyConfirmedFiltered.map((cases, index) => {\n            let array = Object.values(cases).map((state) => {\n              let subArray = { name: Object.keys(cases)[0] };\n              state.map((state, i) => {\n                subArray[sortedCountryName[i]] = Object.values(state)[0];\n              });\n              return subArray;\n            });\n            return array[0];\n          })\n        : null;\n\n    let a =\n      this.props.dailyStatus.length !== 0 && this.props.india.length !== 0\n        ? this.props.dailyStatus\n            .filter((data) => data.status === \"Confirmed\")\n            .map((d, index) => {\n              let x = {};\n              Object.keys(d).map((d1) => {\n                x[d1] = count(d1, this.props.dailyStatus, index);\n              });\n              let ob = Object.fromEntries(\n                Object.entries(\n                  Object.fromEntries(\n                    Object.entries(x).sort((a, b) => b[1] - a[1])\n                  )\n                ).slice(0, 6)\n              );\n\n              let z = Object.keys(ob)\n                .filter((name) => name !== \"tt\")\n                .map((name, i) => {\n                  return {\n                    name: this.props.india.statewise.filter(\n                      (state) => state.statecode.toLowerCase() === name\n                    )[0].state,\n                    [\"Cases\"]: ob[name],\n                  };\n                });\n              return z;\n            })\n        : [];\n\n    let Columns = [\n      { type: \"string\", label: \"name\" },\n      { type: \"number\", label: \"value\" },\n    ];\n\n    const filteredByDailyConfirmed = this.props.dailyStatus.filter(\n      (data) => data.status === \"Confirmed\"\n    );\n\n    const colourStyles = {\n      control: (styles) => ({\n        ...styles,\n        backgroundColor: \"white\",\n        marginRight: 15,\n        marginBottom: 15,\n      }),\n      option: (styles, { data, isDisabled, isFocused, isSelected }) => {\n        return {\n          ...styles,\n          backgroundColor: isDisabled\n            ? null\n            : isSelected\n            ? \"#404b69\"\n            : isFocused\n            ? \"#ffffff\"\n            : null,\n          color: isDisabled ? \"#ccc\" : isSelected ? \"white\" : \"#404b69\",\n          cursor: isDisabled ? \"not-allowed\" : \"default\",\n\n          \":active\": {\n            ...styles[\":active\"],\n            backgroundColor: !isDisabled && (isSelected ? \"#404b69\" : \"white\"),\n          },\n        };\n      },\n    };\n    let countries = [];\n    let nationalityGroup = [];\n\n    if (this.props.rawData.length !== 0) {\n      this.props.rawData.map((data) => {\n        countries.push(data.nationality);\n      });\n      countries = [...new Set(countries)].map((country) => {\n        return { [country]: 0 };\n      });\n    }\n\n    let ageGroup = [],\n      genderGroup = [];\n    let unknown = 0;\n    let unknownGender = 0;\n    if (this.props.rawData.length !== 0) {\n      let range1 = 0,\n        range2 = 0,\n        range3 = 0,\n        range4 = 0,\n        range5 = 0,\n        range6 = 0,\n        range7 = 0,\n        range8 = 0,\n        range9 = 0,\n        range10 = 0,\n        male = 0,\n        female = 0;\n      this.props.rawData.map((data) => {\n        countries.filter((country, index) => {\n          if (Object.keys(country)[0] === data.nationality) {\n            countries[index][data.nationality] =\n              countries[index][data.nationality] + 1;\n          }\n        });\n        if (data.agebracket !== \"\") {\n          if (Number(data.agebracket) >= 0 && Number(data.agebracket) <= 10) {\n            range1++;\n          } else if (\n            Number(data.agebracket) > 10 &&\n            Number(data.agebracket) <= 20\n          ) {\n            range2++;\n          } else if (\n            Number(data.agebracket) > 20 &&\n            Number(data.agebracket) <= 30\n          ) {\n            range3++;\n          } else if (\n            Number(data.agebracket) > 30 &&\n            Number(data.agebracket) <= 40\n          ) {\n            range4++;\n          } else if (\n            Number(data.agebracket) > 40 &&\n            Number(data.agebracket) <= 50\n          ) {\n            range5++;\n          } else if (\n            Number(data.agebracket) > 50 &&\n            Number(data.agebracket) <= 60\n          ) {\n            range6++;\n          } else if (\n            Number(data.agebracket) > 60 &&\n            Number(data.agebracket) <= 70\n          ) {\n            range7++;\n          } else if (\n            Number(data.agebracket) > 70 &&\n            Number(data.agebracket) <= 80\n          ) {\n            range8++;\n          } else if (\n            Number(data.agebracket) > 80 &&\n            Number(data.agebracket) <= 90\n          ) {\n            range9++;\n          } else {\n            range10++;\n          }\n        } else {\n          unknown++;\n        }\n\n        if (data.gender !== \"\") {\n          if (data.gender === \"M\") {\n            male++;\n          } else if (data.gender === \"F\") {\n            female++;\n          }\n        } else {\n          unknownGender++;\n        }\n      });\n\n      nationalityGroup = countries.map((country) => {\n        if (Object.keys(country)[0] !== \"\") {\n          return {\n            name: Object.keys(country),\n            [\"Patients\"]: Object.values(country),\n          };\n        }\n      });\n\n      ageGroup = [\n        {\n          name: \"0-10 years\",\n          [\"Cases\"]: range1,\n        },\n        { name: \"11-20 years\", [\"Cases\"]: range2 },\n        { name: \"21-30 years\", [\"Cases\"]: range3 },\n        { name: \"31-40 years\", [\"Cases\"]: range4 },\n        { name: \"41-50 years\", [\"Cases\"]: range5 },\n        { name: \"51-60 years\", [\"Cases\"]: range6 },\n        { name: \"61-70 years\", [\"Cases\"]: range7 },\n        { name: \"71-80 years\", [\"Cases\"]: range8 },\n        { name: \"81-90 years\", [\"Cases\"]: range9 },\n        { name: \"91 up years\", [\"Cases\"]: range10 },\n      ];\n      genderGroup = [\n        { name: \"Male\", value: male },\n        { name: \"Female\", value: female },\n        { name: \"Awaiting Details\", value: unknownGender },\n      ];\n    }\n\n    return (\n      <div className=\"row\">\n        <div className=\"col-sm-12 col-12\">\n          <div\n            style={{\n              minHeight: 368,\n              background: \"linear-gradient(to right, #d9a7c7, #fffcdc)\",\n              paddingBottom: 15,\n              paddingLeft: 15,\n              paddingTop: 30,\n              borderRadius: 15,\n              marginBottom: 15,\n            }}\n          >\n            <GradientCardTitle title={\"Top 10 cities by confirmed cases\"} />\n            <SimpleLineChart\n              chart={\"BarChart\"}\n              customTooltip={true}\n              grid={false}\n              data={toptenCities}\n              labels={[\"Cases\"]}\n              colors={[\"#192a56\"]}\n            />\n          </div>\n        </div>\n        <div className=\"col-sm-6 col-12\">\n          <div\n            style={{\n              background: \"linear-gradient(to right, #d9a7c7, #fffcdc)\",\n              paddingBottom: 15,\n              minHeight: 368,\n              paddingLeft: 15,\n              paddingTop: 30,\n              borderRadius: 15,\n              marginBottom: 15,\n            }}\n          >\n            <GradientCardTitle title={\"Total Confirmed and Active cases\"} />\n            <SwitchBar\n              options={[\"Total\", \"Daily\"]}\n              optionValues={[\"cumulative\", \"daily\"]}\n              onClick={(prop) => {\n                this.props.onSwitch(prop);\n              }}\n              showGlobalChartType={this.props.changeChart}\n            />\n            <SimpleLineChart\n              chart={\"AreaChart\"}\n              customTooltip={true}\n              grid={false}\n              data={\n                this.props.changeChart === \"daily\" ? totalDataDaily : totalData\n              }\n              labels={[\"Confirmed\", \"Active\"]}\n              colors={[\"#e43339\", \"#192a56\"]}\n            />\n          </div>\n        </div>\n\n        <div className=\"col-sm-6 col-12\">\n          <div\n            style={{\n              background: \"linear-gradient(to right, #d9a7c7, #fffcdc)\",\n              paddingBottom: 15,\n              minHeight: 368,\n              paddingLeft: 15,\n              paddingTop: 30,\n              borderRadius: 15,\n              marginBottom: 15,\n            }}\n          >\n            <GradientCardTitle title={\"Total Recovered cases and Deaths\"} />\n            <SwitchBar\n              options={[\"Total\", \"Daily\"]}\n              optionValues={[\"cumulative\", \"daily\"]}\n              onClick={(prop) => {\n                this.props.onSwitch(prop);\n              }}\n              showGlobalChartType={this.props.changeChart}\n            />\n            <SimpleLineChart\n              chart={\"AreaChart\"}\n              customTooltip={true}\n              grid={false}\n              data={\n                this.props.changeChart === \"daily\" ? totalDataDaily : totalData\n              }\n              labels={[\"Recovered\", \"Deaths\"]}\n              colors={[\"#006266\", \"#535c68\"]}\n            />\n          </div>\n        </div>\n\n        <div className=\"col-sm-6 col-12\">\n          <div\n            style={{\n              minHeight: 390,\n              background: \"linear-gradient(to right, #d9a7c7, #fffcdc)\",\n              paddingBottom: 15,\n              paddingLeft: 15,\n              paddingTop: 30,\n              borderRadius: 15,\n              marginBottom: 15,\n            }}\n          >\n            <GradientCardTitle\n              title={\"Top 5 states timeline by confirmed cases\"}\n            />\n            <div>\n              <div className=\"timer\">\n                <div\n                  className=\"timer-button\"\n                  onClick={() => {\n                    this.setState({\n                      started: !this.state.started,\n                      seconds:\n                        this.state.seconds < a.length - 1\n                          ? this.state.seconds\n                          : 0,\n                    });\n                    this.state.seconds < a.length - 1\n                      ? (this.timer = setInterval(() => {\n                          return this.state.seconds < a.length - 1\n                            ? this.state.started\n                              ? this.setState({\n                                  seconds: this.state.seconds + 1,\n                                })\n                              : null\n                            : (clearInterval(this.timer),\n                              this.state.started === true\n                                ? this.setState({\n                                    started: false,\n                                  })\n                                : null);\n                        }, 1000))\n                      : clearInterval(this.timer);\n                  }}\n                >\n                  {this.state.started ? \"Stop\" : \"Start\"}\n                </div>\n              </div>\n              <div className=\"timer-date\">\n                {filteredByDailyConfirmed.length > 0\n                  ? filteredByDailyConfirmed[this.state.seconds].date\n                  : null}\n              </div>\n            </div>\n            <SimpleLineChart\n              layout=\"vertical\"\n              chart={\"BarChart\"}\n              customTooltip={true}\n              grid={false}\n              data={a[this.state.seconds]}\n              labels={[\"Cases\"]}\n              colors={[\"#192a56\"]}\n            />\n          </div>\n        </div>\n\n        <div className=\"col-sm-6 col-12\">\n          <div\n            style={{\n              background: \"linear-gradient(to right, #d9a7c7, #fffcdc)\",\n              paddingBottom: 15,\n              minHeight: 390,\n              paddingLeft: 15,\n              paddingTop: 30,\n              borderRadius: 15,\n              marginBottom: 15,\n            }}\n          >\n            <GradientCardTitle title={\"Total cases in top 10 states\"} />\n            <SimpleLineChart\n              chart={\"AreaChart\"}\n              legend={false}\n              customTooltip={true}\n              grid={false}\n              data={multiLineChartData}\n              labels={sortedCountryName}\n              colors={[\n                \"#3c3568\",\n                \"#f6ba62\",\n                \"#bc443b\",\n                \"#185e4b\",\n                \"#150a47\",\n                \"#334553\",\n                \"#d82f5a\",\n                \"#000133\",\n                \"#11887b\",\n                \"#044a05\",\n              ]}\n            />\n          </div>\n        </div>\n        <div className=\"col-sm-6 col-12\">\n          <div\n            style={{\n              minHeight: 368,\n              background: \"linear-gradient(to right, #d9a7c7, #fffcdc)\",\n              paddingBottom: 15,\n              paddingLeft: 15,\n              paddingTop: 30,\n              borderRadius: 15,\n              marginBottom: 15,\n            }}\n          >\n            <GradientCardTitle title={\"Top 10 states by cases\"} />\n            <div className=\"row\" style={{ justifyContent: \"center\" }}>\n              <div className=\"col-sm-4\">\n                <Select\n                  isClearable={false}\n                  isSearchable={false}\n                  onChange={(selectedOption) => {\n                    this.props.onSelectOption(selectedOption);\n                  }}\n                  styles={colourStyles}\n                  placeholder=\"Confirmed\"\n                  options={[\n                    { value: \"confirmed\", label: \"Confirmed\" },\n                    { value: \"active\", label: \"Active\" },\n                    { value: \"deaths\", label: \"Deaths\" },\n                    { value: \"recovered\", label: \"Recovered\" },\n                  ]}\n                />\n              </div>\n            </div>\n            <CustomChart\n              placeholder={false}\n              emptyClassName={\"m-t-40\"}\n              chartArea={{ left: 10, top: 15, right: 10, bottom: 15 }}\n              rows={pieChartData}\n              columns={Columns}\n              chartType={\"PieChart\"}\n              height={\"270px\"}\n            />\n          </div>\n        </div>\n\n        <div className=\"col-sm-6 col-12\">\n          <div\n            style={{\n              minHeight: 410,\n              background: \"linear-gradient(to right, #d9a7c7, #fffcdc)\",\n              paddingBottom: 15,\n              paddingLeft: 15,\n              paddingTop: 30,\n              borderRadius: 15,\n              marginBottom: 15,\n            }}\n          >\n            <GradientCardTitle title={\"Patients count by age\"} />\n            <SimpleLineChart\n              chart={\"BarChart\"}\n              customTooltip={true}\n              grid={false}\n              data={ageGroup}\n              labels={[\"Cases\"]}\n              colors={[\"#192a56\"]}\n            />\n            <GradientCardFooter\n              content={`*Awaiting details for ${unknown} patients.`}\n            />\n          </div>\n        </div>\n        <div className=\"col-sm-6 col-12\">\n          <div\n            style={{\n              minHeight: 368,\n              background: \"linear-gradient(to right, #d9a7c7, #fffcdc)\",\n              paddingBottom: 15,\n              paddingLeft: 15,\n              paddingTop: 30,\n              borderRadius: 15,\n              marginBottom: 15,\n            }}\n          >\n            <GradientCardTitle title={\"Patients count by gender\"} />\n            <div style={{ marginBottom: -24 }}>\n              <span style={{ color: \"#192a56\", fontWeight: \"bold\" }}>\n                Male{\" \"}\n                {genderGroup.length !== 0\n                  ? genderGroup.filter((stat) => stat.name === \"Male\")[0].value\n                  : 0}\n              </span>\n              <span\n                style={{\n                  marginLeft: 15,\n                  color: \"rgb(255, 82, 82)\",\n                  fontWeight: \"bold\",\n                }}\n              >\n                Female{\" \"}\n                {genderGroup.length !== 0\n                  ? genderGroup.filter((stat) => stat.name === \"Female\")[0]\n                      .value\n                  : 0}\n              </span>\n              <span\n                style={{\n                  marginLeft: 15,\n                  color: \"#404b69\",\n                  fontWeight: \"bold\",\n                }}\n              >\n                A. Details{\" \"}\n                {genderGroup.length !== 0\n                  ? genderGroup.filter(\n                      (stat) => stat.name === \"Awaiting Details\"\n                    )[0].value\n                  : 0}\n              </span>\n            </div>\n            <SimplePieChart data={genderGroup} />\n            <GradientCardFooter\n              content={`*Awaiting details for ${unknownGender} patients.`}\n            />\n          </div>\n        </div>\n        <div className=\"col-sm-6 col-12\">\n          <div\n            style={{\n              minHeight: 368,\n              background: \"linear-gradient(to right, #d9a7c7, #fffcdc)\",\n              paddingBottom: 15,\n              paddingLeft: 15,\n              paddingTop: 30,\n              borderRadius: 15,\n              marginBottom: 15,\n            }}\n          >\n            <GradientCardTitle title={\"Patients count by nationality\"} />\n\n            <SimpleLineChart\n              chart={\"BarChart\"}\n              customTooltip={true}\n              grid={false}\n              data={nationalityGroup}\n              labels={[\"Patients\"]}\n              colors={[\"#192a56\"]}\n            />\n            <GradientCardFooter\n              content={`*Awaiting details for ${\n                typeof countries.filter(\n                  (country) => Object.keys(country)[0] === \"\"\n                )[0] !== \"undefined\"\n                  ? Object.values(\n                      countries.filter(\n                        (country) => Object.keys(country)[0] === \"\"\n                      )[0]\n                    )[0]\n                  : countries.filter(\n                      (country) => Object.keys(country)[0] === \"\"\n                    )[0]\n              } patients.`}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Analytics;\n","import React, { useState } from \"react\";\nimport { ComposableMap, Geographies, Geography } from \"react-simple-maps\";\nimport { scaleLog } from \"d3-scale\";\nimport ReactTooltip from \"react-tooltip\";\nimport \"./indiaMap.css\";\nimport { useEffect } from \"react\";\nconst INDIA_TOPO_JSON = require(\"./india.topo.json\");\nconst andamannicobarislands = require(\"./states/andamannicobarislands.json\");\nconst arunachalpradesh = require(\"./states/arunachalpradesh.json\");\nconst andhrapradesh = require(\"./states/andhrapradesh.json\");\nconst assam = require(\"./states/assam.json\");\nconst bihar = require(\"./states/bihar.json\");\nconst chandigarh = require(\"./states/chandigarh.json\");\nconst chhattisgarh = require(\"./states/chhattisgarh.json\");\nconst dadranagarhaveli = require(\"./states/dadranagarhaveli.json\");\nconst delhi = require(\"./states/delhi.json\");\nconst karnataka = require(\"./states/karnataka.json\");\nconst kerala = require(\"./states/kerala.json\");\nconst goa = require(\"./states/goa.json\");\nconst gujarat = require(\"./states/gujarat.json\");\nconst haryana = require(\"./states/haryana.json\");\nconst himachalpradesh = require(\"./states/himachalpradesh.json\");\nconst jammukashmir = require(\"./states/jammukashmir.json\");\nconst jharkhand = require(\"./states/jharkhand.json\");\nconst ladakh = require(\"./states/ladakh.json\");\nconst lakshadweep = require(\"./states/lakshadweep.json\");\nconst madhyapradesh = require(\"./states/madhyapradesh.json\");\nconst maharashtra = require(\"./states/maharashtra.json\");\nconst manipur = require(\"./states/manipur.json\");\nconst meghalaya = require(\"./states/meghalaya.json\");\nconst mizoram = require(\"./states/mizoram.json\");\nconst nagaland = require(\"./states/nagaland.json\");\nconst odisha = require(\"./states/odisha.json\");\nconst puducherry = require(\"./states/puducherry.json\");\nconst punjab = require(\"./states/punjab.json\");\nconst rajasthan = require(\"./states/rajasthan.json\");\nconst sikkim = require(\"./states/sikkim.json\");\nconst nadu = require(\"./states/tamil-nadu.json\");\nconst telangana = require(\"./states/telangana.json\");\nconst tripura = require(\"./states/tripura.json\");\nconst uttarakhand = require(\"./states/uttarakhand.json\");\nconst uttarpradesh = require(\"./states/uttarpradesh.json\");\nconst westbengal = require(\"./states/westbengal.json\");\nconst STATE_TOPO_JSON = require(\"./states/andamannicobarislands.json\");\n\n// Red Variants\nconst COLOR_RANGE = [\"#ffedea\", \"#ffcec5\", \"#ffad9f\"];\n\nconst DEFAULT_COLOR = \"#EEE\";\n\nconst geographyStyle = {\n  default: {\n    outline: \"none\",\n  },\n  hover: {\n    fill: \"#F53\",\n    transition: \"all 250ms\",\n    outline: \"none\",\n  },\n  pressed: {\n    outline: \"none\",\n  },\n};\n\nfunction useWindowSize() {\n  const isClient = typeof window === \"object\";\n\n  function getSize() {\n    return {\n      width: isClient ? window.innerWidth : undefined,\n      height: isClient ? window.innerHeight : undefined,\n    };\n  }\n\n  const [windowSize, setWindowSize] = useState(getSize);\n\n  useEffect(() => {\n    if (!isClient) {\n      return false;\n    }\n\n    function handleResize() {\n      setWindowSize(getSize());\n    }\n\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return windowSize;\n}\n\nconst StateWiseMap = ({ data, stateName }) => {\n  const [tooltipContent, setTooltipContent] = useState(\"\");\n  const size = useWindowSize();\n\n  const colorScale = scaleLog().domain([1, 10]).range(COLOR_RANGE);\n\n  const onMouseEnter = (geo, current = { value: \"NA\" }) => {\n    return () => {\n      setTooltipContent({ ...current, geo });\n    };\n  };\n\n  const onMouseLeave = () => {\n    setTooltipContent(\"\");\n  };\n\n  const getGeoFile = (name) => {\n    switch (name) {\n      case \"andamannicobarislands\":\n        return andamannicobarislands;\n      case \"arunachalpradesh\":\n        return arunachalpradesh;\n      case \"andhrapradesh\":\n        return andhrapradesh;\n      case \"assam\":\n        return assam;\n      case \"bihar\":\n        return bihar;\n      case \"chandigarh\":\n        return chandigarh;\n      case \"chhattisgarh\":\n        return chhattisgarh;\n      case \"dadranagarhaveli\":\n        return dadranagarhaveli;\n      case \"delhi\":\n        return delhi;\n      case \"karnataka\":\n        return karnataka;\n      case \"kerala\":\n        return kerala;\n      case \"goa\":\n        return goa;\n      case \"gujarat\":\n        return gujarat;\n      case \"haryana\":\n        return haryana;\n      case \"himachalpradesh\":\n        return himachalpradesh;\n      case \"jammukashmir\":\n        return jammukashmir;\n      case \"jharkhand\":\n        return jharkhand;\n      case \"ladakh\":\n        return ladakh;\n      case \"lakshadweep\":\n        return lakshadweep;\n      case \"madhyapradesh\":\n        return madhyapradesh;\n      case \"maharashtra\":\n        return maharashtra;\n      case \"manipur\":\n        return manipur;\n      case \"meghalaya\":\n        return meghalaya;\n      case \"mizoram\":\n        return mizoram;\n      case \"nagaland\":\n        return nagaland;\n      case \"odisha\":\n        return odisha;\n      case \"puducherry\":\n        return puducherry;\n      case \"punjab\":\n        return punjab;\n      case \"rajasthan\":\n        return rajasthan;\n      case \"sikkim\":\n        return sikkim;\n      case \"nadu\":\n        return nadu;\n      case \"telangana\":\n        return telangana;\n      case \"tripura\":\n        return tripura;\n      case \"uttarakhand\":\n        return uttarakhand;\n      case \"uttarpradesh\":\n        return uttarpradesh;\n      case \"westbengal\":\n        return westbengal;\n      default:\n        return gujarat;\n    }\n  };\n\n  const getScale = (name) => {\n    switch (name) {\n      case \"andamannicobarislands\":\n        return 1000;\n      case \"arunachalpradesh\":\n        return 2200;\n      case \"andhrapradesh\":\n        return 1300;\n      case \"assam\":\n        return 2200;\n      case \"bihar\":\n        return 2700;\n      case \"chandigarh\":\n        return 3000;\n      case \"chhattisgarh\":\n        return 1600;\n      case \"dadranagarhaveli\":\n        return 10000;\n      case \"delhi\":\n        return 23000;\n      case \"karnataka\":\n        return 1600;\n      case \"kerala\":\n        return 2400;\n      case \"goa\":\n        return 12000;\n      case \"gujarat\":\n        return 2100;\n      case \"haryana\":\n        return 3300;\n      case \"himachalpradesh\":\n        return 3400;\n      case \"jammukashmir\":\n        return 3700;\n      case \"jharkhand\":\n        return 2800;\n      case \"ladakh\":\n        return 3300;\n      case \"lakshadweep\":\n        return 2000;\n      case \"madhyapradesh\":\n        return 1400;\n      case \"maharashtra\":\n        return 1500;\n      case \"manipur\":\n        return 5000;\n      case \"meghalaya\":\n        return 4300;\n      case \"mizoram\":\n        return 4400;\n      case \"nagaland\":\n        return 5500;\n      case \"odisha\":\n        return 2100;\n      case \"puducherry\":\n        return 2000;\n      case \"punjab\":\n        return 3500;\n      case \"rajasthan\":\n        return 1400;\n      case \"sikkim\":\n        return 6000;\n      case \"nadu\":\n        return 580;\n      case \"telangana\":\n        return 2600;\n      case \"tripura\":\n        return 6000;\n      case \"uttarakhand\":\n        return 3600;\n      case \"uttarpradesh\":\n        return 1500;\n      case \"westbengal\":\n        return 2000;\n      default:\n        return 2100;\n    }\n  };\n\n  const getCenter = (name) => {\n    switch (name) {\n      case \"andamannicobarislands\":\n        return [\n          getGeoFile(stateName)[\"transform\"][\"translate\"][0] + 3,\n          getGeoFile(stateName)[\"transform\"][\"translate\"][1] + 2,\n        ];\n      case \"arunachalpradesh\":\n        return [\n          getGeoFile(stateName)[\"transform\"][\"translate\"][0] + 3,\n          getGeoFile(stateName)[\"transform\"][\"translate\"][1] + 1.5,\n        ];\n      case \"andhrapradesh\":\n        return [\n          getGeoFile(stateName)[\"transform\"][\"translate\"][0] + 3,\n          getGeoFile(stateName)[\"transform\"][\"translate\"][1] + 4,\n        ];\n      case \"assam\":\n        return [\n          getGeoFile(stateName)[\"transform\"][\"translate\"][0] + 3,\n          getGeoFile(stateName)[\"transform\"][\"translate\"][1] + 2,\n        ];\n      case \"bihar\":\n        return [\n          getGeoFile(stateName)[\"transform\"][\"translate\"][0] + 2.5,\n          getGeoFile(stateName)[\"transform\"][\"translate\"][1] + 1.5,\n        ];\n      case \"chandigarh\":\n        return [\n          getGeoFile(stateName)[\"transform\"][\"translate\"][0] + 3,\n          getGeoFile(stateName)[\"transform\"][\"translate\"][1] + 2,\n        ];\n      case \"chhattisgarh\":\n        return [\n          getGeoFile(stateName)[\"transform\"][\"translate\"][0] + 3,\n          getGeoFile(stateName)[\"transform\"][\"translate\"][1] + 3.2,\n        ];\n      case \"dadranagarhaveli\":\n        return [\n          getGeoFile(stateName)[\"transform\"][\"translate\"][0] + 0.2,\n          getGeoFile(stateName)[\"transform\"][\"translate\"][1] + 0.8,\n        ];\n      case \"delhi\":\n        return [\n          getGeoFile(stateName)[\"transform\"][\"translate\"][0] + 0.2,\n          getGeoFile(stateName)[\"transform\"][\"translate\"][1] + 0.25,\n        ];\n      case \"karnataka\":\n        return [\n          getGeoFile(stateName)[\"transform\"][\"translate\"][0] + 3,\n          getGeoFile(stateName)[\"transform\"][\"translate\"][1] + 3.5,\n        ];\n      case \"kerala\":\n        return [\n          getGeoFile(stateName)[\"transform\"][\"translate\"][0] + 2,\n          getGeoFile(stateName)[\"transform\"][\"translate\"][1] + 2,\n        ];\n      case \"goa\":\n        return [\n          getGeoFile(stateName)[\"transform\"][\"translate\"][0] + 0.5,\n          getGeoFile(stateName)[\"transform\"][\"translate\"][1] + 0.5,\n        ];\n      case \"gujarat\":\n        return [\n          getGeoFile(stateName)[\"transform\"][\"translate\"][0] + 3,\n          getGeoFile(stateName)[\"transform\"][\"translate\"][1] + 2.5,\n        ];\n      case \"haryana\":\n        return [\n          getGeoFile(stateName)[\"transform\"][\"translate\"][0] + 1.5,\n          getGeoFile(stateName)[\"transform\"][\"translate\"][1] + 1.7,\n        ];\n      case \"himachalpradesh\":\n        return [\n          getGeoFile(stateName)[\"transform\"][\"translate\"][0] + 1.6,\n          getGeoFile(stateName)[\"transform\"][\"translate\"][1] + 1.5,\n        ];\n      case \"jammukashmir\":\n        return [\n          getGeoFile(stateName)[\"transform\"][\"translate\"][0] + 1.5,\n          getGeoFile(stateName)[\"transform\"][\"translate\"][1] + 1.5,\n        ];\n      case \"jharkhand\":\n        return [\n          getGeoFile(stateName)[\"transform\"][\"translate\"][0] + 2.2,\n          getGeoFile(stateName)[\"transform\"][\"translate\"][1] + 1.7,\n        ];\n      case \"ladakh\":\n        return [\n          getGeoFile(stateName)[\"transform\"][\"translate\"][0] + 3,\n          getGeoFile(stateName)[\"transform\"][\"translate\"][1] + 2,\n        ];\n      case \"lakshadweep\":\n        return [\n          getGeoFile(stateName)[\"transform\"][\"translate\"][0] - 2,\n          getGeoFile(stateName)[\"transform\"][\"translate\"][1] + 1,\n        ];\n      case \"madhyapradesh\":\n        return [\n          getGeoFile(stateName)[\"transform\"][\"translate\"][0] + 4,\n          getGeoFile(stateName)[\"transform\"][\"translate\"][1] + 3,\n        ];\n      case \"maharashtra\":\n        return [\n          getGeoFile(stateName)[\"transform\"][\"translate\"][0] + 3.7,\n          getGeoFile(stateName)[\"transform\"][\"translate\"][1] + 3.3,\n        ];\n      case \"manipur\":\n        return [\n          getGeoFile(stateName)[\"transform\"][\"translate\"][0] + 1,\n          getGeoFile(stateName)[\"transform\"][\"translate\"][1] + 1,\n        ];\n      case \"meghalaya\":\n        return [\n          getGeoFile(stateName)[\"transform\"][\"translate\"][0] + 1.5,\n          getGeoFile(stateName)[\"transform\"][\"translate\"][1] + 0.7,\n        ];\n      case \"mizoram\":\n        return [\n          getGeoFile(stateName)[\"transform\"][\"translate\"][0] + 1,\n          getGeoFile(stateName)[\"transform\"][\"translate\"][1] + 1.3,\n        ];\n      case \"nagaland\":\n        return [\n          getGeoFile(stateName)[\"transform\"][\"translate\"][0] + 1,\n          getGeoFile(stateName)[\"transform\"][\"translate\"][1] + 0.9,\n        ];\n      case \"odisha\":\n        return [\n          getGeoFile(stateName)[\"transform\"][\"translate\"][0] + 3,\n          getGeoFile(stateName)[\"transform\"][\"translate\"][1] + 2.5,\n        ];\n      case \"puducherry\":\n        return [\n          getGeoFile(stateName)[\"transform\"][\"translate\"][0] + 3,\n          getGeoFile(stateName)[\"transform\"][\"translate\"][1] + 2,\n        ];\n      case \"punjab\":\n        return [\n          getGeoFile(stateName)[\"transform\"][\"translate\"][0] + 1.4,\n          getGeoFile(stateName)[\"transform\"][\"translate\"][1] + 1.5,\n        ];\n      case \"rajasthan\":\n        return [\n          getGeoFile(stateName)[\"transform\"][\"translate\"][0] + 4,\n          getGeoFile(stateName)[\"transform\"][\"translate\"][1] + 3.5,\n        ];\n      case \"sikkim\":\n        return [\n          getGeoFile(stateName)[\"transform\"][\"translate\"][0] + 0.3,\n          getGeoFile(stateName)[\"transform\"][\"translate\"][1] + 0.5,\n        ];\n      case \"nadu\":\n        return [\n          getGeoFile(stateName)[\"transform\"][\"translate\"][0] + 5,\n          getGeoFile(stateName)[\"transform\"][\"translate\"][1] + 11,\n        ];\n      case \"telangana\":\n        return [\n          getGeoFile(stateName)[\"transform\"][\"translate\"][0] + 1.5,\n          getGeoFile(stateName)[\"transform\"][\"translate\"][1] + 2,\n        ];\n      case \"tripura\":\n        return [\n          getGeoFile(stateName)[\"transform\"][\"translate\"][0] + 0.6,\n          getGeoFile(stateName)[\"transform\"][\"translate\"][1] + 0.8,\n        ];\n      case \"uttarakhand\":\n        return [\n          getGeoFile(stateName)[\"transform\"][\"translate\"][0] + 1.6,\n          getGeoFile(stateName)[\"transform\"][\"translate\"][1] + 1.4,\n        ];\n      case \"uttarpradesh\":\n        return [\n          getGeoFile(stateName)[\"transform\"][\"translate\"][0] + 3,\n          getGeoFile(stateName)[\"transform\"][\"translate\"][1] + 3.4,\n        ];\n      case \"westbengal\":\n        return [\n          getGeoFile(stateName)[\"transform\"][\"translate\"][0] + 3,\n          getGeoFile(stateName)[\"transform\"][\"translate\"][1] + 3,\n        ];\n      default:\n        return [\n          getGeoFile(stateName)[\"transform\"][\"translate\"][0] + 3,\n          getGeoFile(stateName)[\"transform\"][\"translate\"][1] + 2.5,\n        ];\n    }\n  };\n\n  return (\n    <div className=\"indiamap\">\n      {tooltipContent !== \"\" ? (\n        <ReactTooltip>\n          <div>\n            <span\n              style={{\n                fontWeight: \"bold\",\n                fontSize: 16,\n                color: \"rgb(64, 75, 105)\",\n              }}\n            >\n              {tooltipContent.geo.properties.district}\n            </span>\n            <br />\n            <span\n              style={{\n                fontWeight: \"bold\",\n                fontSize: 16,\n                color: \"rgb(228, 51, 57)\",\n              }}\n            >\n              {typeof tooltipContent.confirmed !== \"undefined\"\n                ? \"Confirmed: \"\n                : \"Confirmed: 0\"}\n\n              {typeof tooltipContent.confirmed !== \"undefined\"\n                ? tooltipContent.confirmed\n                : null}\n              {typeof tooltipContent.confirmed !== \"undefined\" ? (\n                Number(tooltipContent.delta.confirmed) !== 0 ? (\n                  <span style={{ fontSize: 17, fontWeight: \"bold\" }}>\n                    &#9650; {tooltipContent.delta.confirmed}\n                  </span>\n                ) : null\n              ) : null}\n            </span>\n          </div>\n        </ReactTooltip>\n      ) : null}\n      <ComposableMap\n        projectionConfig={{\n          scale: getScale(stateName),\n          center: getCenter(stateName),\n        }}\n        projection=\"geoMercator\"\n        height={\n          size.width < 1500 && size.width > 768\n            ? 500\n            : size.width <= 768 && size.width > 400\n            ? 400\n            : size.width <= 400\n            ? 120\n            : Math.floor(size.width / 10)\n        }\n        width={\n          size.width < 1500 && size.width > 768\n            ? 900\n            : size.width <= 768 && size.width > 400\n            ? 600\n            : size.width <= 400\n            ? 220\n            : Math.floor(size.width / 5)\n        }\n        data-tip=\"\"\n      >\n        <Geographies geography={getGeoFile(stateName)}>\n          {({ geographies }) =>\n            geographies.map((geo) => {\n              const current = Object.keys(data).find(\n                (s) => s === geo.properties.district\n              );\n\n              return (\n                <Geography\n                  key={geo.rsmKey}\n                  geography={geo}\n                  fill={\n                    data[current]\n                      ? colorScale(data[current].confirmed)\n                      : DEFAULT_COLOR\n                  }\n                  style={geographyStyle}\n                  onMouseEnter={onMouseEnter(geo, data[current])}\n                  onMouseLeave={onMouseLeave}\n                />\n              );\n            })\n          }\n        </Geographies>\n      </ComposableMap>\n    </div>\n  );\n};\n\nexport default StateWiseMap;\n","import React, { Component } from \"react\";\nimport \"components/Backup/App.css\";\nimport \"react-table-6/react-table.css\";\nimport { withRouter } from \"react-router-dom\";\nimport ErrorBoundary from \"components/ui/ErrorBoundry/ErrorBoundry\";\nimport IndiaMap from \"components/charts/IndiaMap/IndiaMap\";\nimport Footer from \"components/ui/Footer/Footer\";\nimport Table from \"components/container/India/SubComponents/Table\";\nimport Cards from \"components/container/India/SubComponents/Cards\";\nimport \"components/container/India/India.sass\";\nimport Header from \"components/ui/Header/Header\";\nimport GradientCardTitle from \"components/ui/GradientCardTitle/GradientCardTitle\";\nimport NumbersCard from \"components/container/India/SubComponents/NumbersCard\";\nimport NavigationBar from \"components/ui/NavigationBar/NavigationBar\";\nimport Analytics from \"components/container/India/SubComponents/Analytics\";\nimport StateWiseMap from \"../../charts/IndiaMap/StateWiseMap\";\n\nclass India extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchString: \"\",\n      currentPage: 0,\n      ui: \"/\",\n      width: 0,\n      height: 0,\n      selectedCity: \"\",\n      confirmedOpen: false,\n      activeOpen: false,\n      filterByCases: \"confirmed\",\n      changeChart: \"cumulative\",\n      tooltipContent: \"\",\n      displayBySort: \"All\",\n      deathsOpen: false,\n      totalPages: 0,\n      activePage: 0,\n      selectedCountry: false,\n      locationLoader: false,\n      data: [],\n      stateWiseCity: [],\n      rawData: [],\n      dailyStatus: [],\n      india: [],\n      timelines: [],\n      labels: [\"January\", \"February\", \"March\", \"April\", \"May\"],\n      isTable: 0,\n      datasets: [\n        {\n          label: \"Rainfall\",\n          backgroundColor: \"rgba(75,192,192,1)\",\n          borderColor: \"rgba(0,0,0,1)\",\n          borderWidth: 2,\n          data: [65, 59, 80, 81, 56],\n          data1: [65, 59, 80, 81, 56],\n          data2: [65, 59, 80, 81, 56],\n          data3: [65, 59, 80, 81, 56],\n        },\n      ],\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.updateDimensions);\n\n    window.addEventListener(\"focus\", () => {\n      this.getData();\n      this.getStateData();\n    });\n\n    this.setState({\n      locationLoader: true,\n    });\n    this.getRawData();\n    this.getDailyStatus();\n    this.getData();\n    this.getStateData();\n  }\n\n  getStateData() {\n    fetch(\"https://api.covid19india.org/state_district_wise.json\", {\n      method: \"GET\",\n    })\n      .then((res) => res.json())\n      .then((response) => {\n        this.setState({\n          stateWiseCity: response,\n        });\n      })\n      .catch((error) => {});\n  }\n\n  getRawData() {\n    fetch(`https://api.covid19india.org/raw_data.json`, {\n      method: \"GET\",\n    })\n      .then((res) => res.json())\n      .then((response) => {\n        this.setState({\n          rawData: response.raw_data,\n          locationLoader: false,\n        });\n      })\n      .catch((error) => {\n        this.setState({\n          locationLoader: false,\n        });\n      });\n  }\n\n  getDailyStatus() {\n    fetch(`https://api.covid19india.org/states_daily.json`, {\n      method: \"GET\",\n    })\n      .then((res) => res.json())\n      .then((response) => {\n        this.setState({\n          dailyStatus: response.states_daily,\n          locationLoader: false,\n        });\n      })\n      .catch((error) => {\n        this.setState({\n          locationLoader: false,\n        });\n      });\n  }\n\n  getData() {\n    fetch(`https://api.covid19india.org/data.json`, {\n      method: \"GET\",\n    })\n      .then((res) => res.json())\n      .then((response) => {\n        this.setState({\n          india: response,\n          locationLoader: false,\n        });\n      })\n      .catch((error) => {\n        this.setState({\n          locationLoader: false,\n        });\n      });\n  }\n\n  chunkArray = (array, size) => {\n    let result = [];\n    let arrayCopy = [...array];\n    while (arrayCopy.length > 0) {\n      result.push(arrayCopy.splice(0, size));\n    }\n    return result;\n  };\n\n  updateDimensions = () => {\n    this.setState({ width: window.innerWidth, height: window.innerHeight });\n  };\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateDimensions);\n  }\n\n  filterStateName = (name) => {\n    switch (name) {\n      case \"Andaman and Nicobar Islands\":\n        return \"andamannicobarislands\";\n      case \"Arunachal Pradesh\":\n        return \"arunachalpradesh\";\n      case \"Andhra Pradesh\":\n        return \"andhrapradesh\";\n      case \"Assam\":\n        return \"assam\";\n      case \"Bihar\":\n        return \"bihar\";\n      case \"Chandigarh\":\n        return \"chandigarh\";\n      case \"Chhattisgarh\":\n        return \"chhattisgarh\";\n      case \"Dadra and Nagar Haveli\":\n        return \"dadranagarhaveli\";\n      case \"Delhi\":\n        return \"delhi\";\n      case \"Karnataka\":\n        return \"karnataka\";\n      case \"Kerala\":\n        return \"kerala\";\n      case \"Goa\":\n        return \"goa\";\n      case \"Gujarat\":\n        return \"gujarat\";\n      case \"Haryana\":\n        return \"haryana\";\n      case \"Himachal Pradesh\":\n        return \"himachalpradesh\";\n      case \"Jammu and Kashmir\":\n        return \"jammukashmir\";\n      case \"Jharkhand\":\n        return \"jharkhand\";\n      case \"Ladakh\":\n        return \"ladakh\";\n      case \"Lakshadweep\":\n        return \"lakshadweep\";\n      case \"Madhya Pradesh\":\n        return \"madhyapradesh\";\n      case \"Maharashtra\":\n        return \"maharashtra\";\n      case \"Manipur\":\n        return \"manipur\";\n      case \"Meghalaya\":\n        return \"meghalaya\";\n      case \"Mizoram\":\n        return \"mizoram\";\n      case \"Nagaland\":\n        return \"nagaland\";\n      case \"Odisha\":\n        return \"odisha\";\n      case \"Puducherry\":\n        return \"puducherry\";\n      case \"Punjab\":\n        return \"punjab\";\n      case \"Rajasthan\":\n        return \"rajasthan\";\n      case \"Sikkim\":\n        return \"sikkim\";\n      case \"Tamil Nadu\":\n        return \"nadu\";\n      case \"Telangana\":\n        return \"telangana\";\n      case \"Tripura\":\n        return \"tripura\";\n      case \"Uttarakhand\":\n        return \"uttarakhand\";\n      case \"Uttar Pradesh\":\n        return \"uttarpradesh\";\n      case \"West Bengal\":\n        return \"westbengal\";\n      default:\n        return \"gujarat\";\n    }\n  };\n\n  render() {\n    return (\n      <ErrorBoundary>\n        <div className=\"App India\">\n          <div className=\"container\">\n            <div>\n              <Header\n                dashboard={\"India\"}\n                history={this.props.history}\n                width={this.state.width}\n              />\n            </div>\n            <div style={{ minHeight: \"90vh\" }}>\n              <NumbersCard india={this.state.india} />\n              <NavigationBar\n                type=\"India\"\n                ui={this.state.ui}\n                options={[\"Analytics\", \"Card\", \"Table\", \"Map\"]}\n                optionRoutes={[\"/\", \"/card\", \"/table\", \"/map\"]}\n                onClick={(route) => {\n                  this.setState({\n                    ui: route,\n                  });\n                }}\n              />\n              {this.state.ui === \"/\" ? (\n                <Analytics\n                  stateWiseCity={this.state.stateWiseCity}\n                  dailyStatus={this.state.dailyStatus}\n                  rawData={this.state.rawData}\n                  filterByCases={this.state.filterByCases}\n                  displayBySort={this.state.displayBySort}\n                  india={this.state.india}\n                  onSelectOption={(selectedOption) => {\n                    this.setState({\n                      filterByCases:\n                        selectedOption === null\n                          ? \"confirmed\"\n                          : selectedOption.value,\n                    });\n                  }}\n                  onSwitch={(prop) =>\n                    this.setState({\n                      changeChart: prop,\n                    })\n                  }\n                  changeChart={this.state.changeChart}\n                />\n              ) : null}\n              {this.state.ui === \"/map\" ? (\n                <div>\n                  {this.state.showState === true ? (\n                    <div>\n                      <div\n                        style={{\n                          background:\n                            \"linear-gradient(to right, #d9a7c7, #fffcdc)\",\n                          paddingBottom: 25,\n                          paddingTop: 30,\n                          borderRadius: 15,\n                          marginBottom: 15,\n                        }}\n                      >\n                        <GradientCardTitle\n                          style={{ textAlign: \"center\" }}\n                          title={this.state.originalStateName}\n                        />\n                        <div\n                          style={{\n                            display: \"flex\",\n                            justifyContent: \"space-around\",\n                          }}\n                        >\n                          <div\n                            style={{\n                              fontWeight: \"bold\",\n                              fontSize: 16,\n                              color: \"rgb(228, 51, 57)\",\n                            }}\n                          >\n                            <span>Confirmed</span>\n                            <br />\n                            <span>{this.state.toolTipContent.confirmed}</span>\n                            <br />\n\n                            {this.state.toolTipContent.deltaconfirmed !==\n                            \"0\" ? (\n                              <span\n                                style={{ fontSize: 17, fontWeight: \"bold\" }}\n                              >\n                                &#9650;{\" \"}\n                                {this.state.toolTipContent.deltaconfirmed}\n                              </span>\n                            ) : null}\n                          </div>\n\n                          <div\n                            style={{\n                              fontWeight: \"bold\",\n                              fontSize: 16,\n                              color: \"rgb(25, 42, 86)\",\n                            }}\n                          >\n                            <span>Active</span>\n                            <br />\n                            <span>{this.state.toolTipContent.active}</span>\n                          </div>\n                          <div\n                            style={{\n                              fontWeight: \"bold\",\n                              fontSize: 16,\n                              color: \"rgb(0, 98, 102)\",\n                            }}\n                          >\n                            <span>Recovered</span>\n                            <br />\n                            <span>{this.state.toolTipContent.recovered}</span>\n                            <br />\n                            {this.state.toolTipContent.deltaconfirmed !==\n                            \"0\" ? (\n                              <span\n                                style={{ fontSize: 17, fontWeight: \"bold\" }}\n                              >\n                                &#9650;{\" \"}\n                                {this.state.toolTipContent.deltarecovered}\n                              </span>\n                            ) : null}\n                          </div>\n                          <div\n                            style={{\n                              fontWeight: \"bold\",\n                              fontSize: 16,\n                              color: \"rgb(83, 92, 104)\",\n                            }}\n                          >\n                            <span>Deaths</span>\n                            <br />\n                            <span>{this.state.toolTipContent.deaths}</span>\n                            <br />\n                            {this.state.toolTipContent.deltaconfirmed !==\n                            \"0\" ? (\n                              <span\n                                style={{ fontSize: 17, fontWeight: \"bold\" }}\n                              >\n                                &#9650; {this.state.toolTipContent.deltadeaths}\n                              </span>\n                            ) : null}\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"d-flex justify-content-center\">\n                        <div\n                          style={{\n                            background: \"#404b69\",\n                            cursor: \"pointer\",\n                            fontWeight: \"bold\",\n                            padding: \"6px 20px\",\n                            borderRadius: 5,\n                          }}\n                          onClick={() =>\n                            this.setState({\n                              showState: false,\n                            })\n                          }\n                        >\n                          Back\n                        </div>\n                      </div>\n                    </div>\n                  ) : null}\n                  <div\n                    className=\"row india-map\"\n                    style={{\n                      border: \"2px solid rgb(255, 252, 220)\",\n                      marginRight: 0,\n                      marginTop: 15,\n                      marginLeft: 0,\n                      borderRadius: 10,\n                    }}\n                  >\n                    <div\n                      className=\"col-sm-12\"\n                      style={{ marginTop: 60, marginBottom: 80 }}\n                    >\n                      {this.state.showState === true ? (\n                        <div>\n                          <StateWiseMap\n                            stateName={this.state.stateName}\n                            data={\n                              this.state.stateWiseCity.length !== 0\n                                ? typeof this.state.stateWiseCity[\n                                    this.state.originalStateName\n                                  ] !== \"undefined\"\n                                  ? this.state.stateWiseCity[\n                                      this.state.originalStateName\n                                    ][\"districtData\"]\n                                  : []\n                                : []\n                            }\n                          />\n                        </div>\n                      ) : (\n                        <IndiaMap\n                          onStateClick={(state) => {\n                            this.setState({\n                              showState: true,\n                              stateName: this.filterStateName(state.state),\n                              originalStateName: state.state,\n                              toolTipContent: state,\n                            });\n                          }}\n                          data={\n                            this.state.india.length !== 0\n                              ? this.state.india.statewise.filter(\n                                  (state) => state.state !== \"Total\"\n                                )\n                              : []\n                          }\n                        />\n                      )}\n                    </div>\n                  </div>\n                </div>\n              ) : null}\n              {this.state.ui === \"/card\" ? (\n                <>\n                  <div style={{ paddingTop: 5 }}>\n                    <input\n                      type=\"text\"\n                      placeholder=\"Search\"\n                      onChange={(e) =>\n                        this.setState({\n                          searchString: e.target.value,\n                        })\n                      }\n                    />\n                  </div>\n                  <Cards\n                    dailyStatus={this.state.dailyStatus}\n                    locationLoader={this.state.locationLoader}\n                    india={this.state.india}\n                    searchString={this.state.searchString}\n                  />\n                </>\n              ) : null}{\" \"}\n              {this.state.ui === \"/table\" ? (\n                <Table\n                  india={this.state.india}\n                  stateWiseCity={this.state.stateWiseCity}\n                />\n              ) : null}\n            </div>\n            <Footer />\n          </div>\n        </div>\n      </ErrorBoundary>\n    );\n  }\n}\n\nexport default withRouter(India);\n","import React, { Component } from \"react\";\nimport ReactTable from \"react-table-6\";\nimport \"react-table-6/react-table.css\";\n\nclass Table extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    const data =\n      this.props.globalData.length !== 0\n        ? this.props.globalData\n            .filter((country) => country.title !== \"World\")\n            .map((country) => {\n              return {\n                country: country.title,\n                confirmed: Number(country.confirmed),\n                active: Number(country.active),\n                recovered: Number(country.recovered),\n                deaths: Number(country.deaths),\n                deltaConfirmed: Number(country.confirmed_today),\n                deltaDeaths: Number(country.deaths_today),\n                tests: Number(country.totaltests),\n              };\n            })\n        : [];\n\n    const columns =\n      this.props.globalData.length !== 0\n        ? [\n            {\n              Header: \"Country\",\n              accessor: \"country\",\n            },\n            {\n              Header: \"Confirmed\",\n              accessor: \"confirmed\",\n              Cell: (props) => {\n                return (\n                  <>\n                    {props.original.deltaConfirmed === 0 ? null : (\n                      <span\n                        style={{\n                          fontSize: 15,\n                          fontWeight: \"bold\",\n                          color: \"#e43339\",\n                        }}\n                      >\n                        <span style={{ fontSize: 15, fontWeight: \"bold\" }}>\n                          &#9650;\n                        </span>\n                        {props.original.deltaConfirmed}\n                      </span>\n                    )}{\" \"}\n                    <span className=\"number\">{props.value}</span>\n                  </>\n                );\n              },\n            },\n            {\n              Header: \"Active\",\n              accessor: \"active\",\n              Cell: (props) => {\n                return (\n                  <>\n                    <span className=\"number\">{props.value}</span>\n                  </>\n                );\n              },\n            },\n            {\n              Header: \"Recovered\",\n              accessor: \"recovered\",\n              Cell: (props) => {\n                return (\n                  <>\n                    <span className=\"number\">{props.value}</span>\n                  </>\n                );\n              },\n            },\n            {\n              Header: \"Deaths\",\n              accessor: \"deaths\",\n              Cell: (props) => {\n                return (\n                  <>\n                    {props.original.deltaDeaths === 0 ? null : (\n                      <span\n                        style={{\n                          fontSize: 15,\n                          fontWeight: \"bold\",\n                          color: \"#535c68\",\n                        }}\n                      >\n                        <span style={{ fontSize: 15, fontWeight: \"bold\" }}>\n                          &#9650;\n                        </span>\n                        {props.original.deltaDeaths}\n                      </span>\n                    )}{\" \"}\n                    <span className=\"number\">{props.value}</span>\n                  </>\n                );\n              },\n            },\n            {\n              Header: \"Tests\",\n              accessor: \"tests\",\n              Cell: (props) => {\n                return (\n                  <>\n                    <span className=\"number\">{props.value}</span>\n                  </>\n                );\n              },\n            },\n          ]\n        : [];\n    return (\n      <div className=\"row global-table\">\n        <div className=\"col-sm-12\">\n          <div className=\"global-table-card\">\n            <ReactTable\n              style={{ minHeight: 500 }}\n              data={data}\n              columns={columns}\n              defaultPageSize={10}\n              className=\"-striped -highlight\"\n              noDataText={<b>No data found</b>}\n              getTheadProps={(state, rowInfo, column) => {\n                return {\n                  style: {\n                    fontWeight: \"bold\",\n                  },\n                };\n              }}\n              filterable\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Table;\n","import React, { Component } from \"react\";\nimport ReactGA from \"react-ga\";\nimport \"./NumericCard.sass\";\nimport Popover from \"react-popover\";\n\nclass NumericCard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    const colors = {\n      Confirmed: \"#448AFF\",\n      Active: \"#F9A825\",\n      Recovered: \"#4CAF50\",\n      Deaths: \"#FF5252\",\n    };\n\n    return (\n      <div className=\"row NumericCard\">\n        {this.props.data.map((card, index) => {\n          let dataToday = this.props.dataToday.filter(\n            (data) => Object.keys(data)[0] === Object.keys(card)[0]\n          );\n          let showPopover = this.props.showPopover.filter(\n            (data) => Object.keys(data)[0] === Object.keys(card)[0]\n          );\n          let popoverData = this.props.popoverData.filter(\n            (data) => Object.keys(data)[0] === Object.keys(card)[0]\n          );\n          return (\n            <div\n              key={index}\n              style={{ marginBottom: 15, marginTop: 15 }}\n              className={this.props.className}\n            >\n              <div\n                className=\"card\"\n                style={{\n                  background: colors[Object.keys(card)[0]],\n                }}\n              >\n                <div\n                  className=\"mainNumbers\"\n                  style={dataToday.length !== 0 ? {} : { marginBottom: 42 }}\n                >\n                  {Object.values(card)[0]}\n                </div>\n                {dataToday.length !== 0 ? (\n                  <div className=\"deltaNumbers\">\n                    <span className=\"deltaarrow\">&#9650;</span>{\" \"}\n                    {dataToday[0][Object.keys(card)[0]]}\n                    {showPopover[0][Object.keys(card)[0]] ? (\n                      <Popover\n                        body={\n                          <div\n                            style={{\n                              maxHeight: 400,\n                              overflowY: \"scroll\",\n                              borderRight: 10,\n                              background: \"white\",\n                              borderRadius: 10,\n                              padding: 15,\n                              color: \"#192a56\",\n                              fontWeight: \"bold\",\n                            }}\n                          >\n                            {popoverData[0][Object.keys(card)[0]]}\n                          </div>\n                        }\n                        preferPlace={\"below\"}\n                        isOpen={this.state[Object.keys(card)[0]]}\n                        onOuterAction={() =>\n                          this.setState({\n                            [Object.keys(card)[0]]: !this.state[\n                              Object.keys(card)[0]\n                            ],\n                          })\n                        }\n                      >\n                        <div\n                          onClick={() => {\n                            ReactGA.event({\n                              category: this.props.type + \" Info\",\n                              action:\n                                this.props.type +\n                                Object.keys(card)[0] +\n                                \" Info Clicked\",\n                              label:\n                                this.props.type +\n                                Object.keys(card)[0] +\n                                \" Info\",\n                            });\n                            this.setState({\n                              [Object.keys(card)[0]]: !this.state[\n                                Object.keys(card)[0]\n                              ],\n                            });\n                          }}\n                          className=\"report-tile delta-info\"\n                        >\n                          ?\n                        </div>\n                      </Popover>\n                    ) : null}\n                  </div>\n                ) : null}\n                <div style={{ fontSize: 18 }}>{Object.keys(card)[0]}</div>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nexport default NumericCard;\n","import React, { Component } from \"react\";\nimport NumericCard from \"components/ui/NumericCard/NumericCard\";\n\nclass NumberCard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <NumericCard\n        type=\"Global\"\n        className=\"col-sm-3 col-6\"\n        data={[\n          {\n            Confirmed:\n              this.props.globalData.length !== 0\n                ? this.props.globalData.filter(\n                    (state) => state.title === \"World\"\n                  )[0].confirmed\n                : 0,\n          },\n          {\n            Active:\n              this.props.globalData.length !== 0\n                ? this.props.globalData.filter(\n                    (state) => state.title === \"World\"\n                  )[0].active\n                : 0,\n          },\n          {\n            Recovered:\n              this.props.globalData.length !== 0\n                ? this.props.globalData.filter(\n                    (state) => state.title === \"World\"\n                  )[0].recovered\n                : 0,\n          },\n          {\n            Deaths:\n              this.props.globalData.length !== 0\n                ? this.props.globalData.filter(\n                    (state) => state.title === \"World\"\n                  )[0].deaths\n                : 0,\n          },\n        ]}\n        showPopover={[\n          {\n            Confirmed:\n              this.props.globalData.length !== 0 &&\n              Number(\n                this.props.globalData.filter(\n                  (state) => state.title === \"World\"\n                )[0].confirmed_today\n              ) !== 0\n                ? true\n                : false,\n          },\n          {\n            Deaths:\n              this.props.globalData.length !== 0 &&\n              Number(\n                this.props.globalData.filter(\n                  (state) => state.title === \"World\"\n                )[0].deaths_today\n              ) !== 0\n                ? true\n                : false,\n          },\n        ]}\n        dataToday={[\n          {\n            Confirmed:\n              this.props.globalData.length !== 0\n                ? this.props.globalData.filter(\n                    (state) => state.title === \"World\"\n                  )[0].confirmed_today\n                : 0,\n          },\n          {\n            Deaths:\n              this.props.globalData.length !== 0\n                ? this.props.globalData.filter(\n                    (state) => state.title === \"World\"\n                  )[0].deaths_today\n                : 0,\n          },\n        ]}\n        popoverData={[\n          {\n            Confirmed: this.props.globalData\n              .filter(\n                (state) =>\n                  state.title !== \"World\" && state.confirmed_today !== \"\"\n              )\n              .map((state, index) => {\n                return (\n                  <div key={index}>\n                    {state.title}: {state.confirmed_today}\n                  </div>\n                );\n              }),\n          },\n          {\n            Deaths: this.props.globalData\n              .filter(\n                (state) => state.title !== \"World\" && state.deaths_today !== \"\"\n              )\n              .map((state, index) => {\n                return (\n                  <div key={index}>\n                    {state.title}: {state.deaths_today}\n                  </div>\n                );\n              }),\n          },\n        ]}\n      />\n    );\n  }\n}\n\nexport default NumberCard;\n","import React, { Component } from \"react\";\nimport GradientCardTitle from \"components/ui/GradientCardTitle/GradientCardTitle\";\nimport SwitchBar from \"components/ui/SwitchBar/SwitchBar\";\nimport SimpleLineChart from \"components/charts/SimpleLineChart/SimpleLineChart\";\nimport CustomChart from \"components/charts/PieChart/CustomChart\";\nimport GradientCardFooter from \"components/ui/GradientCardFooter/GradientCardFooter\";\nimport SimplePieChart from \"components/charts/SimplePieChart/SimplePieChart\";\nimport Select from \"react-select\";\n\nclass Analytics extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    const colourStyles = {\n      control: (styles) => ({\n        ...styles,\n        backgroundColor: \"white\",\n        marginRight: 15,\n        marginBottom: 15,\n      }),\n      option: (styles, { data, isDisabled, isFocused, isSelected }) => {\n        return {\n          ...styles,\n          backgroundColor: isDisabled\n            ? null\n            : isSelected\n            ? \"#404b69\"\n            : isFocused\n            ? \"white\"\n            : null,\n          color: isDisabled ? \"#ccc\" : isSelected ? \"white\" : \"#404b69\",\n          cursor: isDisabled ? \"not-allowed\" : \"default\",\n\n          \":active\": {\n            ...styles[\":active\"],\n            backgroundColor: !isDisabled && (isSelected ? \"#404b69\" : \"white\"),\n          },\n        };\n      },\n    };\n\n    let totalData =\n      this.props.globalTimelines.length !== 0\n        ? this.props.globalTimelines.map((cases, index) => {\n            return {\n              name: cases.reportDate,\n              Confirmed: Number(cases.totalConfirmed),\n              Active:\n                Number(cases.totalConfirmed) -\n                Number(cases.totalRecovered) -\n                Number(cases.deaths.total),\n              Recovered: Number(cases.totalRecovered),\n              Deaths: Number(cases.deaths.total),\n              dailyConfirmed: Number(cases.deltaConfirmed),\n              dailyActive:\n                index === 0\n                  ? Number(cases.totalConfirmed) -\n                    Number(cases.totalRecovered) -\n                    Number(cases.deaths.total)\n                  : Number(cases.totalConfirmed) -\n                    Number(cases.totalRecovered) -\n                    Number(cases.deaths.total) -\n                    (Number(\n                      this.props.globalTimelines[index - 1].totalConfirmed\n                    ) -\n                      Number(\n                        this.props.globalTimelines[index - 1].totalRecovered\n                      ) -\n                      Number(\n                        this.props.globalTimelines[index - 1].deaths.total\n                      )),\n              dailyRecovered: Number(cases.deltaRecovered),\n              dailyDeaths:\n                index === 0\n                  ? Number(cases.deaths.total)\n                  : Number(cases.deaths.total) -\n                    Number(this.props.globalTimelines[index - 1].deaths.total),\n            };\n          })\n        : [];\n\n    let totalDeathsByAge =\n      this.props.deathsRate.length !== 0\n        ? Object.values(\n            this.props.deathsRate.filter(\n              (type) => Object.keys(type)[0] === \"deathsRateByAge\"\n            )[0]\n          )[0].map((cases, index) => {\n            return {\n              name: cases.age,\n              [\"Rate (%)\"]: cases.all_cases.replace(/[^0-9.]/g, \"\"),\n              [\"Rate in confirmed cases(%)\"]: cases.confirmed_cases.replace(\n                /[^0-9.]/g,\n                \"\"\n              ),\n            };\n          })\n        : null;\n\n    let totalDeathsByCom =\n      this.props.deathsRate.length !== 0\n        ? Object.values(\n            this.props.deathsRate.filter(\n              (type) => Object.keys(type)[0] === \"deathsRateBycomorbidity\"\n            )[0]\n          )[0].map((cases, index) => {\n            return {\n              name: cases.age,\n              [\"Rate (%)\"]: cases.all_cases.replace(/[^0-9.]/g, \"\"),\n              [\"Rate in confirmed cases(%)\"]:\n                cases.confirmed_cases.replace(/[^0-9.]/g, \"\") === 0\n                  ? 0\n                  : cases.confirmed_cases.replace(/[^0-9.]/g, \"\"),\n            };\n          })\n        : null;\n\n    const Comparator = (a, b) => {\n      if (Number(a[1]) > Number(b[1])) return -1;\n      if (Number(a[1]) < Number(b[1])) return 1;\n      return 0;\n    };\n\n    var pieChartData =\n      this.props.globalData.length !== 0\n        ? this.props.globalData\n            .filter((country) => country.title !== \"World\")\n            .map((state) => {\n              return [state.title, Number(state[this.props.filterByCases])];\n            })\n        : [];\n\n    var deathsBySex =\n      this.props.deathsRate.length !== 0\n        ? Object.values(\n            this.props.deathsRate.filter(\n              (type) => Object.keys(type)[0] === \"deathsRateBySex\"\n            )[0]\n          )[0].map((cases, index) => {\n            return {\n              name: cases.sex,\n              value: Number(cases.confirmed_cases.replace(/[^0-9.]/g, \"\")),\n            };\n          })\n        : [];\n\n    pieChartData = pieChartData.sort(Comparator).slice(0, 10);\n\n    let Columns = [\n      { type: \"string\", label: \"name\" },\n      { type: \"number\", label: \"value\" },\n    ];\n\n    return (\n      <div className=\"row\">\n        <div className=\"col-sm-4 col-12\">\n          <div className=\"gradient-card\">\n            <GradientCardTitle title={\"Total Confirmed cases daily\"} />\n            <SwitchBar\n              options={[\"Area\", \"Bar\"]}\n              optionValues={[\"AreaChart\", \"BarChart\"]}\n              onClick={(prop) => {\n                this.props.onSwitchBar(prop);\n              }}\n              showGlobalChartType={this.props.showGlobalChartType}\n            />\n            <SimpleLineChart\n              chart={this.props.showGlobalChartType}\n              customTooltip={true}\n              grid={false}\n              data={totalData}\n              labels={[\"Confirmed\"]}\n              colors={[\"#e43339\"]}\n            />\n          </div>\n        </div>\n        <div className=\"col-sm-4 col-12\">\n          <div className=\"gradient-card\">\n            <GradientCardTitle title={\"Total Active cases daily\"} />\n            <SwitchBar\n              options={[\"Area\", \"Bar\"]}\n              optionValues={[\"AreaChart\", \"BarChart\"]}\n              onClick={(prop) => {\n                this.props.onSwitchBar(prop);\n              }}\n              showGlobalChartType={this.props.showGlobalChartType}\n            />\n            <SimpleLineChart\n              chart={this.props.showGlobalChartType}\n              customTooltip={true}\n              grid={false}\n              data={totalData}\n              labels={[\"Active\"]}\n              colors={[\"#192a56\"]}\n            />\n          </div>\n        </div>\n\n        <div className=\"col-sm-4 col-12\">\n          <div className=\"gradient-card\">\n            <GradientCardTitle title={\"Total deaths daily\"} />\n            <SwitchBar\n              options={[\"Area\", \"Bar\"]}\n              optionValues={[\"AreaChart\", \"BarChart\"]}\n              onClick={(prop) => {\n                this.props.onSwitchBar(prop);\n              }}\n              showGlobalChartType={this.props.showGlobalChartType}\n            />\n            <SimpleLineChart\n              chart={this.props.showGlobalChartType}\n              customTooltip={true}\n              grid={false}\n              data={totalData}\n              labels={[\"Deaths\"]}\n              colors={[\"#535c68\"]}\n            />\n          </div>\n        </div>\n\n        <div className=\"col-sm-6 col-12\">\n          <div className=\"gradient-card\">\n            <GradientCardTitle title={\"Top 10 countries by cases\"} />\n            <div className=\"row\" style={{ justifyContent: \"center\" }}>\n              <div className=\"col-sm-6\">\n                <Select\n                  isClearable={false}\n                  isSearchable={false}\n                  onChange={(selectedOption) => {\n                    this.props.onChange(selectedOption);\n                  }}\n                  styles={colourStyles}\n                  placeholder=\"Top 10 Confirmed\"\n                  options={[\n                    { value: \"confirmed\", label: \"Top 10 Confirmed\" },\n                    { value: \"active\", label: \"Top 10 Active\" },\n                    { value: \"deaths\", label: \"Top 10 Deaths\" },\n                    { value: \"recovered\", label: \"Top 10 Recovered\" },\n                  ]}\n                />\n              </div>\n            </div>\n            <CustomChart\n              placeholder={false}\n              emptyClassName={\"m-t-40\"}\n              chartArea={{ left: 10, top: 15, right: 10, bottom: 15 }}\n              rows={pieChartData}\n              columns={Columns}\n              chartType={\"PieChart\"}\n              height={\"270px\"}\n            />\n          </div>\n        </div>\n        <div className=\"col-sm-6 col-12\">\n          <div className=\"gradient-card\">\n            <GradientCardTitle title={\"Fatality Rate By Age\"} />\n            <SimpleLineChart\n              chart={\"BarChart\"}\n              customTooltip={true}\n              grid={false}\n              data={totalDeathsByAge}\n              labels={[\"Rate (%)\"]}\n              colors={[\"#192a56\"]}\n            />\n            <GradientCardFooter\n              content={\n                \"The percentages do not have to add up to 100%, as they do NOT represent share of deaths by age group.\"\n              }\n            />\n          </div>\n        </div>\n        <div className=\"col-sm-6 col-12\">\n          <div className=\"gradient-card\">\n            <GradientCardTitle title={\"Fatality Rate By Gender\"} />\n            <div style={{ marginBottom: -24 }}>\n              <span style={{ color: \"#192a56\", fontWeight: \"bold\" }}>\n                Male{\" \"}\n                {deathsBySex.length !== 0\n                  ? deathsBySex.filter((stat) => stat.name === \"Male\")[0].value\n                  : 0}\n              </span>\n              <span\n                style={{\n                  marginLeft: 15,\n                  color: \"rgb(255, 82, 82)\",\n                  fontWeight: \"bold\",\n                }}\n              >\n                Female{\" \"}\n                {deathsBySex.length !== 0\n                  ? deathsBySex.filter((stat) => stat.name === \"Female\")[0]\n                      .value\n                  : 0}\n              </span>\n            </div>\n            <SimplePieChart data={deathsBySex} />\n            <GradientCardFooter\n              content={\n                \"The percentages do not have to add up to 100%, as they do NOT represent share of deaths by age group.\"\n              }\n            />\n          </div>\n        </div>\n        <div className=\"col-sm-6 col-12\">\n          <div className=\"gradient-card\">\n            <GradientCardTitle title={\"Fatality Rate By Comorbility\"} />\n            <SimpleLineChart\n              chart={\"BarChart\"}\n              customTooltip={true}\n              grid={false}\n              data={totalDeathsByCom}\n              labels={[\"Rate (%)\", \"Rate in confirmed cases(%)\"]}\n              colors={[\"#192a56\", \"#192a56\"]}\n            />\n            <GradientCardFooter\n              content={\n                \"The percentages do not have to add up to 100%, as they do NOT represent share of deaths by age group.\"\n              }\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Analytics;\n","import React from \"react\";\nimport \"./MapSwitchBar.sass\";\n\nconst MapSwitchBar = (props) => {\n  return (\n    <div className=\"MapSwitchBar\">\n      {props.options.map((option, index) => {\n        return (\n          <div\n            key={index}\n            className={\n              props.mapFilter === props.optionValues[index]\n                ? \"mapswitch-active\"\n                : \"mapswitch\"\n            }\n            style={\n              props.mapFilter === props.optionValues[index]\n                ? {\n                    background: props.colors[index],\n                    color: \"white\",\n                  }\n                : {\n                    border: \"2px solid \" + props.colors[index],\n                    color: props.colors[index],\n                  }\n            }\n            onClick={() => props.onClick(props.optionValues[index])}\n          >\n            {option}\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default MapSwitchBar;\n","import React from \"react\";\nimport { scaleLog } from \"d3-scale\";\nimport { ComposableMap, Geographies, Geography } from \"react-simple-maps\";\nimport Countrys from \"./ISO2.json\";\n\nconst geoUrl =\n  \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";\n\nconst colorScale = scaleLog()\n  .domain([1, 10])\n  .range([\n    \"#ffedea\",\n    \"#ffcec5\",\n    \"#ffad9f\",\n    \"#ff8a75\",\n    \"#ff5533\",\n    \"#e2492d\",\n    \"#be3d26\",\n    \"#9a311f\",\n    \"#782618\",\n  ]);\n\nconst MapChart = ({ setTooltipContent, data, mapFilter }) => {\n  return (\n    <ComposableMap\n      height={550}\n      width={700}\n      data-tip=\"\"\n      projectionConfig={{\n        rotate: [-10, 0, 0],\n        scale: 147,\n      }}\n    >\n      {data.length > 0 && (\n        <Geographies geography={geoUrl}>\n          {({ geographies }) =>\n            geographies.map((geo) => {\n              const d = data.find(\n                (s) => Countrys[s.title] === geo.properties.ISO_A2\n              );\n              //VirusTracker\n              // const d = data.find((s) => s.code === geo.properties.ISO_A2);\n              //Covid19Info\n              // const d = data.find(\n              //   (s) => Object.keys(s)[0] === geo.properties.ISO_A3\n              // );\n              return (\n                <Geography\n                  key={geo.rsmKey}\n                  geography={geo}\n                  onMouseEnter={() => {\n                    if (typeof d !== \"undefined\") {\n                      setTooltipContent([\n                        { title: geo.properties.NAME_LONG },\n                        { Confirmed: d.confirmed === \"\" ? 0 : d.confirmed },\n                        { Deaths: d.deaths === \"\" ? 0 : d.deaths },\n                        { Recovered: d.recovered === \"\" ? 0 : d.recovered },\n                        {\n                          DeathsToday:\n                            d.deaths_today === \"\" ? 0 : d.deaths_today,\n                        },\n                        {\n                          ConfirmedToday:\n                            d.confirmed_today === \"\" ? 0 : d.confirmed_today,\n                        },\n                      ]);\n                      // VirusTracker\n                      // setTooltipContent([\n                      //   { title: d.title },\n                      //   { Confirmed: d.total_cases },\n                      //   { Deaths: d.total_deaths },\n                      //   { Recovered: d.total_recovered },\n                      // ]);\n                      // //Covid19Info\n                      // setTooltipContent([\n                      //   { title: Object.keys(d)[0] },\n                      //   { Confirmed: Object.values(d)[0].confirmed },\n                      //   { Deaths: Object.values(d)[0].deaths },\n                      //   { Recovered: Object.values(d)[0].recovered },\n                      // ]);\n                    } else {\n                      setTooltipContent([\n                        { title: geo.properties.NAME },\n                        { Confirmed: 0 },\n                        { Deaths: 0 },\n                        { Recovered: 0 },\n                        { DeathsToday: 0 },\n                        { ConfirmedToday: 0 },\n                      ]);\n                    }\n                  }}\n                  onMouseLeave={() => {\n                    setTooltipContent(\"\");\n                  }}\n                  style={{\n                    hover: {\n                      fill: \"#F53\",\n                      outline: \"none\",\n                    },\n                    pressed: {\n                      fill: \"#E42\",\n                      outline: \"none\",\n                    },\n                  }}\n                  fill={\n                    d\n                      ? colorScale(Number(d[mapFilter]))\n                      : // ? colorScale(Number(Object.values(d)[0][mapFilter])) // covid19Info\n                        \"#F5F4F6\"\n                  }\n                />\n              );\n            })\n          }\n        </Geographies>\n      )}\n    </ComposableMap>\n  );\n};\n\nexport default MapChart;\n","import React, { Component } from \"react\";\nimport MapSwitchBar from \"components/ui/MapSwitchBar/MapSwitchBar\";\nimport DataMap from \"components/charts/DataMap/DataMap\";\nimport ReactTooltip from \"react-tooltip\";\n\nclass GlobalMap extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  renderTooltipLabelColor(caseType) {\n    switch (caseType[0]) {\n      case \"Confirmed\":\n        return \"rgb(64, 75, 105)\";\n\n      case \"Deaths\":\n        return \"rgb(255, 82, 82)\";\n\n      case \"Recovered\":\n        return \"rgb(76, 175, 80)\";\n\n      default:\n        return \"rgb(64, 75, 105)\";\n    }\n  }\n  render() {\n    return (\n      <div className=\"row\" style={{ marginTop: 20 }}>\n        <div className=\"col-sm-12 col-12\" style={{ minHeight: \"368px\" }}>\n          <div className=\"global-map\">\n            <MapSwitchBar\n              mapFilter={this.props.mapFilter}\n              options={[\"Confirmed\", \"Recovered\", \"Deaths\"]}\n              optionValues={[\"confirmed\", \"recovered\", \"deaths\"]}\n              colors={[\n                \"rgb(68, 138, 255)\",\n                \"rgb(76, 175, 80)\",\n                \"rgb(255, 82, 82)\",\n              ]}\n              onClick={(prop) => this.props.onMapSwitch(prop)}\n            />\n            <DataMap\n              mapFilter={this.props.mapFilter}\n              data={\n                this.props.globalData.length !== 0\n                  ? this.props.globalData.filter(\n                      (location) => location.title !== \"World\"\n                    )\n                  : []\n              }\n              setTooltipContent={(content) =>\n                this.props.onSetTooltipContent(content)\n              }\n            />\n            <ReactTooltip>\n              {this.props.setTooltipContent.length !== 0 ? (\n                <div>\n                  <span\n                    style={{\n                      color: this.renderTooltipLabelColor(\n                        Object.keys(this.props.setTooltipContent[0])\n                      ),\n                      fontWeight: \"bold\",\n                      fontSize: 16,\n                    }}\n                  >\n                    {Object.values(this.props.setTooltipContent[0])}\n                  </span>\n                  <br />\n                  <span\n                    style={{\n                      color: this.renderTooltipLabelColor(\n                        Object.keys(this.props.setTooltipContent[0])\n                      ),\n                      fontWeight: \"bold\",\n                      fontSize: 16,\n                    }}\n                  >\n                    {Object.keys(this.props.setTooltipContent[1])} {\": \"}\n                    {Object.values(this.props.setTooltipContent[1])}{\" \"}\n                    <span style={{ fontSize: 20, fontWeight: \"bold\" }}>\n                      &#9650;\n                    </span>\n                    {Object.values(this.props.setTooltipContent[5])}\n                  </span>\n                  <br />\n                  <span\n                    style={{\n                      color: this.renderTooltipLabelColor(\n                        Object.keys(this.props.setTooltipContent[2])\n                      ),\n                      fontWeight: \"bold\",\n                      fontSize: 16,\n                    }}\n                  >\n                    {Object.keys(this.props.setTooltipContent[2])} {\": \"}\n                    {Object.values(this.props.setTooltipContent[2])}{\" \"}\n                    <span style={{ fontSize: 20, fontWeight: \"bold\" }}>\n                      &#9650;\n                    </span>\n                    {Object.values(this.props.setTooltipContent[4])}\n                  </span>\n                  <br />\n                  <span\n                    style={{\n                      color: this.renderTooltipLabelColor(\n                        Object.keys(this.props.setTooltipContent[3])\n                      ),\n                      fontWeight: \"bold\",\n                      fontSize: 16,\n                    }}\n                  >\n                    {Object.keys(this.props.setTooltipContent[3])} {\": \"}\n                    {Object.values(this.props.setTooltipContent[3])}\n                  </span>\n                  <br />\n                </div>\n              ) : (\n                \"\"\n              )}\n            </ReactTooltip>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default GlobalMap;\n","import React from \"react\";\nimport \"./DataCard.sass\";\n\nconst colors = {\n  Confirmed: \"#e43339\",\n  Deaths: \"#404b69\",\n};\n\nconst DataCard = (props) => {\n  return (\n    <div key={props.index} className=\"col-sm-4 DataCard\">\n      <div className=\"data-card\">\n        <label className=\"data-card-title\">{props.title}</label>\n        <br />\n        <div className=\"row justify-content-center\">\n          {props.data.map((data, index) => {\n            let showIcon = props.showIcon.filter(\n              (content) => Object.keys(content)[0] === Object.keys(data)[0]\n            );\n            let showData = props.dataToday.filter(\n              (content) => Object.keys(content)[0] === Object.keys(data)[0]\n            );\n\n            return (\n              <div className=\"data-card-label\">\n                <div>\n                  {Object.values(data)}\n                  {showIcon.length !== 0 && showIcon[0] ? (\n                    <span\n                      className=\"data-card-span-label\"\n                      style={{\n                        color: colors[Object.keys(data)],\n                      }}\n                    >\n                      {\"  \"}\n                      <span className=\"data-card-span-value\">&#9650;</span>\n                      {showIcon.length !== 0 && showIcon[0]\n                        ? Object.values(showData[0])[0]\n                        : null}\n                    </span>\n                  ) : null}\n                </div>\n                <div>{Object.keys(data)}</div>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default DataCard;\n","import React, { Component } from \"react\";\nimport DataCard from \"components/ui/DataCard/DataCard\";\nimport Virus from \"assets/virus.gif\";\n\nclass Cards extends Component {\n  render() {\n    return this.props.locationLoader === true ? (\n      <div>\n        <img src={Virus} alt=\"Loader\" />\n      </div>\n    ) : (\n      <>\n        <div style={{ marginBottom: 20 }}>\n          <input\n            defaultValue={this.props.searchString}\n            type=\"text\"\n            placeholder=\"Search\"\n            onChange={(e) => this.props.onSearch(e)}\n          />\n        </div>\n        <div className=\"row\">\n          {this.props.globalData.length !== 0\n            ? this.props.globalData\n                .filter(\n                  (location) =>\n                    location.title !== \"World\" &&\n                    location.title\n                      .toLowerCase()\n                      .includes(this.props.searchString)\n                )\n                .map((location, index) => {\n                  return (\n                    <DataCard\n                      key={index}\n                      title={location.title}\n                      location={location}\n                      index={index}\n                      data={[\n                        {\n                          Confirmed: location.confirmed,\n                        },\n                        {\n                          Active: location.active,\n                        },\n                        {\n                          Deaths: location.deaths,\n                        },\n                        {\n                          Recovered: location.recovered,\n                        },\n                        { Serious: location.critical },\n                        { Tests: location.totaltests },\n                      ]}\n                      showIcon={[\n                        {\n                          Confirmed:\n                            location.confirmed_today !== \"\" ? true : false,\n                        },\n                        {\n                          Deaths: location.deaths_today !== \"\" ? true : false,\n                        },\n                      ]}\n                      dataToday={[\n                        {\n                          Confirmed: location.confirmed_today,\n                        },\n                        {\n                          Deaths: location.deaths_today,\n                        },\n                      ]}\n                    />\n                  );\n                })\n            : null}\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Cards;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport \"index.css\"\n\nconst LEFT_PAGE = 'LEFT';\nconst RIGHT_PAGE = 'RIGHT';\n\n/**\n * Helper method for creating a range of numbers\n * range(1, 5) => [1, 2, 3, 4, 5]\n */\nconst range = (from, to, step = 1) => {\n  let i = from;\n  const range = [];\n\n  while (i <= to) {\n    range.push(i);\n    i += step;\n  }\n\n  return range;\n}\n\nclass Pagination extends Component {\n\n  constructor(props) {\n    super(props);\n    const { totalRecords = null, pageLimit = 30, pageNeighbours = 0 } = props;\n\n    this.pageLimit = typeof pageLimit === 'number' ? pageLimit : 30;\n    this.totalRecords = typeof totalRecords === 'number' ? totalRecords : 0;\n\n    // pageNeighbours can be: 0, 1 or 2\n    this.pageNeighbours = typeof pageNeighbours === 'number'\n      ? Math.max(0, Math.min(pageNeighbours, 2))\n      : 0;\n\n    this.totalPages = Math.ceil(this.totalRecords / this.pageLimit);\n\n    this.state = { currentPage: 1 };\n  }\n\n  componentDidMount() {\n    this.gotoPage(1);\n  }\n\n  gotoPage = page => {\n    const { onPageChanged = f => f } = this.props;\n\n    const currentPage = Math.max(0, Math.min(page, this.totalPages));\n\n    const paginationData = {\n      currentPage,\n      totalPages: this.totalPages,\n      pageLimit: this.pageLimit,\n      totalRecords: this.totalRecords\n    };\n\n    this.setState({ currentPage }, () => onPageChanged(paginationData));\n  }\n\n  handleClick = page => evt => {\n    evt.preventDefault();\n    this.gotoPage(page);\n  }\n\n  handleMoveLeft = evt => {\n    evt.preventDefault();\n    this.gotoPage(this.state.currentPage - (this.pageNeighbours * 2) - 1);\n  }\n\n  handleMoveRight = evt => {\n    evt.preventDefault();\n    this.gotoPage(this.state.currentPage + (this.pageNeighbours * 2) + 1);\n  }\n\n  /**\n   * Let's say we have 10 pages and we set pageNeighbours to 2\n   * Given that the current page is 6\n   * The pagination control will look like the following:\n   *\n   * (1) < {4 5} [6] {7 8} > (10)\n   *\n   * (x) => terminal pages: first and last page(always visible)\n   * [x] => represents current page\n   * {...x} => represents page neighbours\n   */\n  fetchPageNumbers = () => {\n\n    const totalPages = this.totalPages;\n    const currentPage = this.state.currentPage;\n    const pageNeighbours = this.pageNeighbours;\n\n    /**\n     * totalNumbers: the total page numbers to show on the control\n     * totalBlocks: totalNumbers + 2 to cover for the left(<) and right(>) controls\n     */\n    const totalNumbers = (this.pageNeighbours * 2) + 3;\n    const totalBlocks = totalNumbers + 2;\n\n    if (totalPages > totalBlocks) {\n\n      const startPage = Math.max(2, currentPage - pageNeighbours);\n      const endPage = Math.min(totalPages - 1, currentPage + pageNeighbours);\n\n      let pages = range(startPage, endPage);\n\n      /**\n       * hasLeftSpill: has hidden pages to the left\n       * hasRightSpill: has hidden pages to the right\n       * spillOffset: number of hidden pages either to the left or to the right\n       */\n      const hasLeftSpill = startPage > 2;\n      const hasRightSpill = (totalPages - endPage) > 1;\n      const spillOffset = totalNumbers - (pages.length + 1);\n\n      switch (true) {\n        // handle: (1) < {5 6} [7] {8 9} (10)\n        case (hasLeftSpill && !hasRightSpill): {\n          const extraPages = range(startPage - spillOffset, startPage - 1);\n          pages = [LEFT_PAGE, ...extraPages, ...pages];\n          break;\n        }\n\n        // handle: (1) {2 3} [4] {5 6} > (10)\n        case (!hasLeftSpill && hasRightSpill): {\n          const extraPages = range(endPage + 1, endPage + spillOffset);\n          pages = [...pages, ...extraPages, RIGHT_PAGE];\n          break;\n        }\n\n        // handle: (1) < {4 5} [6] {7 8} > (10)\n        case (hasLeftSpill && hasRightSpill):\n        default: {\n          pages = [LEFT_PAGE, ...pages, RIGHT_PAGE];\n          break;\n        }\n      }\n\n      return [1, ...pages, totalPages];\n\n    }\n\n    return range(1, totalPages);\n\n  }\n\n  render() {\n\n    if (!this.totalRecords || this.totalPages === 1) return null;\n\n    const { currentPage } = this.state;\n    const pages = this.fetchPageNumbers();\n\n    return (\n      <Fragment>\n        <nav aria-label=\"Countries Pagination\">\n          <ul className=\"pagination\">\n            { pages.map((page, index) => {\n\n              if (page === LEFT_PAGE) return (\n                <li key={index} className=\"page-item\">\n                  <a className=\"page-link\" href=\"#\" aria-label=\"Previous\" onClick={this.handleMoveLeft}>\n                    <span aria-hidden=\"true\">&laquo;</span>\n                    <span className=\"sr-only\">Previous</span>\n                  </a>\n                </li>\n              );\n\n              if (page === RIGHT_PAGE) return (\n                <li key={index} className=\"page-item\">\n                  <a className=\"page-link\" href=\"#\" aria-label=\"Next\" onClick={this.handleMoveRight}>\n                    <span aria-hidden=\"true\">&raquo;</span>\n                    <span className=\"sr-only\">Next</span>\n                  </a>\n                </li>\n              );\n\n              return (\n                <li key={index} className={`page-item${ currentPage === page ? ' active' : ''}`}>\n                  <a className=\"page-link\" href=\"#\" onClick={ this.handleClick(page) }>{ page }</a>\n                </li>\n              );\n\n            }) }\n\n          </ul>\n        </nav>\n      </Fragment>\n    );\n\n  }\n}\n\nPagination.propTypes = {\n  totalRecords: PropTypes.number.isRequired,\n  pageLimit: PropTypes.number,\n  pageNeighbours: PropTypes.number,\n  onPageChanged: PropTypes.func\n};\n\nexport default Pagination;","import React, { Component } from \"react\";\nimport Virus from \"assets/virus.gif\";\nimport Countrys from \"utils/CountryList.json\";\nimport Select from \"react-select\";\nimport SimpleLineChart from \"components/charts/SimpleLineChart/SimpleLineChart\";\nimport Pagination from \"components/ui/Pagination/Pagination\";\nimport _ from \"lodash\";\n\nclass ChartsCard extends Component {\n  render() {\n    const colourStyles = {\n      control: (styles) => ({\n        ...styles,\n        backgroundColor: \"white\",\n        marginRight: 15,\n        marginBottom: 15,\n      }),\n      option: (styles, { data, isDisabled, isFocused, isSelected }) => {\n        return {\n          ...styles,\n          backgroundColor: isDisabled\n            ? null\n            : isSelected\n            ? \"#404b69\"\n            : isFocused\n            ? \"white\"\n            : null,\n          color: isDisabled ? \"#ccc\" : isSelected ? \"white\" : \"#404b69\",\n          cursor: isDisabled ? \"not-allowed\" : \"default\",\n\n          \":active\": {\n            ...styles[\":active\"],\n            backgroundColor: !isDisabled && (isSelected ? \"#404b69\" : \"white\"),\n          },\n        };\n      },\n    };\n\n    const options = Object.keys(Countrys).map((location) => {\n      return {\n        value: location,\n        label: Countrys[location],\n      };\n    });\n\n    let date = new Date();\n    let todayDate =\n      date.getMonth() + 1 + \"/\" + date.getDate() + \"/\" + date.getFullYear();\n\n    return (\n      <>\n        <div>\n          <Select\n            isClearable={true}\n            onChange={(selectedOption) => {\n              this.setState({\n                timelines: [],\n                selectedCountry: true,\n              });\n              this.getChartsData(\n                selectedOption === null\n                  ? _.chunk(Object.keys(Countrys), 9)[0]\n                  : [selectedOption.value.toUpperCase()]\n              );\n            }}\n            styles={colourStyles}\n            options={options}\n          />\n        </div>\n\n        <div className=\"row\">\n          {this.props.locationLoader === true ? (\n            <div style={{ width: \"100%\" }}>\n              <img src={Virus} alt=\"Loader\" />\n            </div>\n          ) : this.props.timelines.length !== 0 ? (\n            this.props.timelines.map((timeline, index1) => {\n              let data = Object.keys(timeline.timelineitems[0])\n                .filter((data) => data !== \"stat\" && data !== todayDate)\n                .map((dataKey, index) => {\n                  return {\n                    name: dataKey,\n                    Confirmed: timeline.timelineitems[0][dataKey].total_cases,\n                    Deaths: timeline.timelineitems[0][dataKey].total_deaths,\n                    Recovered:\n                      timeline.timelineitems[0][dataKey].total_recoveries,\n                    [\"New Conf.\"]:\n                      timeline.timelineitems[0][dataKey].new_daily_cases,\n                    [\"New Deaths\"]:\n                      timeline.timelineitems[0][dataKey].new_daily_deaths,\n                  };\n                });\n              let cardValue =\n                this.props.cards.length !== 0 &&\n                typeof Object.values(\n                  this.props.cards[0].countryitems[0]\n                ).filter(\n                  (country) =>\n                    country !== \"ok\" &&\n                    country.title === timeline.countrytimelinedata[0].info.title\n                )[0];\n              let filteredTitle = Object.values(\n                this.props.cards[0].countryitems[0]\n              ).filter(\n                (country) =>\n                  country !== \"ok\" &&\n                  country.title === timeline.countrytimelinedata[0].info.title\n              )[0];\n              let totalCases = Object.values(timeline.timelineitems[0])[\n                Object.values(timeline.timelineitems[0]).length - 2\n              ];\n              let confirmed =\n                cardValue !== \"undefined\"\n                  ? filteredTitle.total_cases\n                  : totalCases.total_cases;\n              let deaths =\n                cardValue !== \"undefined\"\n                  ? filteredTitle.total_deaths\n                  : totalCases.total_deaths;\n              let recovered =\n                cardValue !== \"undefined\"\n                  ? filteredTitle.total_recovered\n                  : totalCases.total_recoveries;\n              let NewConfirmed =\n                cardValue !== \"undefined\"\n                  ? filteredTitle.total_new_cases_today\n                  : totalCases.new_daily_cases;\n              let NewDeaths =\n                cardValue !== \"undefined\"\n                  ? filteredTitle.total_new_deaths_today\n                  : totalCases.new_daily_deaths;\n              let countryItemsFiltered = Object.values(\n                this.props.cards[0].countryitems[0]\n              ).filter(\n                (country) =>\n                  country.title === timeline.countrytimelinedata[0].info.title\n              )[0];\n              if (cardValue !== \"undefined\") {\n                data.push({\n                  name: todayDate,\n                  Confirmed: countryItemsFiltered.total_cases,\n                  Deaths: countryItemsFiltered.total_deaths,\n                  Recovered: countryItemsFiltered.total_recovered,\n                  [\"New Conf.\"]: countryItemsFiltered.total_new_cases_today,\n                  [\"New Deaths\"]: countryItemsFiltered.total_new_deaths_today,\n                });\n              }\n              return (\n                <div key={index1} className=\"col-sm-4 Chart-Card\">\n                  <div className=\"chart-card-style\">\n                    <label className=\"chart-card-title\">\n                      {timeline.countrytimelinedata[0].info.title}\n                    </label>\n                    <br />\n                    <div className=\"row justify-content-center\">\n                      <div className=\"chart-card-label-confirmed\">\n                        <div>\n                          {confirmed}\n                          {NewConfirmed === 0 ? null : (\n                            <span style={{ fontSize: 13 }}>\n                              {\"  \"}\n                              <span\n                                style={{\n                                  fontSize: 17,\n                                  fontWeight: \"bold\",\n                                }}\n                              >\n                                &#9650;\n                              </span>\n                              {NewConfirmed}\n                            </span>\n                          )}\n                        </div>\n                        <div>Confirmed</div>\n                      </div>\n                      <div className=\"chart-card-label-deaths\">\n                        <div>\n                          {deaths}\n                          {NewDeaths === 0 ? null : (\n                            <span style={{ fontSize: 13 }}>\n                              {\"  \"}\n                              <span\n                                style={{\n                                  fontSize: 17,\n                                  fontWeight: \"bold\",\n                                }}\n                              >\n                                &#9650;\n                              </span>\n                              {NewDeaths}\n                            </span>\n                          )}\n                        </div>\n                        <div>Deaths</div>\n                      </div>\n                      <div className=\"chart-card-label-recovered\">\n                        <div>{recovered}</div>\n                        <div>Recovered</div>\n                      </div>\n                    </div>\n                    <SimpleLineChart\n                      chart={\"AreaChart\"}\n                      labels={[\n                        \"Confirmed\",\n                        \"Recovered\",\n                        \"Deaths\",\n                        \"New Conf.\",\n                        \"New Deaths\",\n                      ]}\n                      colors={[\n                        \"#e43339\",\n                        \"#006266\",\n                        \"#535c68\",\n                        \"#192a56\",\n                        \"#192a56\",\n                      ]}\n                      data={data}\n                    />\n                  </div>\n                </div>\n              );\n            })\n          ) : null}\n          <br />\n          {!this.props.selectedCountry ? (\n            <div className=\"row\" style={{ width: \"100%\", padding: 30 }}>\n              <Pagination\n                totalRecords={Object.keys(Countrys).length}\n                pageLimit={9}\n                pageNeighbours={1}\n                onPageChanged={this.props.onPageChanged}\n              />\n            </div>\n          ) : null}\n        </div>\n      </>\n    );\n  }\n}\n\nexport default ChartsCard;\n","import React, { Component } from \"react\";\nimport \"components/Backup/App.css\";\nimport \"react-table-6/react-table.css\";\nimport ErrorBoundary from \"components/ui/ErrorBoundry/ErrorBoundry\";\nimport Countrys from \"utils/CountryList.json\";\nimport _ from \"lodash\";\nimport \"components/container/Global/Global.sass\";\nimport Header from \"components/ui/Header/Header\";\nimport NavigationBar from \"components/ui/NavigationBar/NavigationBar\";\nimport Footer from \"components/ui/Footer/Footer\";\nimport Table from \"components/container/Global/SubComponents/Table\";\nimport NumberCard from \"components/container/Global/SubComponents/NumberCard\";\nimport Analytics from \"components/container/Global/SubComponents/Analytics\";\nimport GlobalMap from \"components/container/Global/SubComponents/GlobalMap\";\nimport Cards from \"components/container/Global/SubComponents/Cards\";\nimport ChartsCard from \"components/container/Global/SubComponents/ChartsCard\";\n\nclass Global extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showGlobalChartType: \"AreaChart\",\n      searchString: \"\",\n      cards: [],\n      ui: \"/\",\n      width: 0,\n      height: 0,\n      globalTimelines: [],\n      setTooltipContent: \"\",\n      mapFilter: \"confirmed\",\n      filterByCases: \"confirmed\",\n      displayBySort: \"All\",\n      currentPage: 0,\n      currentCardPage: 0,\n      totalCardPages: 0,\n      totalPages: 0,\n      globalData: [],\n      deathsRate: [],\n      locationLoader: false,\n      selectedCountry: false,\n      data: [],\n      timelines: [],\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.updateDimensions);\n\n    this.setState({\n      locationLoader: true,\n    });\n    window.addEventListener(\"focus\", () => {\n      this.getGlobalData();\n      this.getDailyData();\n      this.getDeathRates();\n      this.getCardsData([1]);\n    });\n\n    this.getGlobalData();\n    this.getDailyData();\n    this.getDeathRates();\n    this.getCardsData([1]);\n  }\n\n  getDeathRates() {\n    fetch(`https://covid19-global-api1.herokuapp.com/deaths-rate.json`, {\n      method: \"GET\",\n    })\n      .then((res) => res.json())\n      .then((response) => {\n        this.setState({\n          deathsRate: response,\n        });\n      })\n      .catch((error) => {\n        this.setState({\n          locationLoader: false,\n        });\n      });\n  }\n\n  getGlobalData() {\n    fetch(`https://covid19-global-api1.herokuapp.com/global.json`, {\n      header: { \"Access-Control-Allow-Origin\": \"*\" },\n      method: \"GET\",\n    })\n      .then((res) => res.json())\n      .then((response) => {\n        this.setState({\n          globalData: response,\n        });\n      })\n      .catch((error) => {\n        this.setState({\n          locationLoader: false,\n        });\n      });\n  }\n\n  getDailyData() {\n    fetch(`https://covid19.mathdro.id/api/daily`, {\n      method: \"GET\",\n    })\n      .then((res) => res.json())\n      .then((response) => {\n        this.setState({\n          globalTimelines: response,\n        });\n      })\n      .catch((error) => {\n        this.setState({\n          locationLoader: false,\n        });\n      });\n  }\n\n  getCardsData(cardId) {\n    let cards = [];\n    this.setState({\n      cards: [],\n      locationLoader: true,\n    });\n    cardId.map((location) => {\n      fetch(\n        `https://cors-proxy-pass.herokuapp.com/https://thevirustracker.com/free-api?countryTotals=ALL`,\n        {\n          method: \"GET\",\n        }\n      )\n        .then((res) => res.json())\n        .then((response) => {\n          this.setState({\n            locationLoader: false,\n            cards: cards.concat(response),\n          });\n        })\n        .catch((error) => {\n          this.setState({\n            locationLoader: false,\n          });\n        });\n    });\n  }\n\n  getChartsData(data) {\n    data.map((location) => {\n      fetch(\n        `https://cors-proxy-pass.herokuapp.com/https://thevirustracker.com/free-api?countryTimeline=${location}`,\n        {\n          method: \"GET\",\n        }\n      )\n        .then((res) => res.json())\n        .then((response) => {\n          this.setState((state) => {\n            const timelines = state.timelines.concat(response);\n            const locationLoader = false;\n            return {\n              timelines,\n              locationLoader,\n            };\n          });\n        })\n        .catch((error) => {\n          this.setState({\n            locationLoader: false,\n          });\n        });\n    });\n  }\n\n  onPageChanged = (data1) => {\n    const { currentPage, totalPages } = data1;\n\n    this.setState({\n      timelines: [],\n      locationLoader: true,\n    });\n    if (!this.state.selectedCountry) {\n      this.getChartsData(_.chunk(Object.keys(Countrys), 9)[currentPage - 1]);\n    }\n\n    this.setState({\n      currentPage: currentPage - 1,\n      totalPages: totalPages,\n    });\n  };\n\n  updateDimensions = () => {\n    this.setState({ width: window.innerWidth, height: window.innerHeight });\n  };\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateDimensions);\n  }\n\n  render() {\n    return (\n      <ErrorBoundary>\n        <div className=\"Global\">\n          <div className=\"container\">\n            <div>\n              <Header\n                dashboard={\"Global\"}\n                history={this.props.history}\n                width={this.state.width}\n              />\n            </div>\n            <div style={{ minHeight: \"90vh\" }}>\n              <NumberCard globalData={this.state.globalData} />\n              <NavigationBar\n                type=\"Global\"\n                ui={this.state.ui}\n                options={[\"Analytics\", \"Card\", \"Table\", \"Map\"]}\n                optionRoutes={[\"/\", \"/card\", \"/table\", \"/map\"]}\n                onClick={(route) => {\n                  this.setState({\n                    ui: route,\n                  });\n                }}\n              />\n              {this.state.ui === \"/\" ? (\n                <Analytics\n                  globalTimelines={this.state.globalTimelines}\n                  deathsRate={this.state.deathsRate}\n                  globalData={this.state.globalData}\n                  showGlobalChartType={this.state.showGlobalChartType}\n                  filterByCases={this.state.filterByCases}\n                  onSwitchBar={(prop) => {\n                    this.setState({\n                      showGlobalChartType: prop,\n                    });\n                  }}\n                  onChange={(selectedOption) => {\n                    this.setState({\n                      filterByCases:\n                        selectedOption === null\n                          ? \"confirmed\"\n                          : selectedOption.value,\n                    });\n                  }}\n                />\n              ) : null}\n              {this.state.ui === \"/map\" ? (\n                <GlobalMap\n                  mapFilter={this.state.mapFilter}\n                  globalData={this.state.globalData}\n                  setTooltipContent={this.state.setTooltipContent}\n                  onSetTooltipContent={(content) => {\n                    this.setState({ setTooltipContent: content });\n                  }}\n                  onMapSwitch={(prop) => {\n                    this.setState({\n                      mapFilter: prop,\n                    });\n                  }}\n                />\n              ) : null}\n              {this.state.ui === \"/table\" ? (\n                <Table globalData={this.state.globalData} />\n              ) : null}\n              {this.state.ui === \"/card\" ? (\n                <Cards\n                  locationLoader={this.state.locationLoader}\n                  searchString={this.state.searchString}\n                  globalData={this.state.globalData}\n                  onSearch={(e) => {\n                    this.setState({\n                      searchString: e.target.value.toLowerCase(),\n                      selectedCountry: false,\n                    });\n                  }}\n                />\n              ) : null}\n              {this.state.ui === \"/chart\" ? (\n                <ChartsCard\n                  locationLoader={this.state.locationLoader}\n                  cards={this.state.cards}\n                  timelines={this.state.timelines}\n                  selectedCountry={this.state.selectedCountry}\n                  onPageChanged={this.onPageChanged}\n                />\n              ) : null}\n            </div>\n            <Footer />\n          </div>\n        </div>\n      </ErrorBoundary>\n    );\n  }\n}\n\nexport default Global;\n","import React, { Component } from \"react\";\nimport { Switch, Route, withRouter } from \"react-router-dom\";\nimport India from \"./components/container/India/India\";\nimport ReactGA from \"react-ga\";\nimport { createBrowserHistory } from \"history\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { fas } from \"@fortawesome/free-solid-svg-icons\";\nimport brands from \"@fortawesome/fontawesome-free-brands\";\nimport Global from \"./components/container/Global/Global\";\nlibrary.add(fas, brands);\nconst history = createBrowserHistory();\n\nReactGA.initialize(\"UA-162840601-1\", { debug: true });\nReactGA.set({\n  page:\n    window.location.origin + window.location.pathname + window.location.hash,\n}); // Update the user's current page\nReactGA.pageview(\n  window.location.origin + window.location.pathname + window.location.hash\n);\n\nhistory.listen((location) => {\n  ReactGA.set({ page: location.origin + location.pathname + location.hash }); // Update the user's current page\n  ReactGA.pageview(location.origin + location.pathname + location.hash); // Record a pageview for the given page\n});\n\nexport class Index extends Component {\n  render() {\n    return (\n      <div>\n        <React.Fragment>\n          <Switch>\n            <Route path=\"/india\" component={India} />\n            <Route path=\"/\" component={Global} />\n          </Switch>\n        </React.Fragment>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Index);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { HashRouter } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport ErrorBoundry from \"components/ui/ErrorBoundry/ErrorBoundry\";\nimport { Index } from \"./Routes\";\n\nconst routing = (\n  <HashRouter>\n    <ErrorBoundry>\n      <Index />\n    </ErrorBoundry>\n  </HashRouter>\n);\n\nReactDOM.render(routing, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/virus.2d7d3b99.gif\";"],"sourceRoot":""}